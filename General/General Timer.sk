options:
	prefix: <##00bfff>[<##00fa9a>Timer<##00bfff>]

command /timer <text> <text>:
	usage: /timer <argument> <property>
	permission: sk.admin
	trigger:
		if arg 1 is "stop":
			stopTimer(arg 2)

function startTimer(prop: text, timersec: number, title: text, color: object, countdown: number = 5):
	if {BossBarTimer::%{_prop}%} is true:
		loop all players:
			loop-player has permission "sk.admin"
			message formatted "{@prefix} §b§l%{_prop}%§cのタイマーは既に開始されています!" to loop-player
		stop
	set {BossBarTimer::%{_prop}%} to true
	set {_time} to {_timersec}
	set {_timer.display} to displayTimer({_timersec})
	set {_timer.title} to "%{_title}% §f§l%{_timer.display}%"
	create bossbar titled {_timer.title} and id {_prop} for all players with progress 100 with colors green with style segmented 10
	loop {_timersec} times:
		if {BossBarTimer::%{_prop}%} is not true:
			continue
		wait a second
		subtract 1 from {_time}
		# カウントダウン
		if {_time} <= {_countdown}:
			{_time} is not 0
			loop all players:
				message "{@prefix} §b%{_time}%§d..." to loop-player
				play sound "block.note_block.pling" with volume 1 with pitch 1 to loop-player
		set {_timer.display} to displayTimer({_time})
		set {_timer.title} to "%{_title}% §f§l%{_timer.display}%"
		set {_timer.value} to {_time} / {_timersec} * 100
		set bossbar {_prop} title to {_timer.title}
		set bossbar {_prop} value to {_timer.value}
		loop all players:
			set bossbar {_prop} for loop-player
	remove bossbar "%{_prop}%"
	if {BossBarTimer::%{_prop}%} is true:
		stopTimer({_prop})

function stopTimer(prop: text):
	if {BossBarTimer::%{_prop}%} is not true:
		loop all players:
			loop-player has permission "sk.admin"
			message formatted "{@prefix} §b§l%{_prop}%§cのタイマーは開始されていません!" to loop-player
			stop
	delete {BossBarTimer::%{_prop}%}
	executeEndTimer({_prop})

# タイマー終了時の処理 サーバごとに変更が必要
local function executeEndTimer(prop: text):
	if {_prop} contains "Kit":
		kitTimer_End()



function displayTimer(sec: number) :: text:
	set {_minute} to 0
	set {_second} to 0
	while {_sec} >= 60:
		if {_sec} >= 60:
			add 1 to {_minute}
			subtract 60 from {_sec}
	set {_second} to {_sec}
	if {_minute} < 10:
		set {_minute} to "0%{_minute}%"
	if {_second} < 10:
		set {_second} to "0%{_second}%"
	set {_display} to "%{_minute}%:%{_second}%"
	return {_display}