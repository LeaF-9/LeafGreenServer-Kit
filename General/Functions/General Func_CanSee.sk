function playerCanSee(player: player, target: player) :: boolean:
	set {_vector.base} to setVector(location of {_player}, location of {_target})
	set {_dis} to distance between {_player} and {_target}
	set {_toloc} to location {_dis} meters in front of {_player}
	set {_vector.target} to setVector(location of {_player}, {_toloc})
	set {_vector} to {_vector.target} -- {_vector.base}
	set {_length} to squared length of {_vector}
	if {_length} <= 0.5:
		set {_m} to 0
		set {_looploc} to location of {_player}
		set yaw of {_looploc} to yaw of {_vector.base}
		set pitch of {_looploc} to pitch of {_vector.base}
		loop round({_dis}) times:
			add 1 to {_m}
			set {_bl} to location {_m} meters in front of {_looploc}
			if block at {_bl} is not passable:
				set {_false} to true
		if {_false} is not set:
			# log "playerCanSee(): true"
			return true
		else:
			# log "playerCanSee(): false"
			return false
	else:
		# log "playerCanSee(): false"
		return false