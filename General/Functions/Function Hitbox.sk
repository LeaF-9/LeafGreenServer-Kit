function checkHitEntities(loc: location) :: entities:
	loop all entities in radius 3 around {_loc}:
		delete {_continue}
		if checkEntityType(loop-entity, armor stand) is true:
			continue
		if checkEntityType(loop-entity, block display) is true:
			continue
		if checkEntityType(loop-entity, item display) is true:
			continue
		if checkEntityType(loop-entity, text display) is true:
			continue
		if checkEntityType(loop-entity, falling block) is true:
			continue

		if metadata value "shield entity" of loop-entity is true:
			if {_shield} is set:
				continue
			set {_shield} to true
		
		if {_continue} is true:
			continue
		checkHitting(loop-entity, {_loc}) is true
		add loop-entity to {_entities::*}
	return {_entities::*}

function checkHitting(entity: entity, loc: location) :: boolean:
	set {_bool} to false
	set {_BoundingBox} to {_entity}.getBoundingBox()
	set {_vec.min} to {_boundingBox}.getMin()
	set {_vec.max} to {_boundingBox}.getMax()

	set {_world} to world of {_entity}
	set {_loc.min} to location of {_vec.min} in {_world}
	set {_loc.max} to location of {_vec.max} in {_world}

	if:
		x-pos of {_loc} is between x-pos of {_loc.min} and x-pos of {_loc.max}
		y-pos of {_loc} is between y-pos of {_loc.min} and y-pos of {_loc.max}
		z-pos of {_loc} is between z-pos of {_loc.min} and z-pos of {_loc.max}
	then:
		set {_bool} to true
	return {_bool}