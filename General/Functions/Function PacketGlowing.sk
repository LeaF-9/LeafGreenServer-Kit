function packetGlowing(player: player, target: entity):
	set {_pkt} to new play_server_entity_metadata packet
	set field 0 of {_pkt} to id of {_target}
	set {_dw} to new data watcher for {_target}
	set datawatcher index 0 of {_dw} to (64 as byte) # 0x40
	set field 1 of {_pkt} to {_dw}
	send {_player} packet {_pkt}

function packetUnglowing(player: player, target: entity):
	set {_pkt} to new play_server_entity_metadata packet
	set field 0 of {_pkt} to id of {_target}
	set {_dw} to new data watcher for {_target}
	set datawatcher index 0 of {_dw} to (0 as byte) # 0x40
	set field 1 of {_pkt} to {_dw}
	send {_player} packet {_pkt}

function packetGlowing_SR(player: player, target: entity):
	set {_manager} to ProtocolLibrary.getProtocolManager()
	set {_packet} to {_manager}.createPacket(PacketType.Play.Server.ENTITY_METADATA)

	{_packet}.getIntegers().write(0, {_target}.getEntityId())

	set {_watcher} to new WrappedDataWatcher()
	set {_serializer} to WrappedDataWatcher.Registry.get(Byte.class)
	
	{_watcher}.setEntity({_target})

	{_watcher}.setObject(0, {_serializer}, 64.byteValue())

	set {_l} to (new ArrayList())
	set {_li::*} to ...{_watcher}.getWatchableObjects().stream()

	loop {_li::*}:
		set {_do} to loop-value.getWatcherObject()
		{_l}.add(new WrappedDataValue({_do}.getIndex(), {_do}.getSerializer(), loop-value.getRawValue()))

	{_packet}.getDataValueCollectionModifier().write(0, {_l})
	{_manager}.sendServerPacket({_player}, {_packet})