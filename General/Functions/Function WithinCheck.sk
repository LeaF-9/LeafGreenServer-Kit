function checkWithin(checker: location, loc-1: location, loc-2: location) :: boolean:
	# x
	add x-pos of {_loc-1} to {_loc.x::*}
	add x-pos of {_loc-2} to {_loc.x::*}
	set {_min.x} to min({_loc.x::*})
	set {_max.x} to max({_loc.x::*})
	set {_checker.x} to x-pos of {_checker}
	if {_checker.x} < {_min.x}:
		return false
	if {_checker.x} > {_max.x}:
		return false

	# y
	add y-pos of {_loc-1} to {_loc.y::*}
	add y-pos of {_loc-2} to {_loc.y::*}
	set {_min.y} to min({_loc.y::*})
	set {_max.y} to max({_loc.y::*})
	set {_checker.y} to y-pos of {_checker}
	if {_checker.y} < {_min.y}:
		return false
	if {_checker.y} > {_max.y}:
		return false

	# z
	add z-pos of {_loc-1} to {_loc.z::*}
	add z-pos of {_loc-2} to {_loc.z::*}
	set {_min.z} to min({_loc.z::*})
	set {_max.z} to max({_loc.z::*})
	set {_checker.z} to z-pos of {_checker}
	if {_checker.z} < {_min.z}:
		return false
	if {_checker.z} > {_max.z}:
		return false

	return true