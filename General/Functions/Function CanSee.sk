function playerCanSee(player: player, target: player) :: boolean:
	set {_cansee} to checkCanSee({_player}, location of head of {_target})

function checkCanSee(player: player, targetloc: location) :: boolean:
	set {_fromloc} to location of head of {_player}
	set {_vector.base} to setVector({_fromloc}, {_targetloc})
	set {_dis} to distance between {_fromloc} and {_targetloc}
	set {_toloc} to location {_dis} meters in front of {_fromloc}
	set {_vector.target} to setVector({_fromloc}, {_toloc})
	set {_vector} to {_vector.target} - {_vector.base}
	set {_length} to squared length of {_vector}
	if {_length} <= 0.5:
		set {_m} to 0
		set {_looploc} to {_fromloc}
		set yaw of {_looploc} to yaw of {_vector.base}
		set pitch of {_looploc} to pitch of {_vector.base}
		loop round({_dis}) times:
			add 1 to {_m}
			set {_bl} to location {_m} meters in front of {_looploc}
			if block at {_bl} is not passable:
				set {_false} to true
		if {_false} is not set:
			# log "checkCanSee(): true"
			return true
		else:
			# log "checkCanSee(): false"
			return false
	else:
		# log "checkCanSee(): false"
		return false