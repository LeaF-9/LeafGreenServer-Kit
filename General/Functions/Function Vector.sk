function randomVector(power: number = 0) :: vector:
	set {_x} to a random number between -1 and 1
	set {_y} to a random number between -1 and 1
	set {_z} to a random number between -1 and 1
	set {_vector} to vector({_x}, {_y}, {_z})
	set {_vector} to normalized {_vector}
	if {_power} is 0:
		set {_pow} to a random number between 0 and 2
	else:
		set {_pow} to {_power}
	set {_vector} to {_vector} * vector({_pow}, {_pow}, {_pow})
	return {_vector}

function setVector(from: location, to: location, power: number = 1) :: vector:
	set {_fromv} to vector of {_from}
	set {_tov} to vector of {_to}
	set {_vector} to {_tov} - {_fromv}
	if {_power} is not 0:
		set {_vector} to normalized {_vector}
		set {_vector} to {_vector} * vector({_power}, {_power}, {_power})
	return {_vector}

function getVectorFromYawAxis(baseloc: location, power: number = 1) :: vector:
	set {_playerLoc} to {_baseloc}

	set {_toLoc} to {_baseloc}
	add 90 to pitch of {_toLoc}
	set {_toLoc} to location 10 meters in front of {_toLoc}

	set {_vector} to setVector({_playerLoc}, {_toLoc}, {_power})
	return {_vector}

function getVectorFromPitchAxis(baseloc: location, power: number = 1) :: vector:
	set {_playerLoc} to {_baseloc}

	set {_toLoc} to location 10 meters to the left of ({_playerLoc})

	set {_vector} to setVector({_playerLoc}, {_toLoc}, {_power})
	return {_vector}

function getVectorFromRollAxis(baseloc: location, power: number = 1) :: vector:
	set {_playerLoc} to {_baseloc}

	set {_toLoc} to location 10 meters in front of {_playerLoc}

	set {_vector} to setVector({_playerLoc}, {_toLoc}, {_power})
	return {_vector}