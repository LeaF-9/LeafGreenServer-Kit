# Ninjaのスキル Ver1.0.0

# Weapons
function kitWeaponNinja(player: player):
	set {_tool} to {_player}'s tool
	set {_item.num} to kitItemNumberChecker({_tool})
	checkCT({_player}, name of {_player}'s tool) is true
	if {_item.num} is 1:
		kitWeapon_Ninja_1({_player})
	else if {_item.num} is 2:
		kitWeapon_Ninja_2({_player})
	else if {_item.num} is 3:
		kitWeapon_Ninja_3({_player})
	else if {_item.num} is 4:
		kitWeapon_Ninja_4({_player})
	else if {_item.num} is 5:
		kitWeapon_Ninja_5({_player})

function kitWeapon_Ninja_1(player: player):
	name of {_player}'s offhand tool contains "Shuriken"
	shoot a snowball from {_player} at speed 5
	set metadata value "shuriken" of shot projectile to "true"
	set item of shot projectile to prismarine crystal
	drawDot count 1, particle "redstone", RGB 176, 196, 222, center shot projectile, visibleRange 30, keepFor 0.5 seconds
	playSound("entity.arrow.shoot", 1, 2, player)
	set {_name} to display name of {_player}'s offhand tool
	set {_lore::*} to lore of {_player}'s offhand tool
	remove a prismarine crystal named {_name} with lore {_lore::*} from {_player}

function kitWeapon_Ninja_2(player: player):
	name of {_player}'s offhand tool contains "Kunai"
	shoot an arrow from {_player} at speed 3
	set metadata value "kunai" of shot projectile to "true"
	drawDot count 1, particle "redstone", RGB 70, 130, 180, center shot projectile, visibleRange 30, keepFor 0.5 seconds
	playSound("entity.arrow.shoot", 1, 1.5, {_player})
	set {_name} to display name of {_player}'s offhand tool
	set {_lore::*} to lore of {_player}'s offhand tool
	remove a prismarine shard named {_name} with lore {_lore::*} from {_player}

on projectile hit:
	if projectile is an arrow:
		metadata value "kunai" of projectile is "true"
		if {Stats.%shooter%::LastNinjutsu} is set:
			if {Stats.%shooter%::LastNinjutsu} is "Bunshin":
				playSound("entity.zombie.infect", 1, 1.5, projectile)
				set {_l} to location of projectile
				loop 3 times:
					spawn a zombie at {_l} with nbt "{IsBaby:1,Silent:1,ArmorItems:[{id:""minecraft:air"",Count:1b},{id:""minecraft:air"",Count:1b},{id:""minecraft:leather_chestplate"",tag:{display:{color:0}},Count:1b},{id:""minecraft:player_head"",tag:{SkullOwner:%shooter%},Count:1b}],HandItems:[{id:""minecraft:air"",Count:1b},{id:""minecraft:air"",Count:1b}],ActiveEffects:[{Id:8,Amplifier:2,Duration:999999}]}"
					set metadata value "gametype" of spawned zombie to "Kit"
					set metadata value "bunshin-baby" of spawned zombie to "%shooter%"
					set spawned zombie's display name to "%shooter%"
				wait 3 seconds
				loop all zombies:
					metadata value "bunshin-baby" of loop-zombie is "%shooter%"
					delete loop-zombie
			else if {Stats.%shooter%::LastNinjutsu} is "Kakuremi":
				loop all players in radius 3 around projectile:
					kitCheckTeam(loop-player, shooter, true) is true
					kitInvisible(loop-player, 3 seconds)
					message "§7透明化した!" to loop-player
				playSound("entity.wither.shoot", 1, 2, projectile)
				set {_r} to 211
				set {_g} to 211
				set {_b} to 211
			else if {Stats.%shooter%::LastNinjutsu} is "Zanzo":
				playSound("entity.zombie_villager.converted", 1, 2, projectile)
				loop all entities in radius 3 around projectile:
					kitCheckTeam(loop-entity, shooter, false) is true
					LastKiller(loop-entity, shooter)
					apply wither 1 to loop-entity for 5 seconds
				set {_r} to 0
				set {_g} to 0
				set {_b} to 0
			else if {Stats.%shooter%::LastNinjutsu} is "Kamaitachi":
				loop 20 times:
					loop all entities in radius 3 around projectile:
						kitCheckTeam(loop-entity, shooter, false) is true
						make shooter damage loop-entity by 2
					loop all blocks in radius 3 around projectile:
						loop-block is air
						chance of 10%:
							drawDot count 1, particle "explosionlarge", center location of loop-block, visibleRange 30
					playSound("entity.player.sweep", 1, 2, projectile)
					wait a tick
			else if {Stats.%shooter%::LastNinjutsu} is "Ninjutsu-KAZE":
				playSound("entity.wither.shoot", 1, 1.5, projectile)
				loop all entities in radius 3 around projectile:
					kitCheckTeam(shooter, loop-entity, false) is true
					push loop-entity upwards at speed 1.5
				set {_r} to 255
				set {_g} to 255
				set {_b} to 255
			else if {Stats.%shooter%::LastNinjutsu} is "Ninjutsu-BAKU":
				kitExplosion(shooter, 2, location of projectile)
			else if {Stats.%shooter%::LastNinjutsu} is "Ninjutsu-MOKU":
				playSound("block.grass.break", 1, 2, projectile)
				loop all players in radius 3 around projectile:
					kitCheckTeam(loop-player, shooter, false) is true
					kitDrain(loop-player, shooter, 2, 3 seconds)
				set {_r} to 0
				set {_g} to 255
				set {_b} to 0
			else if {Stats.%shooter%::LastNinjutsu} is "Ninjutsu-MIZU":
				playSound("entity.generic.splash", 1, 2, projectile)
				loop all entities in radius 3 around projectile:
					if kitCheckTeam(shooter, loop-entity, true) is true:
						setSupporter(loop-entity, shooter)
						apply regeneration 1 to loop-entity for 5 seconds
						extinguish loop-entity
					else if kitCheckTeam(shooter, loop-entity, true) is false:
						apply poison 1 to loop-entity for 5 seconds
				set {_r} to 0
				set {_g} to 0
				set {_b} to 255
			else if {Stats.%shooter%::LastNinjutsu} is "Ninjutsu-HONO":
				playSound("entity.blaze.shoot", 1, 2, projectile)
				loop all entities in radius 3 around projectile:
					kitCheckTeam(loop-entity, shooter, false) is true
					make shooter damage loop-entity by 2
					ignite loop-entity for 3 seconds
				set {_r} to 255
				set {_g} to 0
				set {_b} to 0
			else if {Stats.%shooter%::LastNinjutsu} is "Ninjutsu-HYOU":
				playSound("entity.player.levelup", 1, 2, projectile)
				loop all players in radius 3 around projectile:
					kitCheckTeam(loop-player, shooter, false) is true
					kitFreeze(loop-player, 0.5 seconds)
				set {_r} to 0
				set {_g} to 255
				set {_b} to 255
			else if {Stats.%shooter%::LastNinjutsu} is "Ninjutsu-TSUCHI":
				delete {Stats.%shooter%::LastNinjutsu}
				loop all entities in radius 3 around projectile:
					kitCheckTeam(loop-entity, shooter, true) is true
					apply resistance 1 to loop-entity for 3 seconds
				set {_y} to y-coordinate of block at projectile
				subtract 1 from {_y}
				loop all blocks in radius 3 around projectile:
					distance between location of block at projectile and location of loop-block >= 2
					y-coordinate of loop-block is {_y}
					add location of loop-block to {_ci::*}
				set {_nm} to 0
				loop 10 times:
					loop {_ci::*}:
						set {_bl} to loop-value-2
						if {_nm} is between 0 and 4:
							set {_ch} to 1
						else:
							set {_ch} to a random integer between 1 and 2
						if {_ch} is 1:
							set {_ck} to location of block {_nm} meters above {_bl}
							block at {_ck} is air
							make all players see block at {_ck} as dirt
							add {_ck} to {_lb::*}
							playSound("block.grass.break", 0.5, 1.5, {_ck})
							drawDot count 1, particle "blockcrack", material dirt, center {_ck}, visibleRange 30
						else:
							remove loop-value-2 from {_ci::*}
					add 1 to {_nm}
					wait a tick
				loop 60 times:
					loop {_lb::*}:
						make all players see block at loop-value-2 as dirt
					wait a tick
				loop {_lb::*}:
					make all players see block at loop-value as air
					playSound("block.grass.break", 0.5, 1.2, loop-value)
			else if {Stats.%shooter%::LastNinjutsu} is "Ninjutsu-RAI":
				strike lightning effect at projectile
				loop all entities in radius 3 around projectile:
					kitCheckTeam(loop-entity, shooter, false) is true
					kitDamage(shooter, loop-entity, 1, true)
				set {_r} to 255
				set {_g} to 255
				set {_b} to 0
			delete {Stats.%shooter%::LastNinjutsu}
			set {_bl} to location of projectile
			if {_r} is set:
				loop 10 times:
					set {_el} to {_bl}
					add 36 to {_rad}
					add 3 * sin({_rad}) to x-coordinate of {_el}
					add 3 * cos({_rad}) to z-coordinate of {_el}
					drawDot count 1, particle "mobspell", RGB {_r}, {_g}, {_b}, center {_el}, visibleRange 30
	else if projectile is a small fireball:
		metadata value "horoku" of projectile is "true"
		make a fake explosion at projectile

on damage of player:
	{Class::%attacker%} is "Ninja"
	if damage was caused by projectile:
		if projectile is a snowball:
			metadata value "shuriken" of projectile is "true"
			set damage to 0.5
			apply poison 1 to the victim for 3 second replacing existing effect
		else if projectile is an arrow:
			metadata value "kunai" of projectile is "true"
			set damage to 1
	else if damage was caused by attack:
		if {Stats.%attacker%::Katana-Sou} is true:
			set {_now} to now
			set {_victim} to victim
			set maximum damage delay of {_victim} to 10 ticks
			set {Stats.%attacker%::Katana-Sou-%{_victim}%} to {_now}
			wait 10 ticks
			if {Stats.%attacker%::Katana-Sou-%{_victim}%} is {_now}:
				set maximum damage delay of {_victim} to 20 ticks
		else:
			set maximum damage delay of victim to 20 ticks
	else if {Stats.%attacker%::Katana-Sou} is true:
		set maximum damage delay of victim to 20 ticks

function kitWeapon_Ninja_4(player: player):
	if {Stats.%{_player}%::Katana-Sou} is true:
		if {Stats.%{_player}%::Katana-SouCT} is not set:
			set {Stats.%{_player}%::Katana-SouCT} to true
			set {_loc} to location of {_player}
			set pitch of {_loc} to 0
			playSound("entity.arrow.shoot", 1, 2, {_player})
			drawDot count 1, particle "explosionlarge", center {_player}, visibleRange 30, keepFor 0.5 seconds
			set {_f} to location 10 meters in front of {_loc}
			set {_from} to vector of {_f}
			set {_to} to vector of {_player}
			set {_vector} to {_from} -- {_to}
			set {_vector} to normalized {_vector}
			set velocity of {_player} to {_vector}
			wait a second
			delete {Stats.%{_player}%::Katana-SouCT}
	else:
		set {Stats.%{_player}%::Katana-Sou} to true
		kitMsg({_player}, "§b§l剣の舞§e状態に入ります!")
		playSound("entity.player.attack.crit", 1, 0.5, {_player})
		loop 100 times:
			set {_el} to aroundEffect({_player})
			drawDot count 1, particle "cloud", center {_el}, visibleRange 30
			wait a tick
		kitMsg({_player}, "§b§l剣の舞§cは終わりました")
		delete {Stats.%{_player}%::Katana-Sou}
		toolCT({_player}, "Ninja", 4, "Weapon.main")

function kitWeapon_Ninja_3(player: player):
	if {Stats.%{_player}%::SkillLocation} is set:
		toolCT({_player}, "Ninja", 3, "Weapon.main")
		set {_loc} to {Stats.%{_player}%::SkillLocation}
		set {_dir} to location of {_player}
		set yaw of {_loc} to yaw of {_dir}
		set pitch of {_loc} to pitch of {_dir}
		teleport {_player} to {_loc}
		playSound("entity.illusioner.mirror_move", 0.8, 2, {_player})
	else:
		send action bar "§c§lブロックを指定してください" to {_player}

function kitWeapon_Ninja_5(player: player):
	set {_tool} to {_player}'s tool
	toolCT({_player}, "Ninja", 5, "Weapon.main")
	set {Stats.%{_player}%::Kusarigama} to true
	set {_player}'s tool to chain
	set {_baseloc} to location of {_player}
	set pitch of {_baseloc} to 0
	spawn an armor stand at {_baseloc} with nbt "{Invisible:1b,Invulnerable:1b,NoBasePlate:1b,NoGravity:1b,ShowArms:1b,Pose:{RightArm:[350f,0f,270f]}}"
	set metadata value "kusarigama" of spawned entity to "%{_player}%"
	set spawned entity's tool to {_tool}
	playSound("entity.arrow.shoot", 1, 0.5, {_player})
	set {_yaw} to yaw of {_baseloc}
	loop 20 times:
		add 0.5 to {_front}
		add 54 to {_yaw}
		if {_yaw} >= 360:
			subtract 360 from {_yaw}
			playSound("block.chain.break", 1, 1, {_loc})
		set {_loc} to location {_front} meters in front of {_player}
		set yaw of {_loc} to {_yaw}
		set pitch of {_loc} to 0
		loop all entities:
			type of loop-entity is an armor stand
			metadata value "kusarigama" of loop-entity is "%{_player}%"
			teleport loop-entity to {_loc}
		set {_num} to 0
		set {_effront} to 0
		loop loop-number times:
			add 1 to {_num}
			add 0.5 to {_effront}
			set {_effloc} to location {_effront} meters in front of {_player}
			add 1 to y-coordinate of {_effloc}
			drawDot count 1, particle "redstone", RGB 123, 124, 125, center {_effloc}, visibleRange 30
		loop all entities in radius 2 around {_loc}:
			kitCheckTeam(loop-entity, {_player}, false) is true
			{_hit.%id of loop-entity%} is not set
			set {_hit.%id of loop-entity%} to true
			make {_player} damage loop-entity by 6
		wait a tick
	set {_baseloc} to {_loc}
	loop 20 times:
		set {_met} to loop-number
		add 54 to {_yaw}
		if {_yaw} >= 360:
			subtract 360 from {_yaw}
			playSound("block.chain.break", 1, 1, {_loc})
		set {_d} to distance between {_baseloc} and {_player}
		set {_dd} to {_d} / 20
		set {_dc} to {_d} / 20 * {_met}
		set {_from} to vector of {_player}
		set {_to} to vector of {_baseloc}
		set {_vector} to {_from} -- {_to}
		set {_vector} to normalized {_vector}
		set {_baseyaw} to yaw of {_vector}
		set {_basepitch} to pitch of {_vector}
		set {_armloc} to {_baseloc}
		set yaw of {_armloc} to {_baseyaw}
		set pitch of {_armloc} to {_basepitch}
		set {_loc} to location {_dc} meters in front of {_armloc}
		set yaw of {_loc} to {_yaw}
		loop all entities:
			type of loop-entity is an armor stand
			metadata value "kusarigama" of loop-entity is "%{_player}%"
			teleport loop-entity to {_loc}
		set {_dc} to round({_dc})
		set {_effront} to 0
		loop 20 times:
			add {_dd} to {_effront}
			if {_effront} > {_dc}:
				set {_effloc} to location {_effront} meters in front of {_armloc}
				add 1 to y-coordinate of {_effloc}
				drawDot count 1, particle "redstone", RGB 123, 124, 125, center {_effloc}, visibleRange 30
		loop all entities in radius 2 around {_loc}:
			kitCheckTeam(loop-entity, {_player}, false) is true
			{_hit.%id of loop-entity%} is not set
			set {_hit.%id of loop-entity%} to true
			make {_player} damage loop-entity by 6
		wait a tick
	loop all entities:
		type of loop-entity is an armor stand
		metadata value "kusarigama" of loop-entity is "%{_player}%"
		delete loop-entity
	{Stats.%{_player}%::Kusarigama} is true
	set slot 0 of {_player} to {_tool}

function kitSkillNinja(player: player) :: boolean:
	set {_tool} to {_player}'s tool
	set {_item.num} to kitItemNumberChecker({_tool})
	if checkCT({_player}, name of {_player}'s tool) is true:
		if {_item.num} is 1:
			kitSkill_Ninja_1({_player})
		else if {_item.num} is 2:
			kitSkill_Ninja_2({_player})
		else if {_item.num} is 3:
			kitSkill_Ninja_3({_player})
		else if {_item.num} is 4:
			kitSkill_Ninja_4({_player})
		else if {_item.num} is 6:
			kitSkill_Ninja_6({_player})
		else if {_item.num} is 7:
			kitSkill_Ninja_7({_player})
		else if {_item.num} is 8:
			kitSkill_Ninja_8({_player})
	return true

function kitSkill_Ninja_1(player: player):
	shoot a small fireball from {_player} at speed 2
	set metadata value "horoku" of shot projectile to "true"
	drawDot count 1, particle "lava", center shot projectile, visibleRange 30, keepFor 0.5 seconds
	playSound("entity.arrow.shoot", 1, 0.5, {_player})
	set {_name} to name of {_player}'s tool
	set {_lore::*} to lore of {_player}'s tool
	remove a firework charge named {_name} with lore {_lore::*} from {_player}

on damage of player:
	damage was caused by projectile
	projectile is a small fireball
	metadata value "horoku" of projectile is "true"
	set damage to 1
	ignite victim for 5 seconds

function kitSkill_Ninja_2(player: player):
	set {_skill} to name of {_player}'s tool
	setCT({_player}, {_skill}, 10)
	kitInvisible({_player}, 5 seconds)
	kitMsg({_player}, "§8忍法・隠身の術!")
	playSound("entity.wither.shoot", 1, 2, {_player})
	delete {_player}'s tool
	set {Stats.%{_player}%::LastNinjutsu} to "Kakuremi"

function kitSkill_Ninja_3(player: player):
	set {_skill} to name of {_player}'s tool
	setCT({_player}, {_skill}, 10)
	kitMsg({_player}, "§2忍法・分身の術!")
	playSound("block.fire.extinguish", 1, 2, player)
	delete {_player}'s tool
	set {Stats.%{_player}%::LastNinjutsu} to "Bunshin"
	loop 3 times:
		spawn a zombie at {_player} with nbt "{IsBaby:0,Silent:1,Attributes:[{Name:""generic.movement_speed"",Base:0.6f}],ArmorItems:[{id:""minecraft:air"",Count:1b},{id:""minecraft:air"",Count:1b},{id:""minecraft:leather_chestplate"",tag:{display:{color:0}},Count:1b},{id:""minecraft:player_head"",tag:{SkullOwner:%{_player}%},Count:1b}],HandItems:[{id:""minecraft:air"",Count:1b},{id:""minecraft:air"",Count:1b}],ActiveEffects:[{Id:8,Amplifier:2,Duration:999999}]}"
		set metadata value "gametype" of spawned zombie to "Kit"
		set metadata value "bunshin" of spawned zombie to "%{_player}%"
		set spawned zombie's display name to "%{_player}%"
	wait 5 seconds
	loop all zombies:
		metadata value "bunshin" of loop-zombie is "%{_player}%"
		delete loop-zombie
	send action bar "§7§l分身は解除された!" to {_player}

function kitSkill_Ninja_4(player: player):
	if {Stats.%{_player}%::Zanzo} is not set:
		set {_skill} to name of {_player}'s tool
		setCT({_player}, {_skill}, 10)
		set {Stats.%{_player}%::Zanzo} to true
		kitMsg({_player}, "§0忍法・残像の術!")
		playSound("entity.bat.takeoff", 1, 1.5, {_player})
		delete {_player}'s tool
		set {Stats.%{_player}%::LastNinjutsu} to "Zanzo"
		wait 5 seconds
		delete {Stats.%{_player}%::Zanzo}
		send action bar "§7§l残像は解除された!" to {_player}
	else:
		send action bar "§c§l現在発動中です" to {_player}

on damage of player:
	{Stats.%victim%::Zanzo} is set
	{Kit-Invisible::%victim%} is not set
	chance of 30%:
		cancel event
		kitInvisible(victim, 1 seconds)
		playSound("entity.zombie_villager.converted", 1, 2, victim)
		send action bar "§0§l残像が働いた!" to victim

on leftclick holding a bonemeal:
	set {_tool} to player's tool
	kitItemAllChecker({_tool}, "Ninja", "Skill", 5) is true
	cancel event
	playSound("ui.button.click", 1, 1, player, true)
	if {Stats.%player%::Ninjutsu1} is not set:
		set {Stats.%player%::Ninjutsu1} to "L"
		send action bar "§a§lL §6- §7§l? §6- §7§l?" to player
		set {_now} to now
		set {Stats.%player%::NinTime} to {_now}
		wait 3 seconds
		if {Stats.%player%::NinTime} is {_now}:
			delete {Stats.%player%::Ninjutsu1}
	else if {Stats.%player%::Ninjutsu1} is set:
		if {Stats.%player%::Ninjutsu2} is not set:
			set {Stats.%player%::Ninjutsu2} to "L"
			send action bar "§a§l%{Stats.%player%::Ninjutsu1}% §6- §a§lL §6- §7§l?" to player
			set {_now} to now
			set {Stats.%player%::NinTime} to {_now}
			wait 3 seconds
			if {Stats.%player%::NinTime} is {_now}:
				delete {Stats.%player%::Ninjutsu1}
				delete {Stats.%player%::Ninjutsu2}
		else:
			delete {Stats.%player%::NinTime}
			set {Stats.%player%::Ninjutsu3} to "L"
			send action bar "§a§l%{Stats.%player%::Ninjutsu1}% §6- §a§l%{Stats.%player%::Ninjutsu2}% §6- §a§lL" to player
			kitMsg(player, "§f§l印を結びました!")
			playSound("entity.item.pickup", 1, 0.5, player, true)
			set {_nin} to "%{Stats.%player%::Ninjutsu1}% - %{Stats.%player%::Ninjutsu2}% - %{Stats.%player%::Ninjutsu3}%"
			delete {Stats.%player%::Ninjutsu1}
			delete {Stats.%player%::Ninjutsu2}
			delete {Stats.%player%::Ninjutsu3}
			if {_nin} is "L - L - L":
				set player's tool to light blue dye named "§5Ninjutsu §9[§b風§9]" with lore "§f敵を吹き飛ばす風遁の術", "§5§m------------------------------", "§f[§d§l効果§f]", "§6§l忍術", "", "§3右クリック§7:" and "§8- §d周辺5m§4の敵§7を§2自身§dの位置§7より§6§l隔離"
			else if {_nin} is "L - R - L":
				set player's tool to light green dye named "§5Ninjutsu §9[§2木§9]" with lore "§f生命力を奪う木遁の術", "§5§m------------------------------", "§f[§d§l効果§f]", "§6§l忍術", "", "§3右クリック§7:" and "§8- §d周辺5m§4の敵§7に§e吸収効果 II§7を§6§l付与 §b3秒"
			else if {_nin} is "R - L - L":
				set player's tool to red dye named "§5Ninjutsu §9[§4火§9]" with lore "§f周辺を燃やす火遁の術", "§5§m------------------------------", "§f[§d§l効果§f]", "§6§l忍術", "", "§3右クリック§7:" and "§8- §d周辺5m§4の敵§7に§4❤2§c§lダメージと§6§l延焼 §b5秒"
			else if {_nin} is "R - R - L":
				set player's tool to orange dye named "§5Ninjutsu §9[§6土§9]" with lore "§f逃げ場を抑える土遁の術", "§5§m------------------------------", "§f[§d§l効果§f]", "§6§l忍術", "", "§3右クリック§7:", "§8- §d半径5m§7の§e土壁§7を§6§l設置" and "§8- §2自身§7と§d周辺5m§§2の味方§7に§a耐性 I§7を§6§l付与 §b5秒"

on rightclick holding a bonemeal:
	set {_tool} to player's tool
	kitItemAllChecker({_tool}, "Ninja", "Skill", 5) is true
	cancel event
	playSound("ui.button.click", 1, 1, player, true)
	if {Stats.%player%::Ninjutsu1} is not set:
		set {Stats.%player%::Ninjutsu1} to "R"
		send action bar "§a§lR §6- §7§l? §6- §7§l?" to player
		set {_now} to now
		set {Stats.%player%::NinTime} to {_now}
		wait 3 seconds
		if {Stats.%player%::NinTime} is {_now}:
			delete {Stats.%player%::Ninjutsu1}
	else if {Stats.%player%::Ninjutsu1} is set:
		if {Stats.%player%::Ninjutsu2} is not set:
			set {Stats.%player%::Ninjutsu2} to "R"
			send action bar "§a§l%{Stats.%player%::Ninjutsu1}% §6- §a§lR §6- §7§l?" to player
			set {_now} to now
			set {Stats.%player%::NinTime} to {_now}
			wait 3 seconds
			if {Stats.%player%::NinTime} is {_now}:
				delete {Stats.%player%::Ninjutsu1}
				delete {Stats.%player%::Ninjutsu2}
		else:
			delete {Stats.%player%::NinTime}
			set {Stats.%player%::Ninjutsu3} to "R"
			send action bar "§a§l%{Stats.%player%::Ninjutsu1}% §6- §a§l%{Stats.%player%::Ninjutsu2}% §6- §a§lR" to player
			kitMsg(player, "§f§l印を結びました!")
			playSound("entity.item.pickup", 1, 0.5, player, true)
			remove a bone meal named "§fNinjutsu" from the player
			set {_nin} to "%{Stats.%player%::Ninjutsu1}% - %{Stats.%player%::Ninjutsu2}% - %{Stats.%player%::Ninjutsu3}%"
			delete {Stats.%player%::Ninjutsu1}
			delete {Stats.%player%::Ninjutsu2}
			delete {Stats.%player%::Ninjutsu3}
			wait a tick
			if {_nin} is "L - L - R":
				set player's tool to gray dye named "§5Ninjutsu §9[§8爆§9]" with lore "§f木っ端微塵にする爆遁の術", "§5§m------------------------------", "§f[§d§l効果§f]", "§6§l忍術", "", "§3右クリック§7:" and "§8- §b1秒後§7に§6爆発§7する§e爆弾§7を§6§l投擲 §d3個"
			else if {_nin} is "L - R - R":
				set player's tool to blue dye named "§5Ninjutsu §9[§1水§9]" with lore "§f心身を癒やす水遁の術", "§5§m------------------------------", "§f[§d§l効果§f]", "§6§l忍術", "", "§3右クリック§7:", "§8- §2自身§7と§d周辺5m§2の味方§7を§6§l消火§7,§a再生能力 I§6§l付与 §b10秒" and "§8- §d周辺5m§4の敵§7に§c毒 I§7を§6§l付与 §b10秒"
			else if {_nin} is "R - L - R":
				set player's tool to cyan dye named "§5Ninjutsu §9[§3氷§9]" with lore "§f動きを固める氷遁の術", "§5§m------------------------------", "§f[§d§l効果§f]", "§6§l忍術", "", "§3右クリック§7:" and "§8- §d周辺5m§4の敵§7に§4❤2§c§lダメージ§7と§e凍結効果§6§l付与 §b1秒"
			else if {_nin} is "R - R - R":
				set player's tool to yellow dye named "§5Ninjutsu §9[§e雷§9]" with lore "§f空から落ちる雷遁の術", "§5§m------------------------------", "§f[§d§l効果§f]", "§6§l忍術", "", "§3右クリック§7:", "§8- §d周辺5m§4の敵§7に§e固定§4❤2§c§lダメージ§7と§e麻痺効果 §b5秒"

on rightclick holding a dye:
	name of player's tool contains "§5Ninjutsu"
	cancel event
	if checkCT(player, "Ninjutsu") is true:
		setCT(player, "Ninjutsu", 10, false)
		set {_n} to player's tool
		set player's tool to air
		if "%type of {_n}%" is "light blue dye":
			kitMsg(player, "§b忍法・風遁の術!")
			set {Stats.%player%::LastNinjutsu} to "Ninjutsu-KAZE"
			playSound("entity.wither.shoot", 1, 0.5, player)
			set {_l} to location of player
			set {_to} to vector of {_l}
			loop 20 times:
				loop all players in radius 5 around {_l}:
					loop-player is not player
					{team::%loop-player%} is not {team::%player%}
					LastKiller(loop-player, player)
					push loop-player upwards at speed 1
					set {_ll} to location of loop-player
					set {_from} to vector of {_ll}
					set {_vector} to {_from} -- {_to}
					set {_vector} to normalized {_vector}
					set x of {_vector} to x of {_vector} * 1
					set y of {_vector} to y of {_vector} * 1
					set z of {_vector} to z of {_vector} * 1
					set velocity of loop-player to {_vector}
				set {_el} to {_l}
				add 100 to {_rad}
				add 0.25 to {_high}
				add {_high} to y-coordinate of {_el}
				add 5 * sin({_rad}) to x-coordinate of {_el}
				add 5 * cos({_rad}) to z-coordinate of {_el}
				drawDot count 1, particle "redstone", RGB 0, 255, 255, center {_el}, visibleRange 30
				wait a tick
		else if "%type of {_n}%" is "grey dye":
			kitMsg(player, "§8忍法・爆遁の術!")
			set {Stats.%player%::LastNinjutsu} to "Ninjutsu-BAKU"
			loop 3 times:
				shoot a primed tnt from player at speed 0.5 upwards
				set metadata value "attacker" of shot primed tnt to "%player%"
				set metadata value "kit-bomber" of shot primed tnt to 2.3
				set metadata value "ninjutsu-baku" of shot primed tnt to "%player%"
				push shot primed tnt north at speed random number from -0.5 to 0.5
				push shot primed tnt east at speed random number from -0.5 to 0.5
				drawDot count 1, particle "lava", center shot primed tnt, visibleRange 30, keepFor 1 second
			loop 10 times:
				loop all primed tnts:
					metadata value "ninjutsu-baku" of loop-primed tnt is "%player%"
					set {_l} to location of loop-primed tnt
					playSound("ui.button.click", 0.5, 2, {_l})
				wait 2 ticks
		else if "%type of {_n}%" is "light green dye":
			kitMsg(player, "§2忍法・木遁の術!")
			set {Stats.%player%::LastNinjutsu} to "Ninjutsu-MOKU"
			set {_bl} to location of player
			loop all players in radius 5 around player:
				kitCheckTeam(player, loop-player, false) is true
				kitDrain(loop-player, player, 2, 3 seconds)
			set {_y} to -60
			loop 3 times:
				add 120 to {_y}
				set {_l::%loop-number%} to {_bl}
				add 1 to y-coordinate of {_l::%loop-number%}
				set yaw of {_l::%loop-number%} to {_y}
				set pitch of {_l::%loop-number%} to 0
			set {_f} to 0.5
			loop 5 times:
				playSound("block.grass.break", 0.75, 1.5, {_bl})
				loop 3 times:
					set {_ry} to a random number between -5 and 5
					set {_yaw} to yaw of {_l::%loop-number-2%}
					add {_ry} to {_yaw}
					if {_yaw} < 0:
						set {_yaw} to 360 + {_yaw}
					else if {_yaw} >= 360:
						set {_yaw} to {_yaw} - 360
					set yaw of {_l::%loop-number-2%} to {_yaw}
					set {_l::%loop-number-2%} to location {_f} meters in front of {_l::%loop-number-2%}
					drawDot count 1, particle "happyvillager", center {_l::%loop-number-2%}, visibleRange 30
				wait a tick
			loop 3 times:
				set {_sy} to -90
				loop 2 times:
					add 60 to {_sy}
					set {_l::%loop-number-1%::%loop-number-2%} to {_l::%loop-number-1%}
					set {_yaw} to yaw of {_l::%loop-number-1%}
					add {_sy} to {_yaw}
					if {_yaw} < 0:
						set {_yaw} to 360 + {_yaw}
					else if {_yaw} >= 360:
						set {_yaw} to {_yaw} - 360
					set yaw of {_l::%loop-number-1%::%loop-number-2%} to {_yaw}
			loop 5 times:
				playSound("block.grass.break", 0.75, 1.5, {_bl})
				loop 3 times:
					loop 2 times:
						set {_ry} to a random number between -5 and 5
						set {_yaw} to yaw of {_l::%loop-number-2%::%loop-number-3%}
						add {_ry} to {_yaw}
						if {_yaw} < 0:
							set {_yaw} to 360 + {_yaw}
						else if {_yaw} >= 360:
							set {_yaw} to {_yaw} - 360
						set yaw of {_l::%loop-number-2%::%loop-number-3%} to {_yaw}
						set {_l::%loop-number-2%::%loop-number-3%} to location {_f} meters in front of {_l::%loop-number-2%::%loop-number-3%}
						drawDot count 1, particle "happyvillager", center {_l::%loop-number-2%::%loop-number-3%}, visibleRange 30
				wait a tick
			loop 3 times:
				loop 2 times:
					set {_sy} to -90
					loop 2 times:
						add 60 to {_sy}
						set {_l::%loop-number-1%::%loop-number-2%::%loop-number-3%} to {_l::%loop-number-1%::%loop-number-2%}
						set {_yaw} to yaw of {_l::%loop-number-1%::%loop-number-2%}
						add {_sy} to {_yaw}
						if {_yaw} < 0:
							set {_yaw} to 360 + {_yaw}
						else if {_yaw} >= 360:
							set {_yaw} to {_yaw} - 360
						set yaw of {_l::%loop-number-1%::%loop-number-2%::%loop-number-3%} to {_yaw}
			loop 5 times:
				playSound("block.grass.break", 0.75, 1.5, {_bl})
				loop 3 times:
					loop 2 times:
						loop 2 times:
							set {_ry} to a random number between -5 and 5
							set {_yaw} to yaw of {_l::%loop-number-2%::%loop-number-3%::%loop-number-4%}
							add {_ry} to {_yaw}
							if {_yaw} < 0:
								set {_yaw} to 360 + {_yaw}
							else if {_yaw} >= 360:
								set {_yaw} to {_yaw} - 360
							set yaw of {_l::%loop-number-2%::%loop-number-3%::%loop-number-4%} to {_yaw}
							set {_l::%loop-number-2%::%loop-number-3%::%loop-number-4%} to location {_f} meters in front of {_l::%loop-number-2%::%loop-number-3%::%loop-number-4%}
							drawDot count 1, particle "happyvillager", center {_l::%loop-number-2%::%loop-number-3%::%loop-number-4%}, visibleRange 30
				wait a tick
			loop 3 times:
				loop 2 times:
					loop 2 times:
						set {_sy} to -90
						loop 2 times:
							add 60 to {_sy}
							set {_l::%loop-number-1%::%loop-number-2%::%loop-number-3%::%loop-number-4%} to {_l::%loop-number-1%::%loop-number-2%::%loop-number-3%}
							set {_yaw} to yaw of {_l::%loop-number-1%::%loop-number-2%::%loop-number-3%}
							add {_sy} to {_yaw}
							if {_yaw} < 0:
								set {_yaw} to 360 + {_yaw}
							else if {_yaw} >= 360:
								set {_yaw} to {_yaw} - 360
							set yaw of {_l::%loop-number-1%::%loop-number-2%::%loop-number-3%::%loop-number-4%} to {_yaw}
			loop 5 times:
				playSound("block.grass.break", 0.75, 1.5, {_bl})
				loop 3 times:
					loop 2 times:
						loop 2 times:
							loop 2 times:
								set {_ry} to a random number between -5 and 5
								set {_yaw} to yaw of {_l::%loop-number-2%::%loop-number-3%::%loop-number-4%::%loop-number-5%}
								add {_ry} to {_yaw}
								if {_yaw} < 0:
									set {_yaw} to 360 + {_yaw}
								else if {_yaw} >= 360:
									set {_yaw} to {_yaw} - 360
								set yaw of {_l::%loop-number-2%::%loop-number-3%::%loop-number-4%::%loop-number-5%} to {_yaw}
								set {_l::%loop-number-2%::%loop-number-3%::%loop-number-4%::%loop-number-5%} to location {_f} meters in front of {_l::%loop-number-2%::%loop-number-3%::%loop-number-4%::%loop-number-5%}
								drawDot count 1, particle "happyvillager", center {_l::%loop-number-2%::%loop-number-3%::%loop-number-4%::%loop-number-5%}, visibleRange 30
				wait a tick
		else if "%type of {_n}%" is "blue dye":
			kitMsg(player, "§1忍法・水遁の術!")
			set {Stats.%player%::LastNinjutsu} to "Ninjutsu-MIZU"
			playSound("entity.generic.splash", 1, 1, player)
			set {_l} to location of player
			loop all players in radius 5 around {_l}:
				if kitCheckTeam(loop-player, player, true) is true:
					{Stats.%loop-player%::NoSupport} is not set
					if loop-player is not player:
						setSupporter(loop-player, player)
					apply regeneration 1 to loop-player for 10 seconds
					extinguish loop-player
				else if kitCheckTeam(loop-player, player, false) is true:
					apply poison 1 to loop-player for 10 seconds
			set {_y} to y-coordinate of block at player
			loop all blocks in radius 5 around player:
				y-coordinate of loop-block is {_y}
				drawDot count 1, particle "mobspell", RGB 0, 0, 200, center location of loop-block, visibleRange 30
		else if "%type of {_n}%" is "red dye":
			kitMsg(player, "§4忍法・火遁の術!")
			set {Stats.%player%::LastNinjutsu} to "Ninjutsu-HONO"
			playSound("entity.ghast.shoot", 1, 1, player)
			loop all entities in radius 5 around player:
				kitCheckTeam(player, loop-entity, false) is true
				make player damage loop-entity by 4
				ignite loop-entity for 5 seconds
			set {_l} to location of player
			loop 10 times:
				add 0.5 to {_m}
				add 5 to {_ln}
				set {_radd} to 360 / {_ln}
				set {_rad} to 0
				loop {_ln} times:
					add {_radd} to {_rad}
					set {_el} to {_l}
					add 1 to y-coordinate of {_el}
					add {_m} * sin({_rad}) to x-coordinate of {_el}
					add {_m} * cos({_rad}) to z-coordinate of {_el}
					drawDot count 1, particle "flame", center {_el}, visibleRange 30
				wait a tick
		else if "%type of {_n}%" is "cyan dye":
			kitMsg(player, "§3忍法・氷遁の術!")
			set {Stats.%player%::LastNinjutsu} to "Ninjutsu-HYOU"
			playSound("entity.player.levelup", 1, 2, player)
			set {_baseloc} to location of player
			loop all players in radius 5 around player:
				kitCheckTeam(loop-player, player, false) is true
				make player damage loop-player by 4
				kitFreeze(loop-player, 1 seconds)
			set {_s} to 0
			set {_t} to 0
			set {_pl} to location of player
			loop 20 times:
				loop 19 times:
					loop 36 times:
						set {_loc} to {_pl}
						set {_vector} to {_loc}
						set {_x} to x-coordinate of {_loc}
						set {_y} to y-coordinate of {_loc}
						set {_z} to z-coordinate of {_loc}
						set x-coordinate of {_vector} to {_x} + ( 5 * sin({_s}) * cos({_t}) )
						set y-coordinate of {_vector} to {_y} + ( 5 * cos({_s}) )
						set z-coordinate of {_vector} to {_z} + ( 5 * sin({_s}) * sin({_t}) )
						chance of 10%:
							drawDot count 1, particle "redstone", RGB 0, 255, 255, center {_vector}, visibleRange 30
						add 10 to {_t}
					add 10 to {_s}
				wait a tick
		else if "%type of {_n}%" is "orange dye":
			kitMsg(player, "§6忍法・土遁の術!")
			set {Stats.%player%::LastNinjutsu} to "Ninjutsu-TSUCHI"
			set {_l} to location of player
			loop all entities in radius 5 around {_l}:
				kitCheckTeam(loop-entity, player, true) is true
				setSupporter(loop-entity, player)
				apply resistance 1 to loop-entity for 5 seconds
				apply mining fatigue 1 to loop-entity for 5 seconds
			set {_y} to y-coordinate of block at player
			loop all blocks in radius 5 around player:
				distance between location of block at player and location of loop-block >= 4
				y-coordinate of loop-block is {_y}
				add location of loop-block to {_ci::*}
			set {_nm} to 0
			loop 10 times:
				loop {_ci::*}:
					set {_bl} to loop-value-2
					if {_nm} is between 0 and 4:
						set {_ch} to 1
					else:
						set {_ch} to a random integer between 1 and 2
					if {_ch} is 1:
						set {_ck} to location of block {_nm} meters above {_bl}
						block at {_ck} is air
						make all players see block at {_ck} as dirt
						add {_ck} to {_lb::*}
						playSound("block.grass.break", 0.5, 1.5, {_ck})
						drawDot count 1, particle "blockcrack", material dirt, center {_ck}, visibleRange 30
					else:
						remove loop-value-2 from {_ci::*}
				add 1 to {_nm}
				wait a tick
			loop 100 times:
				loop {_lb::*}:
					make all players see block at loop-value-2 as dirt
				wait a tick
			loop {_lb::*}:
				make all players see block at loop-value as air
				playSound("block.grass.break", 0.5, 1.2, loop-value)
		else if "%type of {_n}%" is "yellow dye":
			kitMsg(player, "§e忍法・雷遁の術!")
			set {Stats.%player%::LastNinjutsu} to "Ninjutsu-RAI"
			strike lightning effect at player
			loop all players in radius 5 around player:
				kitCheckTeam(loop-player, player, false) is true
				strike lightning effect at loop-player
				kitDamage(player, loop-player, 2, true)
				kitPalsy(loop-player, 5 seconds)

function kitSkill_Ninja_6(player: player):
	if {Stats.%{_player}%::Kamaitachi} is not set:
		set {_skill} to name of {_player}'s tool
		setCT({_player}, {_skill}, 10)
		set {Stats.%{_player}%::Kamaitachi} to true
		kitMsg({_player}, "§f忍法・鎌鼬の術!")
		delete {_player}'s tool
		set {Stats.%{_player}%::LastNinjutsu} to "Kamaitachi"
		apply speed 3 to {_player} for 5 seconds replacing existing effect
		loop 100 times:
			if {Stats.%{_player}%::Kamaitachi} is set:
				loop all entities in radius 5 around {_player}:
					kitCheckTeam({_player}, loop-entity, false) is true
					kitDamage({_player}, loop-entity, 0.25)
					set {_loc} to location of loop-entity
					add 1 to y-coordinate of {_loc}
					draw 1 cloud particle at {_loc} with direction randomVector({_loc}) and speed 0.5, keepFor 1 tick
				set {_pitch} to a random number between 0.5 and 2
				playSound("entity.player.player,sweep", 1, {_pitch}, {_player})
				loop all blocks in radius 5 around {_player}:
					loop-block is passable
					chance of 1%:
						drawDot count 1, particle "explosionlarge", center location of loop-block, visibleRange 30
				wait a tick
		{Stats.%{_player}%::Kamaitachi} is set
		apply speed 2 to {_player} for 10000000000 seconds
		delete {Stats.%{_player}%::Kamaitachi}
		send action bar "§7§l鎌鼬は解除された!" to {_player}
	else:
		send action bar "§c§l現在発動中です" to {_player}

on damage of player:
	if {Stats.%attacker%::Kamaitachi} is true:
		cancel event

function kitSkill_Ninja_7(player: player):
	kitMsg({_player}, "<##a0522d>現在地点に撒菱をばら撒きます...")
	set {_name} to name of {_player}'s tool
	set {_lore::*} to lore of {_player}'s tool
	remove an pumpkin seed named {_name} with lore {_lore::*} from {_player}
	playSound("block.grass.place", 0.9, 2, {_player})
	set {_baseloc} to location of {_player}
	set {_rad} to 0
	loop 3 times:
		set {_el::%loop-number%} to {_baseloc}
		add 120 to {_rad}
		add 3 * sin({_rad}) to x-coordinate of {_el::%loop-number%}
		add 3 * cos({_rad}) to z-coordinate of {_el::%loop-number%}
	set {_hit} to false
	while {_hit} is false:
		loop {_el::*}:
			set {_yaw} to 0
			loop 3 times:
				add 120 to {_yaw}
				set {_el} to loop-value-1
				set yaw of {_el} to {_yaw}
				set pitch of {_el} to -30
				loop 2 times:
					set {_e} to location 0.05 * loop-number-2 meters in front of {_el}
					drawDot count 1, particle "redstone", RGB 245, 222, 179, center {_e}, visibleRange 10
		loop all players in radius 3 around {_baseloc}:
			kitCheckTeam(loop-player, {_player}, false) is true
			set {_hit} to true
			playSound("block.grass.break", 0.9, 2, {_player})
			message "§4撒菱を踏んでしまった!" to loop-player
			kitDamage({_player}, loop-player, 2)
			apply slowness 1 to loop-player for 5 seconds
			set {_c} to kitPercentDuel({_player}, loop-player, 70, false)
			chance of {_c}%:
				kitBlood(loop-player)
		wait a tick

function kitSkill_Ninja_8(player: player):
	if block 0.1 meters below {_player} is not passable:
		toolCT({_player}, "Ninja", 8)
		kitMsg({_player}, "<##f0f8ff>瞑想を行います...")
		playSound("block.beacon.ambient", 1, 1, {_player})
		set {Stats.%{_player}%::Meiso} to true
		kitFreeze({_player}, 5 seconds, false)
		apply glowing 1 to {_player} for 5 seconds
		set {_bl} to location of {_player}
		loop 100 times:
			if {Stats.%{_player}%::Meiso} is true:
				add 0.02 to {_y}
				set {_rad} to 0
				loop 10 times:
					add 36 to {_rad}
					set {_el} to {_bl}
					add 0.6 * sin({_rad}) to x-coordinate of {_el}
					add 0.6 * cos({_rad}) to z-coordinate of {_el}
					add {_y} to y-coordinate of {_el}
					drawDot count 1, particle "endrod", center {_el}, visibleRange 30
				wait a tick
		{Stats.%{_player}%::Meiso} is true
		playSound("block.portal.travel", 0.5, 2, {_player})
		kitMsg({_player}, "<##80c4ff>悟りによって§6§l忍術<##80c4ff>を回収した!")
		kitHeal({_player}, 3)
		set {_skill::1} to kitPlayerSkillItem({_player}, "Ninja", 1)
		set {_skill::2} to kitPlayerSkillItem({_player}, "Ninja", 2)
		set {_skill::3} to kitPlayerSkillItem({_player}, "Ninja", 3)
		loop {_skill::*}:
			add 1 to {_ln}
			set {_nin} to line 4 of lore of loop-value
			{_nin} contains "忍術"
			if display name of {_skill::%loop-index%} does not contain "Ninjutsu":
				delete {_have}
				loop all items in {_player}'s inventory:
					loop-item is {_skill::%loop-index%}
					set {_have} to true
				{_have} is not set
				give {_skill::%{_ln}%} to {_player}
				send action bar "%display name of {_skill::%{_ln}%}% §7を再習得した..." to {_player}
			else:
				delete {_have}
				loop all items in {_player}'s inventory:
					display name of loop-item contains "Ninjutsu"
					set {_have} to true
				{_have} is not set
				give {_skill::%{_ln}%} to {_player}
				send action bar "%display name of {_skill::%{_ln}%}% §7を再習得した..." to {_player}
	else:
		send action bar "§c§l接地した状態で発動してください" to {_player}

on damage of player:
	damage was caused by fall
	{Class::%victim%} is "Ninja"
	cancel event

on death of player:
	{Class::%{LastKiller::%victim%}%} is "Ninja"
	set {_skill::1} to kitPlayerSkillItem({LastKiller::%victim%}, "Ninja", 1)
	set {_skill::2} to kitPlayerSkillItem({LastKiller::%victim%}, "Ninja", 2)
	set {_skill::3} to kitPlayerSkillItem({LastKiller::%victim%}, "Ninja", 3)
	loop {_skill::*}:
		add 1 to {_ln}
		set {_nin} to line 4 of lore of loop-value
		{_nin} contains "忍術"
		if display name of {_skill::%loop-index%} does not contain "Ninjutsu":
			delete {_have}
			loop all items in {LastKiller::%victim%}'s inventory:
				loop-item is {_skill::%loop-index%}
				set {_have} to true
			{_have} is not set
			give {_skill::%{_ln}%} to {LastKiller::%victim%}
			send action bar "%display name of {_skill::%{_ln}%}% §7を再習得した..." to {LastKiller::%victim%}
		else:
			delete {_have}
			loop all items in {LastKiller::%victim%}'s inventory:
				display name of loop-item contains "Ninjutsu"
				set {_have} to true
			{_have} is not set
			give {_skill::%{_ln}%} to {LastKiller::%victim%}
			send action bar "%display name of {_skill::%{_ln}%}% §7を再習得した..." to {LastKiller::%victim%}

#on jumping:
#	if player's gamemode is not creative or spectator:
#		if {Class::%player%} is "Ninja":
#			{CT.%player%::Double Jump} is not set
#			allow fly for the player
#		else:
#			disallow fly for the player
#	else:
#		allow fly for the player

function kitTimerNinja(player: player):
	while {Class::%{_player}%} is "Ninja":
		{_player}'s gamemode is not creative or spectator
#	ダブルジャンプ処理
		if {_player} is flying:
			set {_jumping} to true
			disallow fly for {_player}
			push {_player} upwards at speed 1.1
			push {_player} forward at speed 1.0
			playSound("entity.ghast.shoot", 1, 1, {_player})
			if {Ult.%{_player}%::Ninja} is not set:
				setCT({_player}, "Double Jump", 10, false)
#	ダブルジャンプの許可
		else if {_player} cannot fly:
#		ダブルジャンプ後,地面に着くまでは許可しない
			if {_jumping} is true:
				if block 0.1 meters below {_player} is not passable:
					delete {_jumping}
			else:
				if {CT.%{_player}%::Double Jump} is not set:
					allow fly for {_player}
		wait a tick
	disallow fly for {_player}

function kitUltNinja(player: player):
	message "§cDouble Jumpにクールタイムがかからなくなります!" to {_player}
	message "§cWeaponが§8§lKatana -§4§l竜§8§l-§cに変化します!" to {_player}
	message "§cこの武器を右クリックで前方へ飛び,軌道上の敵に3ダメージを与えます!" to {_player}
	set {Ult.%{_player}%::Ninja} to true
	set {Stats.%{_player}%::UltNinja} to true
	set {_weapon} to kitPlayerWeaponItem({_player}, "Ninja", "main")
	load yml "plugins/skript-yaml/Kit Classes/Ninja.yml" as "ultninja.%{_player}%"
	set {_UltKatana} to yml value "kititems.Katana [竜]" from "ultninja.%{_player}%"
	set slot 0 of {_player} to {_UltKatana}
	wait 10 seconds
	unload yml "ultninja.%{_player}%"
	delete {Ult.%{_player}%::Ninja}
	{Stats.%{_player}%::UltNinja} is true
	delete {Stats.%{_player}%::UltNinja}
	set slot 0 of {_player} to {_weapon}

on rightclick holding a netherite sword:
	{Stats.%player%::UltNinja} is true
	set {_UltKatana} to yml value "kititems.Katana [竜]" from "ultninja.%player%"
	player's tool is {_UltKatana}
	cancel event
	if checkCT(player, "Ninja's Ult") is true:
		setCT(player, "Ninja's Ult", 1)
		playSound("entity.arrow.shoot", 1, 2, player)
		set {_loc} to location of player
		set pitch of {_loc} to 0
		set {_fb} to location 100 meters in front of {_loc}
		drawDot particle "cloud", center player, visibleRange 30, keepFor 10 ticks
		set {_from} to vector of {_fb}
		set {_to} to vector of player
		set {_vector} to {_from} -- {_to}
		set {_vector} to normalized {_vector}
		set x of {_vector} to x of {_vector} * 3
		set y of {_vector} to y of {_vector} * 3
		set z of {_vector} to z of {_vector} * 3
		set velocity of player to {_vector}
		loop 10 times:
			loop all entities in radius 2 around player:
				kitCheckTeam(player, loop-entity, false) is true
				{_hit.%id of loop-entity%} is not set
				set {_hit.%id of loop-entity%} to true
				make player damage loop-entity by 6
				drawDot particle "explosionlarge", center loop-entity, visibleRange 30
			wait a tick