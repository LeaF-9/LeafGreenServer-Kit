function loadFFAStage(stage: text):
	set {_stagename} to ffaStageName({_stage})
	execute console command "/mv import FFA-%{_stagename}% normal -g CleanroomGenerator:."
	loop 200 times:
		if {_ok} is not set:
			loop all worlds:
				set {_worldname} to "%loop-world%"
				if {_worldname} is "FFA-%{_stagename}%":
					set {_ok} to true
				else:
					wait a tick
	if {_ok} is true:
		load yml "plugins/skript-yaml/FFA Stages/%{_stage}%.yml" as "ffa.stage.read"
		set {_authors::*} to yml list "authors" from "ffa.stage.read"
		set {_spn} to 0
		loop yaml node keys "spawnpoints" from "ffa.stage.read":
			add 1 to {_spn}
			set {_loc} to invertLocation("spawnpoints.%{_spn}%.%loop-node%", "ffa.stage.read")
			add {_loc} to {_respawns::*}
		unload yml "ffa.stage.read"
		set {FFA-GameStage.name} to {_stage}
		set {FFA-GameStage.authors::*} to {_authors::*}
		set {FFA-GameStage.respawns::*} to {_respawns::*}
		ffaMsg("§eゲームマップが §a§l%{_stage}% §eにセットされました!")
	else:
		staffMsg("§4!!!WARNING!!! §cFFAマップの読み込みに失敗しました")

function unloadFFAStage(stage: text):
	set {_stagename} to ffaStageName({_stage})
	execute console command "/mv remove FFA-%{_stagename}%"
	delete {FFA-GameStage.name}
	delete {FFA-GameStage.authors::*}
	delete {FFA-GameStage.respawns::*}

function changeFFAStage():
	set {_stage.now} to {FFA-GameStage.name}
	unloadFFAStage({FFA-GameStage.name})
	load yml "plugins/skript-yaml/FFA Stages/All Stages.yml" as "ffa.stages"
	set {_maps::*} to yml list "Stages" from "ffa.stages"
	unload yml "ffa.stages"
	remove {_stage.now} from {_maps::*}
	loop {_maps::*}:
		load yml "plugins/skript-yaml/FFA Stages/%loop-value%.yml" as "ffa.stage"
		set {_enable} to yml value "enable" from "ffa.stage"
		unload yml "ffa.stage"
		if {_enable} is true:
			add loop-value to {_mapsl::*}
	set {_mapdc} to a random text out of {_mapsl::*}
	loadFFAStage({_mapdc})

function ffaStageName(stage: text):
	set {_sn} to {_stage}
	replace " " with "" in {_sn}
	return {_sn}