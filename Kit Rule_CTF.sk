options:
	prefix: §e[§aCTF§e]§r

# 用意すべきyaml項目:
# - Kit-GameStageFlags::*

function kitDeathEvent_CTF(attacker: player, victim: player, supporters: players):
	# Death情報の更新
	add 1 to {Kit-Death.personal::%{_victim}%}
	kitScorePersonal({_victim}, 1, "§4%{Kit-Kill.personal::%{_victim}%}% §7/ §1%{Kit-Death.personal::%{_victim}%}%")
	set {Kit-KD.personal::%{_victim}%} to {Kit-Kill.personal::%{_victim}%} / {Kit-Death.personal::%{_victim}%}
	# Kill情報の更新
	add 1 to {Kit-Kill.personal::%{_attacker}%}
	kitScorePersonal({_attacker}, 1, "§4%{Kit-Kill.personal::%{_attacker}%}% §7/ §1%{Kit-Death.personal::%{_attacker}%}%")
	set {Kit-KD.personal::%{_attacker}%} to {Kit-Kill.personal::%{_attacker}%} / {Kit-Death.personal::%{_attacker}%}

function kitFlagSpawn_CTF(location: location, color: text = "white"):  # Flagを対象地点にスポーンさせる関数
	set y-coordinate of {_location} to y-coordinate of {_location} - 1.8
	set {_nbt} to nbt compound from "{Invisible:1b,Invulnerable:1b,PersistenceRequired:1b,NoBasePlate:1b,NoGravity:1b,Marker:1b,ArmorItems:[{},{},{},{id:""%{_color}%_banner"",Count:1b}],HandItems:[{},{}]}"
	spawn an armor stand at {_location} with nbt {_nbt}
	set metadata value "gametype" of spawned armor stand to "Kit"
	set metadata value "flag-color" of spawned armor stand to {_color}
	if {_color} is "white":
		joinPlayerMsg("Kit", "{@prefix} §f§lFlag §bがスポーンしました!")

function kitFlagGet_CTF(player: player):  # プレイヤーがFlagを獲得した際の処理を行う関数
	# Flag所持者のデータ更新
	set {Kit-FlagHolder} to {_player}
	# Kit変更処理
	set {Class::%{_player}%} to "Flag"
	set {CLS::%{_player}%} to "FLA"
	set {_team} to {TrueTeam::%{_player}%}
	execute console command "/skclass %{_player}% Kit-Flag-%{_team}%"
	# メッセージ通知
	joinPlayerMsg("Kit", "{@prefix} §6§l%{_player}% §bが§f§lFlag§bを獲得しました!")
	# タイトル通知
	set {_color} to kitTeamColor({_team})
	set {_title} to "%{_color}%§l%{_player}% §6が §f§lFlag §6を獲得しました!"
	loop all players:
		if {_player} is loop-player:  # Flagを獲得した本人
			send title {_title} with subtitle "§b敵に奪われないよう逃げ回ろう!" to loop-player for 5 seconds
		else:
			if kitCheckTeam({_player}, loop-player, true, true) is true:  # 味方がFlagを獲得した場合
				send title {_title} with subtitle "§bFlag所有者を敵から守り抜こう!" to loop-player for 5 seconds
			else:  # 敵がFlagを所有した場合
				send title {_title} with subtitle "§bFlag所有者を倒して奪い取ろう!" to loop-player for 5 seconds
	# サウンド通知


function kitTimer_CTF():
	while {Kit-tochu} is true:
		# Flagが存在するかチェック
		delete {_flag.entity}
		delete {_flag.color}
		delete {_flag.player}
		loop all entities:
			type of loop-entity is armor stand
			metadata value "flag-color" of loop-entity is set
			set {_flag.entity} to loop-entity
			set {_flag.color} to metadata value of loop-entity
		# Flagが存在する場合 獲得の処理
		if {_flag.entity} is set:
			set {_flag.location} to location of {_flag.entity}
			add 1.8 to y-coordinate of {_flag.location}
			set {_dis} to 100
			# Flag取得者の確認
			loop all players in radius 1 around {_flag.location}:
				metadata value "gametype" of loop-player is "Kit"
				set {_d} to distance between {_flag.location} and location of loop-player
				if {_dis} > {_d}:
					set {_dis} to {_d}
					set {_flag.player} to loop-player
			if {_flag.player} is set:
				if {_flag.color} is "white":
					kitFlagGet_CTF({_flag.player})
				else:
					if {TrueTeam::%{_flag.player}%} is {_flag.color}:
						kitFlagGet_CTF({_flag.player})
					else:
						set {_flag.spawntimer} to 0
						joinPlayerMsg("Kit", "§f§lFlag §7が奪取されました! §b10秒後に再度スポーンします...")
						loop all entitites:
							type of loop-entity is armor stand
							metadata value "flag-color" of loop-entity is set
							delete loop-entity
		# Flagを取得中のポイント処理
		if {Kit-FlagHolder} is set:
			set {_holder.teamcolor} to {TrueTeam::%{Kit-FlagHolder}%}
			add {TeamBuff::%{_holder.teamcolor}%} to {Kit-FlagPoint::%{_holder.teamcolor}%}
			# スコアボード設定
			# サウンド設定
			# 勝利ポイントに達した際の処理
		# Flag所持者が存在しない際のFlag再スポーン処理
		else:

		wait a second