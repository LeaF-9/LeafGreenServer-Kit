function kitFakeBlock(player: player, location: location, block: text, transformation: text, metadata: text):
	set {_nbt} to nbt compound from "{transformation:%{_transformation}%,block_state:{Name:""%{_block}%""}}"
	spawn a block display at {_location} with nbt {_nbt}
	set {_blockdisplay} to a spawned block display
	set metadata value "gametype" of {_blockdisplay} to "Kit"
	set metadata value {_metadata} of {_blockdisplay} to "%{_player}%"

function kitFakeItem(player: player, location: location, item: text, transformation: text, metadata: text):
	set {_nbt} to nbt compound from "{transformation:%{_transformation}%,item:{id:""%{_block}%"",Count:1b}}"
	spawn an item display at {_location} with nbt {_nbt}
	set {_itemdisplay} to a spawned item display
	set metadata value "gametype" of {_itemdisplay} to "Kit"
	set metadata value {_metadata} of {_itemdisplay} to "%{_player}%"

function kitTransformation(left_rotation: text, right_rotation: text, translation: text, scale: text) :: text:
	set {_transformation} to "{left_rotation:%{_left_rotation}%,right_rotation:%{_right_rotation}%,translation:%{_translation}%,scale:%{_scale}%}"
	return {_transformation}

command /kit-createdisplaytest <text> <text> <text> <text> <text> <text>:
	aliases: /kit-cdt
	usage: /kit-displaytest <block/item> <object> <left> <right> <translation> <scale>
	executable by: player
	permission: sk.admin
	trigger:
		set {_arg} to arg 1
		set {_object} to arg 2
		set {_left_rotation} to arg 3
		set {_right_rotation} to arg 4
		set {_translation} to arg 5
		set {_scale} to arg 6
		set {_transformation} to kitTransformation({_left_rotation}, {_right_rotation}, {_translation}, {_scale})
		if {_arg} is "block":
			kitFakeBlock(player, location of player, {_object}, {_transformation}, "display-test")
		else if {_arg} is "item":
			kitFakeItem(player, location of player, {_object}, {_transformation}, "display-test")
		else:
			message formatted "§b§lBlock§9/§b§lItem§cのいずれかを選択してください" to player
			stop

command /kit-deletedisplaytest:
	aliases: /kit-ddt
	permission: sk.admin
	trigger:
		set {_display.block} to 0
		loop all block displays:
			metadata value "display-test" of loop-block display is "%player%"
			add 1 to {_display.block}
			delete loop-block display
		set {_display.item} to 0
		loop all item displays:
			metadata value "display-test" of loop-item display is "%player%"
			add 1 to {_display.item}
			delete loop-item display
		set {_display.all} to {_display.block} + {_display.item}
		message formatted "§6§l%{_display.all}% §aの§eテストディスプレイ§aを削除しました§b:" to player
		message formatted "§9Block§b: §e§l%{_display.block}%" to player
		message formatted "§9Item§b: §e§l%{_display.item}%" to player

function kitFakeDelete(player: offline player):
	loop all falling blocks:
		metadata value "kit-block" of loop-falling block is "%{_player}%"
		loop-falling block is riding
		metadata value "kit-armor" of vehicle of loop-falling block is set
		set {_metadata} to metadata value "kit-armor" of vehicle of loop-falling block
		metadata value {_metadata} of vehicle of loop-falling block is "%{_player}%"
		delete vehicle of loop-falling block
		delete loop-falling block

function kitFakeDeleteData(player: offline player, metadata: text):
	loop all falling blocks:
		metadata value "kit-block" of loop-falling block is "%{_player}%"
		loop-falling block is riding
		metadata value "kit-armor" of vehicle of loop-falling block is {_metadata}
		metadata value {_metadata} of vehicle of loop-falling block is "%{_player}%"
		delete vehicle of loop-falling block
		delete loop-falling block

function kitFakeDeleteAll():
	loop all falling blocks:
		metadata value "kit-block" of loop-falling block is "%{_player}%"
		loop-falling block is riding
		metadata value "kit-armor" of vehicle of loop-falling block is set
		delete vehicle of loop-falling block
		delete loop-falling block

on arm swing:
	set {_tg} to target entity of player
	type of {_tg} is armor stand
	distance between player and {_tg} <= 3
	set {_passengers::*} to passenger of {_tg}
	metadata value "kit-block" of {_passengers::1} is set
	set {_target} to metadata value "kit-block" of {_passengers::1}
	set {_target} to {_target} parsed as offline player
	set {_skill} to metadata value "kit-armor" of {_tg}
	if {team::%player%} is not {team::%{_target}%}:
		make a fake explosion at location of {_tg}
		kitMsg({_target}, "§9§l%{_skill}% §cが破壊された!")
		message "§e%{_target}%§aの§9§l%{_skill}%§aを破壊しました!" to player
		kitFakeDeleteData({_target}, {_skill})
	else:
		message "§c§l味方の設置物は破壊できません!" to player

on projectile hit:
	loop all entities in radius 3 around projectile:
		delete {_target}
		delete {_skill}
		type of loop-entity is armor stand
		set {_passengers::*} to passenger of loop-entity
		metadata value "kit-block" of {_passengers::1} is set
		set {_target} to metadata value "kit-block" of {_passengers::1}
		set {_target} to {_target} parsed as offline player
		set {_skill} to metadata value "kit-armor" of loop-entity
		if {team::%shooter%} is not {team::%{_target}%}:
			make a fake explosion at location of loop-entity
			kitMsg({_target}, "§9§l%{_skill}% §cが破壊された!")
			message "§e%{_target}%§aの§9§l%{_skill}%§aを破壊しました!" to shooter
			kitFakeDeleteData({_target}, {_skill})
		else:
			message "§c§l味方の設置物は破壊できません!" to shooter

#every 10 seconds:
#	loop all falling blocks:
#		loop-falling block is riding
#		add "{Time:1}" to nbt of loop-falling block