function kitDamage(attacker: player, victim: entity, damage: number, pierce: boolean = false):
	if type of {_victim} is a player:
		LastKiller({_victim}, {_attacker})
	if {_pierce} is true:
		{Stats.%{_victim}%::DamageTicks} is not set
		{Stats.%{_victim}%::Invincible} is not set
		if {Kit-Shield::%{_victim}%} is set:
			set {_shield} to {Kit-Shield::%{_victim}%}
			subtract {_damage} from {_shield}
			send action bar "§9§lシールドがダメージを無効化した!" to {_victim}
			send action bar "§c§lシールドが攻撃を阻害した!" to {_attacker}
			if {_shield} > 0:
				set {Kit-Shield::%{_victim}%} to {_shield}
				playSound("block.anvil.land", 0.7, 2, {_victim})
			else:
				delete {Kit-Shield::%{_victim}%}
				delete {Kit-ShieldTime::%{_victim}%}
				message formatted "§3§lシールドが崩壊した!" to {_victim}
				playSound("entity.item.break", 0.7, 1, {_victim})
		else:
			set {_health} to health of {_victim}
			subtract {_damage} from {_health}
			if {_health} <= 0:
				damage {_victim} by 10000 hearts
			set health of {_victim} to {_health}
			playSound("entity.generic.hurt", 1, 1, {_victim})
			play hurt animation on {_victim}
		set {_atktick} to 20  # maximum damage delay of {_victim}
		set {Stats.%{_victim}%::DamageTicks} to round({_atktick} / 2)
		while {Stats.%{_victim}%::DamageTicks} is set:
			wait a tick
			subtract 1 from {Stats.%{_victim}%::DamageTicks}
			if {Stats.%{_victim}%::DamageTicks} <= 0:
				delete {Stats.%{_victim}%::DamageTicks}
	else:
		damage {_victim} by {_damage} hearts

function kitDamageInstant(attacker: player, victim: entity, damage: number):
	if type of {_victim} is a player:
		LastKiller({_victim}, {_attacker})
	{Stats.%{_victim}%::Invincible} is not set
	if {Kit-Shield::%{_victim}%} is set:
		set {_shield} to {Kit-Shield::%{_victim}%}
		subtract {_damage} from {_shield}
		send action bar "§9§lシールドがダメージを無効化した!" to {_victim}
		send action bar "§c§lシールドが攻撃を阻害した!" to {_attacker}
		if {_shield} > 0:
			set {Kit-Shield::%{_victim}%} to {_shield}
			playSound("block.anvil.land", 0.7, 2, {_victim})
		else:
			delete {Kit-Shield::%{_victim}%}
			delete {Kit-ShieldTime::%{_victim}%}
			message formatted "§3§lシールドが崩壊した!" to {_victim}
			playSound("entity.item.break", 0.7, 1, {_victim})
	else:
		set {_health} to health of {_victim}
		subtract {_damage} from {_health}
		playSound("entity.generic.hurt", 1, 1, {_victim})
		set health of {_victim} to {_health}
		play hurt animation on {_victim}

on damage of player:
	{Stats.%victim%::Invincible} is true
	cancel event

function kitHeal(player: player, heart: number, particle: number = 5):
	if {Kit-Blood::%{_player}%} is not set:
		heal {_player} by {_heart} hearts
		if {_particle} >= 1:
			healEffect({_player}, {_particle})

function healEffect(player: entity, count: number = 5):
	loop {_count} times:
		set {_loc} to location of {_player}
		add a random number between -1 and 1 to x-coordinate of {_loc}
		add a random number between 0 and 2 to y-coordinate of {_loc}
		add a random number between -1 and 1 to z-coordinate of {_loc}
		spawnParticle(heart, {_loc})