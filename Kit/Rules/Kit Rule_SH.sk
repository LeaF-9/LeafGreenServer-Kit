# 用意すべきyaml項目:
# - Kit-GameStage.Spawns::*

# sheepが持つmetadata一覧
# - sheep: boolean(trueのみ)
# - age: text(adult or baby)
# - color: color(red, blue, yellow, green or white)
# - holder: player(持っているプレイヤーが保存される)
# - taking: number(獲得状況を示す数字が保存される)
# - getlocation: location(羊を獲得した地点が保存される)

function kitDeathEvent_SH(attacker: player, victim: player, supporters: players):
	# Death情報の更新
	add 1 to {Kit-Death.personal::%{_victim}%}
	kitScorePersonal({_victim}, 1, "§4%{Kit-Kill.personal::%{_victim}%}% §7/ §1%{Kit-Death.personal::%{_victim}%}%")
	set {Kit-KD.personal::%{_victim}%} to {Kit-Kill.personal::%{_victim}%} / {Kit-Death.personal::%{_victim}%}
	# Kill情報の更新
	add 1 to {Kit-Kill.personal::%{_attacker}%}
	kitScorePersonal({_attacker}, 1, "§4%{Kit-Kill.personal::%{_attacker}%}% §7/ §1%{Kit-Death.personal::%{_attacker}%}%")
	set {Kit-KD.personal::%{_attacker}%} to {Kit-Kill.personal::%{_attacker}%} / {Kit-Death.personal::%{_attacker}%}

on death of player:
	{Join::%victim%} is "Kit"
	{Kit-GameStage::rule} is "SH"
	kitDropSheeps_SH(victim)



function kitDropSheeps_SH(player: player):
	unleash {_player}
	loop all sheeps:
		metadata value "sh-holder" of loop-sheep is {_player}
		delete metadata value "sh-holder" of loop-sheep

on damage of sheep:
	metadata value "sh-sheep" of victim is true
	cancel event
	if damage was caused by void:
		delete metadata value "sh-holder" of victim
		if metadata value "sh-getlocation" of victim is set:
			teleport victim to metadata value "sh-getlocation" of victim
		else:
			delete victim

function kitSpawnCheck_SH():
	loop {Kit-GameStage.Spawns::*}:
		set {_baseloc} to loop-value
		set {_index} to loop-index

		# 羊スポーン数が多い場合はキャンセル
		loop all sheeps in radius 5 around {_baseloc}:
			metadata value "sh-sheep" of loop-sheep is true
			add 1 to {_sheepcount}
		if {_sheepcount} >= 3:
			continue
		
		set {_loc.min} to {Kit-GameStage.Spawns::%{_index}%::min}
		set {_loc.max} to {Kit-GameStage.Spawns::%{_index}%::max}
		loop all blocks within {_loc.min} and {_loc.max}:
			loop-block is passable
			block below loop-block is not passable
			add location of loop-block to {_sheepspawnlocs::*}
		set {_spawn} to true
		if {_sheepspawnlocs::1} is not set:
			set {_sheepspawnlocs::1} to {_baseloc}
		set {_spawnloc} to a random location out of {_sheepspawnlocs::*}
		kitSpawnSheep_SH({_spawnloc})
		# --- 線状のパーティクル演出 ---
		set {_v} to setVector({_baseloc}, {_spawnloc})
		set yaw of {_baseloc} to yaw of {_v}
		set pitch of {_baseloc} to pitch of {_v}
		set {_dis} to distance between {_baseloc} and {_spawnloc}
		set {_m} to 0
		loop 10 times:
			add {_dis} / 10 to {_m}
			set {_el} to location {_m} meters in front of {_baseloc}
			spawnParticle(end_rod, {_el})
		# ---------------------------
	if {_spawn} is true:
		loop all players:
			if {Join::%loop-player%} is "Kit":
				send title "§f§l羊 §6§lがスポーンしました!" with subtitle "§b羊毛を陣地に連れて行こう!" to loop-player for 3 seconds

function kitSpawnSheep_SH(loc: location):
	set {_uuid} to a random uuid
	chance of 10%:
		set {_special} to true
	# --- 大羊召喚 ---
	if {_special} is true:
		set {_nbt} to nbt compound from "{Color:0,PersistenceRequired:1b,Team:noCollision,Attributes:[{Name:""generic.knockback_resistance"",Base:1f}, {Name:""generic.movement_speed"",Base:0f}]}"
		strike lightning effect at {_loc}
		set {_age} to "adult"
	# ---------------
	# --- 子羊召喚 ---
	else:
		set {_nbt} to nbt compound from "{Color:0,PersistenceRequired:1b,Team:noCollision,Age:-15000,ForcedAge:-15000,AgeLocked:1b,Attributes:[{Name:""generic.knockback_resistance"",Base:1f}, {Name:""generic.movement_speed"",Base:0f}]}"
		set {_age} to "baby"
	# -------------
	spawn a sheep at {_loc} with {_nbt}
	set metadata value "gametype" of spawned entity to "Kit"
	set metadata value "sh-sheep" of spawned entity to true
	set metadata value "sh-age" of spawned entity to {_age}
	set metadata value "sh-color" of spawned entity to white
	applyEffect(spawned entity, glowing, 1, 5 seconds, false, "none")
	loop 30 times:
		set {_rv} to randomVector(1)
		spawnParticle_Vector(end_rod, {_rv}, 0.5, location 1 meters above {_loc})

# Sheepを獲得できるかのチェック
function kitCheckAvailable_SH(player: player, sheep: entity):
	# そのプレイヤーが獲得中かのチェック
	set {_sneaking} to metadata value "sh-sneaking" of {_player}
	if {_sneaking} is true:
		stop
	# その羊が獲得中かのチェック
	set {_taking} to metadata value "sh-taking" of {_sheep}
	if {_taking} is set:
		stop
	# 所持羊数のチェック
	set {_count} to kitCheckHolding_SH({_player})
	if metadata value "sh-age" of {_sheep} is "adult":
		if {_count} < 1:
			kitTakingSheep_SH({_player}, {_sheep})
		else:
			send subtitle "§e⚠️ §c§l既に羊の最大所持数を超えています! §e⚠️" to {_player} for 1 seconds with fadein 0.25 seconds and fadeout 0.25 seconds
	else if metadata value "sh-age" of {_sheep} is "baby":
		if {_count} < 3:
			kitTakingSheep_SH({_player}, {_sheep}, {_count})
		else:
			send subtitle "§e⚠️ §c§l既に羊の最大所持数を超えています! §e⚠️" to {_player} for 1 seconds with fadein 0.25 seconds and fadeout 0.25 seconds

# Sheepをいくつ持っているかのチェック
function kitCheckHolding_SH(player: player) :: number:
	set {_count} to 0
	loop all sheeps:
		metadata value "sh-sheep" of loop-sheep is true
		metadata value "sh-holder" of loop-sheep is {_player}
		add 1 to {_count}
		if metadata value "sh-age" of loop-sheep is "adult":
			add 2 to {_count}
	return {_count}

# スニーク時に羊を獲得しようとする処理
function kitTakingSheep_SH(player: player, sheep: entity, hadnum: number = 0):
	playSound("entity.item.pickup", 1, 0.5, {_player}, true)
	add 1 to {_hadnum}
	set {_ok} to false
	# 獲得までの時間計算
	set {_team} to {TrueTeam::%{_player}%}
	if metadata value "sh-age" of {_sheep} is "adult":
		if {_player} has mining fatigue:
			set {_count} to round(300 / {Kit-TeamBuff::%{_team}%})
		else:
			set {_count} to round(200 / {Kit-TeamBuff::%{_team}%})
	else:
		if {_player} has mining fatigue:
			set {_count} to round(100 / {Kit-TeamBuff::%{_team}%}) * {_hadnum}
		else:
			set {_count} to round(60 / {Kit-TeamBuff::%{_team}%}) * {_hadnum}
	set metadata value "sh-sneaking" of {_player} to true
	set metadata value "sh-taking" of {_sheep} to 0
	# 獲得中の処理
	while {_ok} is false:
		if {_player} is not sneaking:
			set {_ok} to true
			continue
		if distance between {_player} and {_sheep} > 1.5:
			set {_ok} to true
			continue
		if metadata value "sh-taking" of {_sheep} >= {_count}:
			set {_ok} to true
			set {_get} to true
			continue
		set {_sh-taking} to metadata value "sh-taking" of {_sheep}
		add 1 to {_sh-taking}
		set metadata value "sh-taking" of {_sheep} to {_sh-taking}
		set {_barcount} to metadata value "sh-taking" of {_sheep} / ({_count} / 50)
		set {_bar} to ""
		loop 50 times:
			if loop-number <= {_barcount}:
				set {_bar} to "%{_bar}%§a|"
			else:
				set {_bar} to "%{_bar}%§8|"
		send title "§b§l獲得中です..." with subtitle "%{_bar}%" to {_player} for 2 ticks with fadein 0 tick and fadeout 0 tick
		wait a tick
	delete metadata value "sh-taking" of {_sheep}
	delete metadata value "sh-sneaking" of {_player}
	if {_get} is true:
		playSound("block.note_block.chime", 1, 2, {_player}, true)
		set metadata value "sh-holder" of {_sheep} to {_player}
		set metadata value "sh-getlocation" of {_sheep} to location of {_sheep}
		send title "§f§l羊 §bを獲得しました!" with subtitle "§e陣地の§6§l獲得エリア§eまで持ち帰ろう!" to {_player} for 5 seconds with fadein 0.5 seconds and fadeout 0.5 seconds
	else:
		playSound("block.note_block.chime", 1, 0.5, {_player}, true)

function kitGetSheepEffects_SH(player: player, sheep: entity, color: color):
	add 1 to {Kit-Carry.personal::%{_player}%}
	# 全体メッセージ
	gameMsg("Kit", "<%{_color}%>§l%{_color}% §6Team§bが§6§l羊を獲得しました!")
	# sheep演出
	loop all sheeps:
		metadata value "sh-color" of loop-sheep is {_color}
		add 1 to {_shcount}
	loop all players:
		{Join::%loop-player%} is "Kit"
		playSound("entity.firework_rocket.blast", 1, 1, loop-player, true)
		if {TrueTeam::%loop-player%} is "%{_color}%":
			send title "§9%{_player}% §bが§f§l羊§bを獲得しました!" with subtitle "§e現在のポイントは §6§l%{_shcount}% §eです" to loop-player for 1.5 seconds with fadein 0.5 seconds and fadeout 0.5 seconds
	loop 15 times:
		set {_base} to location 0.5 meters above {_sheep}
		spawnParticle_Vector(firework, randomVector(), 0.5, {_base})

function kitLostSheepEffects_SH(color: color):
	set {_shcount} to 0
	loop all sheeps:
		metadata value "sh-color" of loop-sheep is {_color}
		add 1 to {_shcount}
	loop all players:
		{TrueTeam::%loop-player%} is "%{_color}%"
		playSound("entity.blaze.death", 1, 0.5, loop-player, true)
		send title "§f§l羊 §bが奪われました!" with subtitle "§e現在のポイントは §6§l%{_shcount}% §eです" to loop-player for 1.5 seconds with fadein 0.5 seconds and fadeout 0.5 seconds

function kitTimer_SH():
	set {_timer.wool} to 0
	# Team Place Locations
	set {_placenums.red} to size of {Kit-GameStage.Places-Red::*}
	if {_placenums.red} > 0:
		add red to {_enableTeamColors::*}
	set {_placenums.blue} to size of {Kit-GameStage.Places-Blue::*}
	if {_placenums.blue} > 0:
		add blue to {_enableTeamColors::*}
	set {_placenums.yellow} to size of {Kit-GameStage.Places-Yellow::*}
	if {_placenums.yellow} > 0:
		add yellow to {_enableTeamColors::*}
	set {_placenums.green} to size of {Kit-GameStage.Places-Green::*}
	if {_placenums.green} > 0:
		add green to {_enableTeamColors::*}

	while {Kit-tochu} is true:
		# --- reset variables ---
		set {_teampoint::red} to 0
		set {_teampoint::blue} to 0
		set {_teampoint::yellow} to 0
		set {_teampoint::green} to 0
		# -----------------------
		# --- Wool Spawn Timer ---
		add 1 to {_timer.wool}
		if {_timer.wool} >= 30:
			set {_timer.wool} to 0
			kitSpawnCheck_SH()
		# ------------------------
		# --- Sheep Checker ---
		loop all sheeps:
			metadata value "sh-sheep" of loop-sheep is true
			# --- Sheep Moving (holder) ---
			set {_holder} to metadata value "sh-holder" of loop-sheep
			if {_holder} is set:
				apply glowing 1 to loop-sheep for 1 second
				# --- Holder Change ---
				set {_leasher} to leash holder of loop-sheep
				if {_leasher} is not {_holder}:
					unleash {_leasher}
					leash loop-sheep to {_holder}
				else if {_leasher} is not set:
					leash loop-sheep to {_holder}
				# ---------------------
				if distance between {_holder} and loop-sheep > 3:
					set {_vector} to setVector(location of loop-sheep, location of {_holder})
					set velocity of loop-sheep to {_vector}
					if distance between {_holder} and loop-sheep > 10:
						teleport loop-sheep to {_holder}
			# -----------------------------
			# --- Sheep Securing(no holder) ---
			else:
				unleash holder of loop-sheep
				loop all players in radius 1.5 around loop-sheep:
					set {_teamcolor} to metadata value "sh-color" of loop-sheep
					{TrueTeam::%loop-player%} is not "%{_teamcolor}%"
					if loop-player is sneaking:
						kitCheckAvailable_SH(loop-player, loop-sheep)
					else if metadata value "sh-taking" of loop-sheep is not set:
						sendSubtitle(loop-player, "§3§lスニーク長押し §bで羊を確保できます!", 1 second, 0 seconds, 0 seconds)
			# ---------------------------------
			# --- Sheep Team Colorize ---
			set {_color.before} to white
			set {_loc.sheep} to location of loop-sheep

			delete {_colorize}
			loop {_enableTeamColors::*}:
				set {_loopteamcolor} to loop-value-2
				set {_pn} to 0
				loop {_placenums.%{_loopteamcolor}%} times:
					add 1 to {_pn}
					set {_min} to {Kit-GameStage.Places-%{_loopteamcolor}%::%{_pn}%::min}
					set {_max} to {Kit-GameStage.Places-%{_loopteamcolor}%::%{_pn}%::max}
					if checkWithin({_loc.sheep}, {_min}, {_max}) is true:
						set {_basepoint} to {Kit-TeamBuff::%{_loopteamcolor}%}
						add {_basepoint} to {_teampoint::%{_loopteamcolor}%}
						if metadata value "sh-age" of loop-sheep is "adult":
							add {_basepoint} * 2 to {_teampoint::%{_loopteamcolor}%}
						set metadata value "sh-color" of loop-sheep to {_loopteamcolor}
						set {_colorize} to true
			if {_colorize} is not set:
				set metadata value "sh-color" of loop-sheep to white
			set {_color.after} to metadata value "sh-color" of loop-sheep
			set color of loop-sheep to {_color.after}
			if {_color.before} is white:
				set {_holder} to metadata value "sh-holder" of loop-sheep
				if {_holder} is set:
					if "%{_color.after}%" is {TrueTeam::%{_holder}%}:
						delete metadata value "sh-holder" of loop-sheep
						add 1 to {Kit-Carry.personal::%{_holder}%}
						kitGetSheepEffects_SH({_holder}, loop-sheep, {_color.after})
			else:
				if {_color.after} is white:
					kitLostSheepEffects_SH({_color.before})
			# --------------------------
		# ----------------------
		# --- Player Walk Speed ---
		loop all players:
			metadata value "gametype" of loop-player is "Kit"
			set {_shcount} to kitCheckHolding_SH(loop-player)
			set {_setspeed} to 0.2 - (0.03 * {_shcount})
			set {_nowspeed} to walk speed of loop-player
			if {_shcount} is 0:
				if {_nowspeed} < 0.2:
					set walk speed of loop-player to 0.2
			else:
				if {_nowspeed} > {_setspeed}:
					set walk speed of loop-player to {_setspeed}
		# -------------------------
		# --- Scoreboard Reload ---
		if {Kit-SheepPoint::red} != {_teampoint::red}:
			set {Kit-SheepPoint::red} to {_teampoint::red}
			kitScoreGlobal(7, "§c赤§7: §6%floor({_teampoint::red})%")
		if {Kit-SheepPoint::blue} != {_teampoint::blue}:
			set {Kit-SheepPoint::blue} to {_teampoint::blue}
			kitScoreGlobal(6, "§9青§7: §6%floor({_teampoint::blue})%")
		if {Kit-GameStage::team} is "4" or 4:
			if {Kit-SheepPoint::yellow} != {_teampoint::yellow}:
				set {Kit-SheepPoint::yellow} to {_teampoint::yellow}
				kitScoreGlobal(5, "§e黄§7: §6%floor({_teampoint::yellow})%")
			if {Kit-SheepPoint::green} != {_teampoint::green}:
				set {Kit-SheepPoint::green} to {_teampoint::green}
				kitScoreGlobal(4, "§a緑§7: §6%floor({_teampoint::green})%")
		# -------------------------
		# --- Point Calc ---
		loop {_teampoint::*}:
			if loop-value >= {Kit-GameStage::goal}:
				set {_gameend} to true
				add loop-index to {Kit-WinTeam::*}
		if {_gameend} is true:  # game end
			gameMsg("Kit", "§c§l試合終了!")
			stopTimer("Kit-SH")
		# ------------------
		wait a second