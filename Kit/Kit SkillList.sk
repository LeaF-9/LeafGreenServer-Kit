options:
	prefix: §a[§eSkill§a]

command /kitskilllist <text> <text>:
	permission: sk.admin
	executable by: player
	trigger:
# 調整めんどくさいのでここ後回し
#		if arg 1 is "add":
#			if {Kit-Classes::%arg 2%} is set:
#				add player's tool to {Kit-Skill.%arg 2%::*}
#				message "{@prefix} §a%name of player's tool%§bを§e%arg 2%§bのSkillに設定しました" to player
#			else:
#				message "{@prefix} §cKitが存在しません" to player
#		else if arg 1 is "addoption":
#			add player's tool to {Kit-Skill.%arg 2%::*}
#			message "{@prefix} §a%name of player's tool%§bを§e%arg 2%§bのSkillに設定しました" to player
#		if arg 1 is "give":
#			loop {Kit-Skill.%arg 2%::*}:
#				give loop-value to player
#			message "{@prefix} §e%arg 2%§bに設定された§aSkill§bを全て手渡しました" to player
#		else if arg 1 is "delete":
#			if arg 2 is "all":
#				loop {Kit-ClassList::*}:
#					delete {Kit-Skill.%loop-value%::*}
#				message "{@prefix} §c全てののSkillを削除しました" to player
#			else:
#				delete {Kit-Skill.%arg 2%::*}
#				message "{@prefix} §e%arg 2%§cのSkillを全削除しました" to player
		if arg 1 is "list":
			message "{@prefix} §c%arg 2%§a's Skill§7:" to player
			load yml "plugins/skript-yaml/Kit Classes/%arg 2%.yml" as "class.%arg 2%"
			loop yaml node keys "skill" from "class.%arg 2%":
				set {_skill} to yml value "%loop-node%" from "class.%arg 2%"
				message "{@prefix} §7- §d%display name of {_skill}%" to player
				message "{@prefix}   §7- §5%lore of {_skill}%" to player
				message "§7----------" to player
			unload yml "class.%arg 2%"

command /kitweaponlist <text> <text>:
	permission: sk.admin
	executable by: player
	trigger:
#		if arg 1 is "add":
#			if {Kit-Classes::%arg 2%} is set:
#				add player's tool to {Kit-Skill.%arg 2%::*}
#				message "{@prefix} §a%name of player's tool%§bを§e%arg 2%§bのSkillに設定しました" to player
#			else:
#				message "{@prefix} §cKitが存在しません" to player
#		else if arg 1 is "addoption":
#			add player's tool to {Kit-Skill.%arg 2%::*}
#			message "{@prefix} §a%name of player's tool%§bを§e%arg 2%§bのSkillに設定しました" to player
#		if arg 1 is "give":
#			loop {Kit-Skill.%arg 2%::*}:
#				give loop-value to player
#			message "{@prefix} §e%arg 2%§bに設定された§aSkill§bを全て手渡しました" to player
#		else if arg 1 is "delete":
#			if arg 2 is "all":
#				loop {Kit-ClassList::*}:
#					delete {Kit-Skill.%loop-value%::*}
#				message "{@prefix} §c全てののSkillを削除しました" to player
#			else:
#				delete {Kit-Skill.%arg 2%::*}
#				message "{@prefix} §e%arg 2%§cのSkillを全削除しました" to player
		if arg 1 is "list":
			message "{@prefix} §c%arg 2%§a's Weapon§7:" to player
			load yml "plugins/skript-yaml/Kit Classes/%arg 2%.yml" as "class.%arg 2%"
			loop yaml node keys "weapon" from "class.%arg 2%":
				set {_main} to yml value "%loop-node%.main" from "class.%arg 2%"
				message "{@prefix} §7- §d%display name of {_main}%" to player
				set {_sub} to yml value "%loop-node%.sub" from "class.%arg 2%"
				message "{@prefix}   §7- §5%display name of {_sub}%" to player
				message "§7----------" to player
			unload yml "class.%arg 2%"

command /kitskilladd <text>:
	permission: sk.admin
	executable by: player
	trigger:
		set {_l} to 8
		set {_num} to 0
		load yml "plugins/skript-yaml/Kit Classes/%arg 1%.yml" as "class.save.%arg 1%"
		loop {_l} times:
			set {_item} to slot {_num} of player
			set {_ymlnum} to {_num} + 1
			set {_item} to kitItemTagChanger({_item}, arg 1, "Skill", {_ymlnum})
			set yml value "skill.%{_ymlnum}%" from "class.save.%arg 1%" to {_item}
			add 1 to {_num}
		save yml "class.save.%arg 1%"
		message "§a%arg 1% §bのSkillを再設定しました" to player

command /kitweaponadd <text> <text>:
	usage: /kitweaponadd <type> <kit> <number>
	permission: sk.admin
	executable by: player
	trigger:
		if arg 1 is "main" or "sub":
			set {_type} to arg 1
		else:
			stop
		set {_l} to 3
		set {_num} to 0
		load yml "plugins/skript-yaml/Kit Classes/%arg 2%.yml" as "class.save.%arg 2%"
		loop {_l} times:
			set {_item} to slot {_num} of player
			set {_ymlnum} to {_num} + 1
			set {_item} to kitItemTagChanger({_item}, arg 2, "Weapon.%{_type}%", {_ymlnum})
			set yml value "weapon.%{_ymlnum}%.%{_type}%" from "class.save.%arg 2%" to {_item}
			add 1 to {_num}
		save yml "class.save.%arg 2%"
		message "§a%arg 2% §bのWeaponを再設定しました" to player

command /kitskillgive <text>:
	usage: /kitskillgive <kit>
	permission: sk.admin
	executable by: player
	trigger:
		set {_skills::*} to kitSkillList(arg 1)
		remove all items from player's inventory
		loop {_skills::*}:
			give loop-value to player

command /kitweapongive <text>:
	usage: /kitweapongive <kit>
	permission: sk.admin
	executable by: player
	trigger:
		set {_weapons::*} to kitWeaponList(arg 1, "main")
		set {_subs::*} to kitWeaponList(arg 1, "sub")
		remove all items from player's inventory
		loop {_weapons::*}:
			give loop-value to player
		set {_slot} to 27
		loop {_subs::*}:
			set slot {_slot} of player to loop-value
			add 1 to {_slot}

# #####################################################################

# command /kitskillset <player> <text>:
# 	description: 初期Skillが設定されていない場合の対処
# 	permission: sk.admin
# 	trigger:
# 		if {Kit-Skill-%arg 1's UUID%.%arg 2%::1} is not set:
# 			set {Kit-Skill-%arg 1's UUID%.%arg 2%::1} to {Kit-Skill.%arg 2%::1}
# 		if {Kit-Skill-%arg 1's UUID%.%arg 2%::2} is not set:
# 			set {Kit-Skill-%arg 1's UUID%.%arg 2%::2} to {Kit-Skill.%arg 2%::2}
# 		if {Kit-Skill-%arg 1's UUID%.%arg 2%::3} is not set:
# 			set {Kit-Skill-%arg 1's UUID%.%arg 2%::3} to {Kit-Skill.%arg 2%::3}
# 		loop 3 times:
# 			give {Kit-Skill-%arg 1's UUID%.%arg 2%::%loop-number%} to arg 1

# #####################################################################

# command /kitskillunset <text>:
# 	permission: sk.admin
# 	trigger:
# 		loop {UUID::*}:
# 			delete {Kit-Skill-%loop-index%.%arg 1%::*}
# 		message "§a%arg 1% §cのSkill選択状態をリセットしました" to player

# command /kitweaponunset <text>:
# 	permission: sk.admin
# 	trigger:
# 		loop {UUID::*}:
# 			delete {Kit-Weapon-%loop-index%::%arg 1%}
# 			delete {Kit-SubWeapon-%loop-index%::%arg 1%}
# 		message "§a%arg 1% §cのWeapon選択状態をリセットしました" to player

on rightclick on smithing table:
	block below target block is barrier
	make player execute command "/kitcustom Weapon"

on rightclick on fletching table:
	block below target block is barrier
	make player execute command "/kitcustom Skill"

on rightclick on cartography table:
	block below target block is barrier
	make player execute command "/kitcustom Unit"

command /kitcustom <text> <player=%player%>:
	trigger:
		openKitGenre(arg 2, arg 1)

on inventory click:
	type of event-inventory is chest inventory
	if inventory name of event-inventory is "§bKit: §6Genre-Weapon":
		cancel event
		if type of clicked item is a concrete:
			set {_genre} to name of clicked item
			replace "§6§l" with "" in {_genre}
			close player's inventory
			openKitCustom(player, "Weapon", {_genre})
	else if inventory name of event-inventory is "§bKit: §6Genre-Skill":
		cancel event
		if type of clicked item is a concrete:
			set {_genre} to name of clicked item
			replace "§6§l" with "" in {_genre}
			close player's inventory
			openKitCustom(player, "Skill", {_genre})
	else if inventory name of event-inventory is "§bKit: §9Weapon Customize":
		cancel event
		if clicked slot is 0, 1, 2, 3, 4, 5, 6, 7 or 8:
			set {_genre} to name of clicked item
			if {_genre} is set:
				replace "§6§l" with "" in {_genre}
				close player's inventory
				openKitWeaponCustom(player, {_genre})
	else if inventory name of event-inventory is "§bKit: §9Skill Customize":
		cancel event
		if clicked slot is 0, 1, 2, 3, 4, 5, 6, 7 or 8:
			set {_genre} to name of clicked item
			if {_genre} is set:
				replace "§6§l" with "" in {_genre}
				close player's inventory
				openKitSkillCustom(player, {_genre})
#	else if inventory name of event-inventory is "§bKit: §9Weapon Customize":
#		cancel event
#		if clicked slot is 0, 2, 4, 6, 8, 10, 12, 14 or 16:
#			set {_genre} to name of clicked item
#			if {_genre} is set:
#				replace "§6§l" with "" in {_genre}
#				close player's inventory
#				openKitWeaponCustom(player, {_genre})
	else:
		load yml "plugins/skript-yaml/Kit Classes/All Classes.yml" as "class.all"
		set {_classes.all::*} to yml list "Classes" from "class.all"
		unload yml "class.all"
		loop {_classes.all::*}:
			if inventory name of event-inventory is "§bKit: §6%loop-value%§c's Weapon":
				cancel event
				set {_weapon} to clicked item
				load yml "plugins/skript-yaml/Kit Classes/%loop-value%.yml" as "class.%loop-value%"
				loop yaml node keys "weapon" from "class.%loop-value%":
					set {_main} to yml value "%loop-node%.main" from "class.%loop-value-1%"
					add {_main} to {_main-weapon::*}
					set {_sub} to yml value "%loop-node%.sub" from "class.%loop-value-1%"
					add {_sub} to {_sub-weapon::*}
				unload yml "class.%loop-value%"
				loop {_main-weapon::*}:
					if loop-value-2 is {_weapon}:
						close player's inventory
						set {_uuid} to UUID of player
						load yml "plugins/skript-yaml/Kit Players/%{_uuid}%.yml" as "player.%player%"
						set {_index} to loop-index-2
						set {_index} to {_index} parsed as number
						set yml value "custom.%loop-value-1%.weapon" from "player.%player%" to {_index}
						save yml "player.%player%"
						message "{@prefix} §a選択したWeaponをセーブしました" to player
				loop {_sub-weapon::*}:
					if loop-value-2 is {_weapon}:
						message "{@prefix} §cそのアイテムは§aSub Weapon§cです" to player

function openKitGenre(player: player, type: text):
	wait a tick
	open chest with 6 row named "§bKit: §6Genre-%{_type}%" to {_player}
	wait a tick
	set {_num} to 0
	loop 9 times:
		if {_type} is "Weapon":
			set slot {_num} of {_player}'s current inventory to red stained glass pane named "§4Weapon Customize"
		else if {_type} is "Skill":
			set slot {_num} of {_player}'s current inventory to lime stained glass pane named "§2Skill Customize"
		else if {_type} is "Unit":
			set slot {_num} of {_player}'s current inventory to blue stained glass pane named "§1Unit Customize"
		add 1 to {_num}
	loop 36 times:
		if {_num} is 9, 10, 11, 18, 19 or 20:
			set slot {_num} of {_player}'s current inventory to red concrete named "§6§lAttacker" with lore "§f近接攻撃に特化したKitです", "§f近接戦闘では圧倒的火力で猛威を奮うことが出来ます" and "§f遠距離戦闘は苦手なので,得意な距離で戦いましょう"
		else if {_num} is 12, 13, 14, 21, 22 or 23:
			set slot {_num} of {_player}'s current inventory to yellow concrete named "§6§lMagician" with lore "§f特殊な攻撃方法で戦うKitです", "§f戦闘法が独特であり,PvP技術が不必要なのが魅力です" and "§f扱いがとても難しい為,Kitへの深い理解が必要です"
		else if {_num} is 15, 16, 17, 24, 25 or 26:
			set slot {_num} of {_player}'s current inventory to lime concrete named "§6§lShooter" with lore "§f遠距離からの攻撃を得意とするKitです", "§f圧倒的な射程距離を誇り,安全な位置から攻撃できます" and "§f接近されると上手く戦えない為,敵とは離れて戦いましょう"
		else if {_num} is 27, 28, 29, 36, 37 or 38:
			set slot {_num} of {_player}'s current inventory to light blue concrete named "§6§lAcrobat" with lore "§f高い機動力で敵を翻弄するKitです", "§f3次元的な戦闘が可能であり,容易に急接近出来ます" and "§f防御面は不安な為,攻撃を受けない様に戦いましょう"
		else if {_num} is 30, 31, 32, 39, 40 or 41:
			set slot {_num} of {_player}'s current inventory to blue concrete named "§6§lTank" with lore "§f圧倒的な防御力を所持するKitです", "§f防御面でのサポートを行ない,要塞を築くことが出来ます" and "§f攻撃力が低く決定打に欠けるので,連携して戦いましょう"
		else if {_num} is 33, 34, 35, 42, 43 or 44:
			set slot {_num} of {_player}'s current inventory to pink concrete named "§6§lSupport" with lore "§f味方の援護を専門とするKitです", "§f味方の援護を行なうことでチームの戦闘力を引き上げます" and "§f自身は戦闘に不向きなので,援護に徹して立ち回りましょう"
		add 1 to {_num}
	loop 9 times:
		if {_type} is "Weapon":
			set slot {_num} of {_player}'s current inventory to red stained glass pane named "§4Weapon Customize"
		else if {_type} is "Skill":
			set slot {_num} of {_player}'s current inventory to lime stained glass pane named "§2Skill Customize"
		else if {_type} is "Unit":
			set slot {_num} of {_player}'s current inventory to blue stained glass pane named "§1Unit Customize"
		add 1 to {_num}
	
function openKitCustom(player: player, type: text, genre: text, special: boolean = false):
	wait a tick
	open chest with 1 row named "§bKit: §9%{_type}% Customize" to {_player}
	wait a tick
	set {_slot} to 0
	load yml "plugins/skript-yaml/Kit Classes/All Classes.yml" as "class.all"
	set {_classes::*} to yml list "Classes" from "class.all"
	unload yml "class.all"
	loop {_classes::*}:
		load yml "plugins/skript-yaml/Kit Classes/%loop-value%.yml" as "class.%{_player}%.check"
		yml value "type" from "class.%{_player}%.check" is {_genre}
		yml value "enable" from "class.%{_player}%.check" is true
#		if {_special} is false:
#		if {_player} has permission "kit.class.%loop-value%":
		set {_uuid} to UUID of {_player}
		set {_item.%loop-value%} to yml value "item" from "class.%{_player}%.check"
		unload yml "class.%{_player}%.check"
		delete {_use::*}
		set {_use::weapon} to kitPlayerWeaponItem({_player}, loop-value, "main")
		set {_use::skill-1} to kitPlayerSkillItem({_player}, loop-value, 1)
		set {_use::skill-2} to kitPlayerSkillItem({_player}, loop-value, 2)
		set {_use::skill-3} to kitPlayerSkillItem({_player}, loop-value, 3)
		set slot {_slot} of {_player}'s current inventory to {_item.%loop-value%} named "§6§l%loop-value%" with lore " ", "§4Weapon: §r%display name of {_use::weapon}%", "§6Skill 1: §r%display name of {_use::skill-1}%", "§6Skill 2: §r%display name of {_use::skill-2}%" and "§6Skill 3: §r%display name of {_use::skill-3}%"
		add 1 to {_slot}

function openKitSkillCustom(player: player, kit: text):
	wait a tick
	open chest with 5 row named "§bKit: §6%{_kit}%§e's Skill" to {_player}
	wait a tick
	set {_num} to -1
	loop 27 times:
		add 1 to {_num}
		if {_num} is 0, 2, 3, 5, 6, 8, 9, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25 or 26:
			set slot {_num} of {_player}'s current inventory to a white glass pane named " "
		else if {_num} is 1, 4 or 7:
			set slot {_num} of {_player}'s current inventory to a red glass pane named "§c§l⇩ §a§lSkill Select §c§l⇩"
	load yml "plugins/skript-yaml/Kit Classes/%{_kit}%.yml" as "class.custom.%{_kit}%"
	loop yaml node keys "skill" from "class.custom.%{_kit}%":
		set {_skill} to yml value "%loop-node%" from "class.custom.%{_kit}%"
		add {_skill} to {_skills::*}
	unload yml "class.custom.%{_kit}%"
	loop {_skills::*}:
		add 1 to {_num}
		set slot {_num} of {_player}'s current inventory to loop-value
	format slot 38 of {_player} with chest named "§9Registered Unit" with lore "§b登録済であるSkill編成に変更します" to run "kit-unitlist %{_kit}% %{_player}%" 
	if {_kit} is "Werewolf", "Werewolf_Instinct", "Vampire" or "Vampire_Bat":
		format slot 42 of {_player} with redstone item named "§cType Change" with lore "§7Kitのタイプを変更します" and "§9Kit§7: §4§lWerewolf§7, §4§lVampire" to run "kittypechange %{_kit}% %{_player}%"
	format slot 44 of {_player} with nether star named "§eSave Skills" with lore "§a選択したSkillをセーブします" to run "kitskillsave %{_kit}% %{_player}%"

function openKitWeaponCustom(player: player, kit: text):
	wait a tick
	open chest with 2 row named "§bKit: §6%{_kit}%§c's Weapon" to {_player}
	wait a tick
	set slot 0 of {_player}'s current inventory to a red glass pane named "§4§lMain Weapon" with lore "§fKitのメインとなる武器です" and "§aこの列のアイテムを選択して下さい"
	set slot 9 of {_player}'s current inventory to a yellow glass pane named "§e§lSub Weapon" with lore "§fKitのオフハンドに装備する武器です" and "§cこの列のアイテムは選択できません"
	set {_slot} to 2
	load yml "plugins/skript-yaml/Kit Classes/%{_kit}%.yml" as "class.custom.%{_kit}%"
	loop yaml node keys "weapon" from "class.custom.%{_kit}%":
		set {_main} to yml value "%loop-node%.main" from "class.custom.%{_kit}%"
		add {_main} to {_main-weapon::*}
		set {_sub} to yml value "%loop-node%.sub" from "class.custom.%{_kit}%"
		add {_sub} to {_sub-weapon::*}
	unload yml "class.custom.%{_kit}%"
	loop {_main-weapon::*}:
		set slot {_slot} of {_player}'s current inventory to loop-value
		add 1 to {_slot}
	set {_slot} to 11
	loop {_sub-weapon::*}:
		set slot {_slot} of {_player}'s current inventory to loop-value
		add 1 to {_slot}

command /kittypechange <text> <player>:
	executable by: console
	trigger:
		execute console command "/kitskillsave %arg 1% %arg 2%"
		if arg 1 is "Werewolf":
			set {_type} to "Werewolf_Instinct"
		else if arg 1 is "Vampire":
			set {_type} to "Vampire_Bat"
		else:
			message "{@prefix} §c§lこのKitは別Typeが存在しません!" to arg 2
			stop
		make arg 2 execute command "/skillcustom %{_type}%"

command /kitskillsave <text> <player>:
	executable by: console
	trigger:
		set {_skill1} to slot 10 of arg 2's current inventory
		set {_skill2} to slot 13 of arg 2's current inventory
		set {_skill3} to slot 16 of arg 2's current inventory
		load yml "plugins/skript-yaml/Kit Classes/%arg 1%.yml" as "class.custom.%arg 1%"
		loop yaml node keys "skill" from "class.custom.%arg 1%":
			set {_skill} to yml value "%loop-node%" from "class.custom.%arg 1%"
			add {_skill} to {_skills::*}
		loop {_skills::*}:
			if {_skill1} is loop-value:
				add 1 to {_con}
				set {_skillslot-1} to loop-index parsed as number
			if {_skill2} is loop-value:
				add 1 to {_con}
				set {_skillslot-2} to loop-index parsed as number
			if {_skill3} is loop-value:
				add 1 to {_con}
				set {_skillslot-3} to loop-index parsed as number
		if {_con} is 3:
			set {_uuid} to UUID of arg 2
			load yml "plugins/skript-yaml/Kit Players/%{_uuid}%.yml" as "player.%arg 2%.custom"
			set yml value "custom.%arg 1%.skill.1" from "player.%arg 2%.custom" to {_skillslot-1}
			set yml value "custom.%arg 1%.skill.2" from "player.%arg 2%.custom" to {_skillslot-2}
			set yml value "custom.%arg 1%.skill.3" from "player.%arg 2%.custom" to {_skillslot-3}
			save yml "player.%arg 2%.custom"
			message "{@prefix} §a選択したSkillをセーブしました" to arg 2
			if {Kit-tochu} is true:
				if {Join::%arg 2%} is "Kit":
					execute console command "/class %arg 1% %arg 2% true"
		else:
			message "{@prefix} §c選択したアイテムはSkillではありません" to arg 2
		close arg 2's inventory

command /kitskillusage <text>:
	permission: sk.admin
	trigger:
		message formatted "{@prefix} §c§l%arg 1%§2's Skill Usage:" to player
		load yml "plugins/skript-yaml/Kit Classes/%arg 1%.yml" as "skill.use.item"
		loop yaml node keys "skill" from "skill.use.item":
			set {_skill} to yml value "%loop-node%" from "skill.use.item"
			add {_skill} to {_skills::*}
		loop all offline players:
			set {_uuid} to loop-offline player's UUID
			load yml "plugins/skript-yaml/Kit Players/%{_uuid}%.yml" as "skill.use.player"
			yml value "custom.%arg 1%.skill.1" from "skill.use.player" is set
			add 1 to {_sum}
			loop 3 times:
				set {_slotnum} to yml value "custom.%arg 1%.skill.%loop-number%" from "skill.use.player"
				set {_skill} to yml value "skill.%{_slotnum}%" from "skill.use.item"
				set {_name} to display name of {_skill}
				add 1 to {_U-%{_name}%}
		unload yml "skill.use.player"
		unload yml "skill.use.item"
		loop {_skills::*}:
			set {_name} to display name of {_skills::%loop-index%}
			if {_U-%{_name}%} is not set:
				set {_U-%{_name}%} to 0
			set {_per} to ({_U-%{_name}%} / {_sum}) * 100
			message formatted "{@prefix} - %{_name}%§7 §a%{_per}%§e%%" to player

command /kitweaponusage <text>:
	permission: sk.admin
	trigger:
		message formatted "{@prefix} §c§l%arg 1%§2's Weapon Usage:" to player
		load yml "plugins/skript-yaml/Kit Classes/%arg 1%.yml" as "weapon.use.item"
		loop yaml node keys "weapon" from "weapon.use.item":
			set {_weapon} to yml value "%loop-node%.main" from "weapon.use.item"
			add {_weapon} to {_weapons::*}
		loop all offline players:
			set {_uuid} to loop-offline player's UUID
			load yml "plugins/skript-yaml/Kit Players/%{_uuid}%.yml" as "weapon.use.player"
			yml value "custom.%arg 1%.weapon" from "weapon.use.player" is set
			add 1 to {_sum}
			set {_slotnum} to yml value "custom.%arg 1%.weapon" from "weapon.use.player"
			set {_weapon} to yml value "weapon.%{_slotnum}%.main" from "weapon.use.item"
			set {_name} to display name of {_weapon}
			add 1 to {_U-%{_name}%}
		unload yml "weapon.use.player"
		unload yml "weapon.use.item"
		loop {_weapons::*}:
			set {_name} to display name of {_weapons::%loop-index%}
			if {_U-%{_name}%} is not set:
				set {_U-%{_name}%} to 0
			set {_per} to ({_U-%{_name}%} / {_sum}) * 100
			message formatted "{@prefix} - %{_name}%§7 §a%{_per}%§e%%" to player

function kitSkillItem(kit: text, num: number) :: item:
	load yml "plugins/skript-yaml/Kit Classes/%{_kit}%.yml" as "class.%{_kit}%"
	set {_item} to yml value "skill.%{_num}%" from "class.%{_kit}%"
	unload yml "class.%{_kit}%"
	return {_item}

function kitWeaponItem(kit: text, num: number, type: text) :: item:
	load yml "plugins/skript-yaml/Kit Classes/%{_kit}%.yml" as "class.%{_kit}%"
	set {_item} to yml value "weapon.%{_num}%.%{_type}%" from "class.%{_kit}%"
	unload yml "class.%{_kit}%"
	return {_item}

function kitSkillList(kit: text) :: items:
	load yml "plugins/skript-yaml/Kit Classes/%{_kit}%.yml" as "class.%{_kit}%"
	loop yaml node keys "skill" from "class.%{_kit}%":
		set {_skill} to yml value "%loop-node%" from "class.%{_kit}%"
		add {_skill} to {_skills::*}
	unload yml "class.%{_kit}%"
	return {_skills::*}

function kitWeaponList(kit: text, type: text) :: items:
	load yml "plugins/skript-yaml/Kit Classes/%{_kit}%.yml" as "class.%{_kit}%"
	loop yaml node keys "weapon" from "class.%{_kit}%":
		set {_weapon} to yml value "%loop-node%.%{_type}%" from "class.%{_kit}%"
		add {_weapon} to {_weapons::*}
	unload yml "class.%{_kit}%"
	return {_weapons::*}

function kitPlayerSkillItem(player: player, kit: text, slot: number) :: item:
	load yml "plugins/skript-yaml/Kit Classes/%{_kit}%.yml" as "class.%{_player}%.kit"
	set {_uuid} to UUID of {_player}
	load yml "plugins/skript-yaml/Kit Players/%{_uuid}%.yml" as "player.%{_player}%.kit"
	set {_num} to yml value "custom.%{_kit}%.skill.%{_slot}%" from "player.%{_player}%.kit"
	set {_item} to yml value "skill.%{_num}%" from "class.%{_player}%.kit"
	unload yml "class.%{_player}%.kit"
	unload yml "player.%{_player}%.kit"
	return {_item}

function kitPlayerWeaponItem(player: player, kit: text, type: text) :: item:
	load yml "plugins/skript-yaml/Kit Classes/%{_kit}%.yml" as "class.%{_player}%.kit"
	set {_uuid} to UUID of {_player}
	load yml "plugins/skript-yaml/Kit Players/%{_uuid}%.yml" as "player.%{_player}%.kit"
	set {_num} to yml value "custom.%{_kit}%.weapon" from "player.%{_player}%.kit"
	set {_item} to yml value "weapon.%{_num}%.%{_type}%" from "class.%{_player}%.kit"
	unload yml "class.%{_player}%.kit"
	unload yml "player.%{_player}%.kit"
	return {_item}

#function kitSkillUpdate(kit: text):
#	loop {Kit-Skill.%{_kit}%::*}:
#		set {_name.base} to display name of {Kit-Skill.%{_kit}%::%loop-index%}
#		loop all offline players:
#			set {_uuid} to loop-offline player's UUID
#			{Kit-Skill-%{_uuid}%.%{_kit}%::1} is set
#			set {_ln} to 0
#			loop 3 times:
#				add 1 to {_ln}
#				set {_name.use} to display name of {Kit-Skill-%{_uuid}%.%{_kit}%::%{_ln}%}
#				if {_name.base} is {_name.use}:
#					set {Kit-Skill-%{_uuid}%.%{_kit}%::%{_ln}%} to {Kit-Skill.%{_kit}%::%loop-index%}
#
#function kitWeaponUpdate(kit: text):
#	loop {Kit-Weapon.%{_kit}%::*}:
#		set {_name.base} to display name of {Kit-Weapon.%{_kit}%::%loop-index%}
#		loop all offline players:
#			set {_uuid} to loop-offline player's UUID
#			{Kit-Weapon-%{_uuid}%::%{_kit}%} is set
#			set {_name.use} to display name of {Kit-Weapon-%{_uuid}%::%{_kit}%}
#			if {_name.base} is {_name.use}:
#				set {Kit-Weapon-%{_uuid}%::%{_kit}%} to {Kit-Weapon.%{_kit}%::%loop-index%}
#				set {Kit-SubWeapon-%{_uuid}%::%{_kit}%} to {Kit-SubWeapon.%{_kit}%::%loop-index%}