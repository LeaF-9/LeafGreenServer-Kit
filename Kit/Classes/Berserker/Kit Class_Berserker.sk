# Skills

function kitSkillBerserker(player: player) :: boolean:
	set {_tool} to {_player}'s tool
	set {_item.num} to kitItemNumberChecker({_tool})
	if checkCT({_player}, name of {_tool}) is true:
		if {_item.num} is 1:
			kitSkill_Berserker_1({_player})
		else if {_item.num} is 2:
			kitSkill_Berserker_2({_player})
		else if {_item.num} is 3:
			kitSkill_Berserker_3({_player})
		else if {_item.num} is 4:
			kitSkill_Berserker_4({_player})
		else if {_item.num} is 5:
			kitSkill_Berserker_5({_player})
		else if {_item.num} is 6:
			kitSkill_Berserker_6({_player})
		else if {_item.num} is 7:
			kitSkill_Berserker_7({_player})
		else if {_item.num} is 8:
			kitSkill_Berserker_8({_player})
	return true

# Passive
on damage of player:
	damage was caused by attack
	set {_attacker} to getAttacker(victim)
	{Stats.%{_attacker}%::AdrenalinRage} is not set
	set {_enable} to false

	if {Stats.%{_attacker}%::Berserk} is true:
		set {_enable} to true
		set {_range} to 5
		set {_damage} to 1
	if {Stats.%{_attacker}%::BerserkTime} is set:
		set {_enable} to true
		set {_range} to 7
		set {_damage} to 2
		playSound("entity.blaze.shoot", 0.75, 1.75, {_attacker})

	if {_enable} is false:
		stop

	kitParticle_Berserk_Around({_attacker}, {_range})
	loop all players in radius {_range} around {_attacker}:
		loop-player is not {_attacker}
		loop-player is not victim
		kitDamageNull({_attacker}, loop-player, {_damage})
		kitEffectDescription(victim, "ยง4โค%{_damage}%")
		kitParticle_Berserk_Hit(loop-player, {_damage})

local function kitParticle_Berserk_Around(player: player, range: number):
	set {_baseloc} to location 1 meter above {_player}
	loop 20 times:
		add 360 / 20 to {_rad}
		set {_el} to {_baseloc}
		add {_range} * sin({_rad}) to x-pos of {_el}
		add {_range} * cos({_rad}) to z-pos of {_el}
		spawnParticle(raid_omen, {_el})

local function kitParticle_Berserk_Hit(player: player, damage: number):
	set {_baseloc} to location 1 meter above {_player}
	loop 3 * {_damage} times:
		set {_v} to randomVector()
		spawnParticle_Vector(damage_indicator, {_v}, 1, {_baseloc})


# Timer
function kitTimerBerserker(player: player):
	while {Class::%{_player}%} is "Berserker":
		# Insane Limiter
		set {_pop} to 0
		loop all players in radius 10 around {_player}:
			loop-player is not {_player}
			add 1 to {_pop}
		if {_pop} <= 4:
			set {_lvl} to 4 - (1 * {_pop})
			applyEffect({_player}, weakness, {_lvl}, 1 seconds, true)
			kitParticle_InsaneLimiter({_player})

		wait a second

local function kitParticle_InsaneLimiter(player: player):
	loop 20 times:
		set {_el} to aroundEffect({_player})
		add 0.5 to y-pos of {_el}
		set {_v} to vector(0, -0.5, 0)
		spawnParticle_Vector(trial_spawner_detection_ominous, {_v}, 0.5, {_el})
		wait a tick