# Phantom Dagger

on sneak toggle:
	metadata value "gametype" of player is "Kit"
	{Class::%player%} is "Assassin"
	player is not sneaking
	set {_tool} to player's tool
	kitItemAllChecker({_tool}, "Assassin", "Weapon", 3) is true
	playSound("entity.phantom.flap", 1, 1.25, player)
	wait a tick
	set {_true} to true
	while {_true} is true:
		set {_tool} to player's tool
		if kitItemAllChecker({_tool}, "Assassin", "Weapon", 3) is false:
			delete {_true}
		if player is not sneaking:
			delete {_true}
		delete {_exist}
		delete {_cansee}
		loop all players in radius 10 around player:
			kitCheckTeam(loop-player, player, false) is true
			set {_exist} to true
			if playerCanSee(loop-player, player) is true:
				set {_cansee} to true
		if {_exist} is not set:
			delete {_true}
		if {_cansee} is true:
			delete {_true}
		if {_true} is true:
			kitInvisible(player, 2)
			wait a tick
	playSound("entity.phantom.hurt", 1, 2, player)
	loop 10 times:
		set {_rv} to randomVector()
		spawnParticle_Vector(glow, {_rv}, 1, location of player)

on damage:
	set {_attacker} to getAttacker(victim)
	metadata value "gametype" of {_attacker} is "Kit"
	{Class::%{_attacker}%} is "Assassin"
	getInvisibleStatus({_attacker}) is true
	set {_tool} to {_attacker}'s tool
	kitItemAllChecker({_tool}, "Assassin", "Weapon", 3) is true
	applyEffect(victim, wither, 3, 1.5 seconds, true)
	playSound("entity.phantom.ambient", 1, 2, victim)
	loop 10 times:
		set {_el} to aroundEffect(victim)
		spawnParticle(falling_obsidian_tear, {_el})