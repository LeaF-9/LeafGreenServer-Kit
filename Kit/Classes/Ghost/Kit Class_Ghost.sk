# Ghostのスキル Ver1.0.0

# Weapons
function kitWeapon_Ghost_1(player: player):
	kitEffect_GhostBook({_player})

# function kitWeapon_Ghost_2(player: player):
# 	kitEffect_AnimaMassa({_player})

function kitWeapon_Ghost_3(player: player):
	kitEffect_Poltergeist({_player})

# Skills
function kitSkill_Ghost_1(player: player):
	kitEffect_MutantMummy({_player})

function kitSkill_Ghost_2(player: player):
	kitEffect_MindDependence({_player})

function kitSkill_Ghost_3(player: player):
	kitEffect_PainSplit({_player})

function kitSkill_Ghost_4(player: player):
	kitEffect_LethalSouvenir({_player})

function kitSkill_Ghost_5(player: player):
	kitEffect_DeathCurse({_player})

function kitSkill_Ghost_6(player: player):
	kitEffect_Heautoscopy({_player})

function kitSkill_Ghost_7(player: player):
	kitEffect_PhrenPossession({_player})

function kitSkill_Ghost_8(player: player):
	kitEffect_VoodooDoll({_player})

# Abilities
on death of player:
	metadata value "gametype" of victim is "Kit"
	if {Class::%{LastKiller::%victim%}%} is "Ghost":
		{Class::%victim%} is not "Ghost"
		getKitStats({LastKiller::%victim%}, "SpareSoul") is not set
		checkCT({_player}, "Spare Soul") is true
		setKitStats({LastKiller::%victim%}, "SpareSoul", true)
		setKitStats({LastKiller::%victim%}, "Resurrection", true)
		set {_memsg} to kitGhostMessage("§5魂を補充しました...", true)
		kitMsg({LastKiller::%victim%}, {_memsg})
	if getKitStats(victim, "SpareSoul") is true:
		set {_memsg} to kitGhostMessage("§5魂の復活を行いました...", true)
		kitMsg(victim, {_memsg})
		playSound("entity.wither.death", 1, 0.5, victim)
		setCT(victim, "Spare Soul", 10)
		wait 3 ticks
		set slot 1 of victim to air

function kitCheckSpirit(player: player, name: text) :: boolean:
	set {_tool} to {_player}'s tool
	set {_toolname} to display name of {_tool}
	set {_toolname} to unformatted {_toolname}
	set {_skill} to {_tool} if {_toolname} is {_name}

	if {_skill} is not set:
		loop all items in {_player}'s inventory:
			set {_toolname} to display name of loop-item
			set {_toolname} to unformatted {_toolname}
			if {_toolname} is {_name}:
				set {_skill} to loop-item
	return false if {_skill} is not set

	set {_lore::*} to lore of {_skill}
	loop {_lore::*}:
		loop-value contains "§4Spirit§7:"
		set {_spirit} to loop-value
	replace every "§4Spirit§7: §5" with "" in {_spirit}
	set {_spirit} to {_spirit} parsed as number
	if {Kit-Spirits::%{_player}%} >= {_spirit}:
		subtract {_spirit} from {Kit-Spirits::%{_player}%}
		return true

	send action bar "§5§lSpiritが不足しています!" to {_player}
	return false

function kitGhostMessage(text: text, bold: boolean = false) :: text:
	set {_colors::*} to {_text} split at "§"
	set {_finalstring} to ""
	loop {_colors::*}:
		set {_texts::*} to loop-value split at ""
		if {_bold} is true:
			set {_colorcode} to "§%{_texts::1}%§l"
		else:
			set {_colorcode} to "§%{_texts::1}%"
		loop length of loop-value times:
			if loop-number is not 1:
				set {_tx} to {_texts::%loop-number%}
				set {_lct} to "%{_colorcode}%"
				chance of 10%:
					set {_lct} to "%{_lct}%§k"
				set {_lasttext} to "%{_lct}%%{_tx}%"
				set {_finalstring} to "%{_finalstring}%%{_lasttext}%"
	return {_finalstring}

# Timer
function kitTimerGhost(player: player):
	create bossbar titled "&4&lSpirit&0: &5&l%{Kit-Spirits::%{_player}%}%" and id "%{_player}%-Spirit" for {_player} with progress {Kit-Spirits::%{_player}%} with colors red with style segmented 10
	while {Class::%{_player}%} is "Ghost":
		add 1 to {_timer}
		if {_timer} >= 20:
			set {_timer} to 0
		if {_timer} = 0:
			delete {_spirit}
			loop all players in radius 30 around {_player}:
				kitCheckTeam(loop-player, {_player}, false) is true
				set {_spirit} to true
			if {_spirit} is true:
				add 1 to {Kit-Spirits::%{_player}%}
		set bossbar "%{_player}%-Spirit" title to "&4&lSpirit&0: &5&l%{Kit-Spirits::%{_player}%}%"
		set bossbar "%{_player}%-Spirit" value to {Kit-Spirits::%{_player}%}
		wait a tick
	remove bossbar "%{_player}%-Spirit"