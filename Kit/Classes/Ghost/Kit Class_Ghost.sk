# Ghostのスキル Ver1.0.0

# Weapons
function kitWeaponGhost(player: player):
	set {_tool} to {_player}'s tool
	set {_item.num} to kitItemNumberChecker({_tool})
	checkCT({_player}, name of {_player}'s tool) is true
	if {_item.num} is 1:
		kitWeapon_Ghost_1({_player})
	else if {_item.num} is 2:
		kitWeapon_Ghost_2({_player})
	else if {_item.num} is 3:
		kitWeapon_Ghost_3({_player})
	else if {_item.num} is 4:
		kitWeapon_Ghost_4({_player})
	else if {_item.num} is 5:
		kitWeapon_Ghost_5({_player})

# Skills
function kitSkillGhost(player: player) :: boolean:
	set {_tool} to {_player}'s tool
	set {_item.num} to kitItemNumberChecker({_tool})
	if checkCT({_player}, name of {_player}'s tool) is true:
		if {_item.num} is 1:
			kitSkill_Ghost_1({_player})
		else if {_item.num} is 2:
			kitSkill_Ghost_2({_player})
		else if {_item.num} is 3:
			kitSkill_Ghost_3({_player})
		else if {_item.num} is 4:
			kitSkill_Ghost_4({_player})
		else if {_item.num} is 5:
			kitSkill_Ghost_5({_player})
		else if {_item.num} is 6:
			kitSkill_Ghost_6({_player})
		else if {_item.num} is 7:
			kitSkill_Ghost_7({_player})
		else if {_item.num} is 8:
			kitSkill_Ghost_8({_player})
	return true

# Abilities
on death of player:
	metadata value "gametype" of victim is "Kit"
	if {Class::%{LastKiller::%victim%}%} is "Ghost":
		{Class::%victim%} is not "Ghost"
		{Stats.%{LastKiller::%victim%}%::SpareSoul} is not set
		checkCT({_player}, "Spare Soul") is true
		set {Stats.%{LastKiller::%victim%}%::SpareSoul} to true
		set {Stats.%{LastKiller::%victim%}%::Resurrection} to true
		set {_memsg} to kitGhostMessage("§5魂を補充しました...", true)
		kitMsg({LastKiller::%victim%}, {_memsg})
	if {Stats.%victim%::SpareSoul} is true:
		set {_memsg} to kitGhostMessage("§5魂の復活を行いました...", true)
		kitMsg(victim, {_memsg})
		playSound("entity.wither.death", 1, 0.5, victim)
		setCT(victim, "Spare Soul", 10)
		wait 3 ticks
		set slot 1 of victim to air

function kitCheckSpirit(player: player, num: number, type: text = "Skill") :: boolean:
	set {_tool} to {_player}'s tool
	if kitItemKitChecker({_tool}) is "Ghost":
		if kitItemTypeChecker({_tool}) is {_type}:
			if kitItemNumberChecker({_tool}) is {_num}:
				set {_skill} to {_tool}
	if {_fueltool} is not set:
		loop all items in {_player}'s inventory:
			kitItemKitChecker(loop-item) is "Ghost"
			kitItemTypeChecker(loop-item) is {_type}
			kitItemNumberChecker(loop-item) is {_num}
			set {_skill} to loop-item
	set {_lore::*} to lore of {_skill}
	loop {_lore::*}:
		loop-value contains "§4Spirit§7:"
		set {_spirit} to loop-value
	replace every "§4Spirit§7: §5" with "" in {_spirit}
	set {_spirit} to {_spirit} parsed as number
	if {Kit-Spirits::%{_player}%} >= {_spirit}:
		subtract {_spirit} from {Kit-Spirits::%{_player}%}
		return true
	else:
		send action bar "§5§lSpiritが不足しています!" to {_player}
		return false

function kitGhostMessage(text: text, bold: boolean = false) :: text:
	set {_colors::*} to {_text} split at "§"
	set {_finalstring} to ""
	loop {_colors::*}:
		set {_texts::*} to loop-value split at ""
		if {_bold} is true:
			set {_colorcode} to "§%{_texts::1}%§l"
		else:
			set {_colorcode} to "§%{_texts::1}%"
		loop length of loop-value times:
			if loop-number is not 1:
				set {_tx} to {_texts::%loop-number%}
				set {_lct} to "%{_colorcode}%"
				chance of 10%:
					set {_lct} to "%{_lct}%§k"
				set {_lasttext} to "%{_lct}%%{_tx}%"
				set {_finalstring} to "%{_finalstring}%%{_lasttext}%"
	return {_finalstring}

# Timer
function kitTimerGhost(player: player):
	while {Class::%{_player}%} is "Ghost":
		add 1 to {_timer}
		if {_timer} >= 20:
			set {_timer} to 0
		if {_timer} = 0:
			delete {_spirit}
			loop all players in radius 30 around {_player}:
				kitCheckTeam(loop-player, {_player}, false) is true
				set {_spirit} to true
			if {_spirit} is true:
				add 1 to {Kit-Spirits::%{_player}%}
		delete {_true}
		if {_player}'s tool is air:
			set {_true} to true
		else:
			set {_name} to name of {_player}'s tool
			if checkCT({_player}, name of {_player}'s tool, true) is true:
				set {_true} to true
		if {_true} is true:
			send action bar "§4§lSpirit§0: §5%{Kit-Spirits::%{_player}%}%" to {_player}
		wait a tick