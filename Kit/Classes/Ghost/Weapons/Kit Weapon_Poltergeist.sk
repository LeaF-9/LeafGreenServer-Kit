# Weapon-Name: Poltergeist

function kitEffect_Poltergeist(player: player):
	nameItemCT({_player}, "Poltergeist")
	set {_baseloc} to location of head of {_player}
	set {_boost} to false
	if {_player} is sneaking:
		if kitCheckSpirit({_player}, "Poltergeist") is true:
			set {_boost} to true
	kitParticle_Poltergeist_Beam({_baseloc}, {_boost})
	set {_m} to 0
	loop 20 times:
		add 0.5 to {_m}
		set {_effloc} to location {_m} meters in front of {_baseloc}
		set {_hits::*} to checkHitEntities({_effloc})
		loop {_hits::*}:
			{_hit.%id of loop-value-2%} is not set
			kitCheckTeam({_player}, loop-value-2, false, true) is true
			set {_hit.%id of loop-value-2%} to true
			kitEffect_Poltergeist_Hit({_player}, loop-value-2, {_boost})
		if mod({_m}, 1) is 0:
			wait a tick

local function kitEffect_Poltergeist_Hit(player: player, target: entity, boost: boolean):
	kitParticle_Poltergeist_Hit({_target})
	if {_boost} is true:
		kitDamage({_player}, {_target}, 2.5, "音の悪戯")
		applyEffect({_target}, nausea, 1, 160, true)
		if checkEntityType({_target}, player) is true:
			set {_memsg} to kitGhostMessage("§5%{_target}% §4に音のいたずらを誘発する...")
			set {_youmsg} to kitGhostMessage("§8不思議な音が鳴り響く...", true)
			kitMsg({_player}, {_memsg})
			message formatted {_youmsg} to {_target}
			kitEffect_Poltergeist_Sound({_target})
		stop
	kitDamage({_player}, {_target}, 1.5, "音の悪戯")

local function kitEffect_Poltergeist_Sound(target: player):
	loop 100 times:
		if mod(loop-number, 2) is 0:
			set {_yaw} to 5
		else:
			set {_yaw} to -5
		playerYawRotation({_target}, {_yaw}, true)
		chance of 10%:
			kitSound_Poltergeist_Foot({_target})
		kitParticle_Poltergeist_Confuse({_target})
		wait a tick


local function kitParticle_Poltergeist_Beam(baseloc: location, boost: boolean):
	set {_color} to "lime"
	if {_boost} is true:
		set {_color} to "red"
	set {_m} to 0
	loop 20 times:
		add 0.5 to {_m}
		set {_el} to location {_m} meters in front of {_baseloc}
		spawnParticle_Note({_color}, {_el})
		kitSound_Poltergeist_Beam({_el}, loop-number)
		if mod({_m}, 1) is 0:
			wait a tick

local function kitParticle_Poltergeist_Hit(entity: entity):
	playSound("block.glass.break", 1, 0.5, {_entity})
	loop 10 times:
		set {_el} to aroundEffect({_entity})
		spawnParticle_Note("purple", {_el})
	loop 4 times:
		wait 5 ticks
		kitSound_Poltergeist_Attack({_entity})

local function kitParticle_Poltergeist_Confuse(entity: entity):
	set {_el} to aroundEffect({_entity})
	set y-coordinate of {_el} to y-coordinate of {_entity} + 2
	set {_n} to a random number between 0 and 1
	spawnParticle_NoteOption({_n}, {_el})


local function kitSound_Poltergeist_Beam(loc: location, num: number):
	set {_pitch} to {_num} / 20 * 1.5
	playSound("block.large_amethyst_bud.break", 0.9, {_pitch}, {_loc})

local function kitSound_Poltergeist_Attack(player: player):
	loop all blocks in radius 3 around {_player}:
		loop-block is passable
		add location of loop-block to {_sounds::*}
	loop 3 times:
		if loop-number is 1:
			set {_percent} to 100
		else:
			set {_percent} to 30
		chance of {_percent}%:
			set {_sound} to a random location out of {_sounds::*}
			set {_pitch} to a random number between 0.5 and 2
			playSound("block.glass.break", 0.65, {_pitch}, {_sound})

local function kitSound_Poltergeist_Hit(entity: entity):
	playSound("ambient.cave", 1, 2, {_target})

local function kitSound_Poltergeist_Foot(player: player):
	set {_loc} to location of {_player}
	set {_xnum} to a random number between -5 and 5
	if {_xnum} >= 0:
		set {_xnum} to {_xnum} + 5
	else:
		set {_xnum} to {_xnum} - 5
	set {_znum} to a random number between -5 and 5
	if {_znum} >= 0:
		set {_znum} to {_znum} + 5
	else:
		set {_znum} to {_znum} - 5
	add {_xnum} to x-coordinate of {_loc}
	add {_znum} to z-coordinate of {_loc}
	set {_vector} to setVector({_loc}, location of {_player})
	set yaw of {_loc} to yaw of {_vector}
	set pitch of {_loc} to pitch of {_vector}
	set {_sound} to "block.grass.step"
	chance of 33%:
		set {_sound} to "block.stone.step"
	chance of 33%:
		set {_sound} to "block.wood.step"
	set {_frontnum} to 0
	loop 5 times:
		set {_soundloc} to location {_frontnum} meters in front of {_loc}
		play sound {_sound} at {_soundloc} for {_player}
		add 1.25 to {_frontnum}
		wait 5 ticks