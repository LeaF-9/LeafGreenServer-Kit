# Pain Split

function kitEffect_PainSplit(player: player):
	set {_SkillTarget} to kitStats_GET({_player}, "SkillTarget")
	if {_SkillTarget} is not set:
		send action bar "§c§l対象が存在しません!" to {_player}
		stop
	if kitCheckSpirit({_player}, 3) is false:
		stop

	nameCT({_player}, "Pain Split")
	set {_target} to {_SkillTarget}

	set {_tg} to {_target}

	set {_th} to {_tg}'s health
	set {_ph} to {_player}'s health
	set {_sp} to ({_th} + {_ph}) / 2
	set {_tg}'s health to {_sp}
	set {_player}'s health to {_sp}
	set {_memsg} to kitGhostMessage("§5%{_tg}% §1と互いの体力を分け合った...")
	set {_youmsg} to kitGhostMessage("§5%{_player}% §cと体力を分け合った...!")
	kitMsg({_player}, {_memsg})
	message formatted {_youmsg} to {_tg}
	kitEffectDescription({_tg}, "§4§l体力分割")
	kitParticle_PainSplit({_player}, {_tg})



local function kitParticle_PainSplit(player: player, tg: player):
	playSound("entity.zombie_villager.converted", 1, 1, {_player}, true)
	playSound("entity.zombie_villager.converted", 1, 1, {_tg}, true)

	set {_baseloc.player} to location 1 meter above {_player}
	set {_baseloc.target} to location 1 meter above {_tg}
	loop 30 times:
		spawnParticle_Block(redstone block, moveRandomLocation({_baseloc.player}, 1))
		spawnParticle_Block(redstone block, moveRandomLocation({_baseloc.target}, 1))

	set {_d} to rounded distance between {_player} and {_tg}
	set {_vector} to setVector(location of {_player}, location of {_tg})
	set {_baseloc} to location 1 meter above {_player}
	set yaw of {_baseloc} to yaw of {_vector}
	set pitch of {_baseloc} to pitch of {_vector}
	loop {_d} times:
		add 1 to {_n}
		set {_el} to location {_n} meters in front of {_baseloc}
		spawnParticle(end_rod, {_el})

		spawnParticle_BlockData(falling_dust, red wool, moveRandomLocation({_el}, 0.5))
		spawnParticle_BlockData(falling_dust, black wool, moveRandomLocation({_el}, 0.5))