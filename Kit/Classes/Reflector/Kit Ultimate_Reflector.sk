# Universal Division

function kitUltReflector(player: player):
	set {_baseloc} to location of head of {_player}
	set pitch of {_baseloc} to 0
	set {_yaw} to yaw of {_baseloc}
	set {_calc} to {_yaw} / 45
	set {_round} to round({_calc})
	set yaw of {_baseloc} to 45 * {_round}
	set {_baseloc} to location 5 meters in front of {_baseloc}
	set {_walldirection} to {_baseloc}
	# middle
	set {_location} to {_walldirection}

	set {_transformation} to kitTransformation("[0f,0f,0f,1f]", "[0f,0f,0f,1f]", "[0f,0f,0f]", "[100f,100f,0.1f]")
	set {_wall} to kitEffect_UniversalDivision_Wall({_location}, {_transformation})
	add {_wall} to {_walls::*}

	set {_transformation} to kitTransformation("[0f,0f,0f,1f]", "[0f,0f,0f,1f]", "[0f,0f,0f]", "[100f,100f,0.1f]")
	set {_inv} to kitEffect_UniversalDivision_InvisibleWall({_location}, {_transformation})
	add {_inv} to {_invisibles::*}
	# (left)
	set {_transformation} to kitTransformation("[0f,0f,0f,1f]", "[0f,0f,0f,1f]", "[100f,0f,0f]", "[100f,100f,0.1f]")
	set {_wall} to kitEffect_UniversalDivision_Wall({_location}, {_transformation})
	add {_wall} to {_walls::*}

	set {_transformation} to kitTransformation("[0f,0f,0f,1f]", "[0f,0f,0f,1f]", "[100f,0f,0f]", "[100f,100f,0.1f]")
	set {_inv} to kitEffect_UniversalDivision_InvisibleWall({_location}, {_transformation})
	add {_inv} to {_invisibles::*}
	# (right)
	set {_transformation} to kitTransformation("[0f,0f,0f,1f]", "[0f,0f,0f,1f]", "[-100f,0f,0f]", "[100f,100f,0.1f]")
	set {_wall} to kitEffect_UniversalDivision_Wall({_location}, {_transformation})
	add {_wall} to {_walls::*}

	set {_transformation} to kitTransformation("[0f,0f,0f,1f]", "[0f,0f,0f,1f]", "[-100f,0f,0f]", "[100f,100f,0.1f]")
	set {_inv} to kitEffect_UniversalDivision_InvisibleWall({_location}, {_transformation})
	add {_inv} to {_invisibles::*}
	# front - 50
	set {_location} to location 50 meters to the left of {_walldirection}

	set {_transformation} to kitTransformation("[0f,0f,0f,1f]", "[0f,0f,0f,1f]", "[-50f,0f,0f]", "[100f,100f,0.1f]")
	set {_wall} to kitEffect_UniversalDivision_Wall({_location}, {_transformation})
	add {_wall} to {_walls::*}

	set {_transformation} to kitTransformation("[0f,0f,0f,1f]", "[0f,0f,0f,1f]", "[-50f,0f,0f]", "[100f,100f,0.1f]")
	set {_inv} to kitEffect_UniversalDivision_InvisibleWall({_location}, {_transformation})
	add {_inv} to {_invisibles::*}
	# (left)
	set {_transformation} to kitTransformation("[0f,0f,0f,1f]", "[0f,0f,0f,1f]", "[50f,0f,0f]", "[100f,100f,0.1f]")
	set {_wall} to kitEffect_UniversalDivision_Wall({_location}, {_transformation})
	add {_wall} to {_walls::*}

	set {_transformation} to kitTransformation("[0f,0f,0f,1f]", "[0f,0f,0f,1f]", "[50f,0f,0f]", "[100f,100f,0.1f]")
	set {_inv} to kitEffect_UniversalDivision_InvisibleWall({_location}, {_transformation})
	add {_inv} to {_invisibles::*}
	# (right)
	set {_transformation} to kitTransformation("[0f,0f,0f,1f]", "[0f,0f,0f,1f]", "[-150f,0f,0f]", "[100f,100f,0.1f]")
	set {_wall} to kitEffect_UniversalDivision_Wall({_location}, {_transformation})
	add {_wall} to {_walls::*}

	set {_transformation} to kitTransformation("[0f,0f,0f,1f]", "[0f,0f,0f,1f]", "[-150f,0f,0f]", "[100f,100f,0.1f]")
	set {_inv} to kitEffect_UniversalDivision_InvisibleWall({_location}, {_transformation})
	add {_inv} to {_invisibles::*}
	# front - 100
	set {_location} to location 100 meters to the left of {_walldirection}

	set {_transformation} to kitTransformation("[0f,0f,0f,1f]", "[0f,0f,0f,1f]", "[0f,0f,0f]", "[100f,100f,0.1f]")
	set {_wall} to kitEffect_UniversalDivision_Wall({_location}, {_transformation})
	add {_wall} to {_walls::*}

	set {_transformation} to kitTransformation("[0f,0f,0f,1f]", "[0f,0f,0f,1f]", "[0f,0f,0f]", "[100f,100f,0.1f]")
	set {_inv} to kitEffect_UniversalDivision_InvisibleWall({_location}, {_transformation})
	add {_inv} to {_invisibles::*}
	# (right1)
	set {_transformation} to kitTransformation("[0f,0f,0f,1f]", "[0f,0f,0f,1f]", "[-100f,0f,0f]", "[100f,100f,0.1f]")
	set {_wall} to kitEffect_UniversalDivision_Wall({_location}, {_transformation})
	add {_wall} to {_walls::*}

	set {_transformation} to kitTransformation("[0f,0f,0f,1f]", "[0f,0f,0f,1f]", "[-100f,0f,0f]", "[100f,100f,0.1f]")
	set {_inv} to kitEffect_UniversalDivision_InvisibleWall({_location}, {_transformation})
	add {_inv} to {_invisibles::*}
	# (right2)
	set {_transformation} to kitTransformation("[0f,0f,0f,1f]", "[0f,0f,0f,1f]", "[-200f,0f,0f]", "[100f,100f,0.1f]")
	set {_wall} to kitEffect_UniversalDivision_Wall({_location}, {_transformation})
	add {_wall} to {_walls::*}

	set {_transformation} to kitTransformation("[0f,0f,0f,1f]", "[0f,0f,0f,1f]", "[-200f,0f,0f]", "[100f,100f,0.1f]")
	set {_inv} to kitEffect_UniversalDivision_InvisibleWall({_location}, {_transformation})
	add {_inv} to {_invisibles::*}
	# behind - 50
	set {_location} to location 50 meters to the right of {_walldirection}

	set {_transformation} to kitTransformation("[0f,0f,0f,1f]", "[0f,0f,0f,1f]", "[50f,0f,0f]", "[100f,100f,0.1f]")
	set {_wall} to kitEffect_UniversalDivision_Wall({_location}, {_transformation})
	add {_wall} to {_walls::*}

	set {_transformation} to kitTransformation("[0f,0f,0f,1f]", "[0f,0f,0f,1f]", "[50f,0f,0f]", "[100f,100f,0.1f]")
	set {_inv} to kitEffect_UniversalDivision_InvisibleWall({_location}, {_transformation})
	add {_inv} to {_invisibles::*}
	# (left)
	set {_transformation} to kitTransformation("[0f,0f,0f,1f]", "[0f,0f,0f,1f]", "[150f,0f,0f]", "[100f,100f,0.1f]")
	set {_wall} to kitEffect_UniversalDivision_Wall({_location}, {_transformation})
	add {_wall} to {_walls::*}

	set {_transformation} to kitTransformation("[0f,0f,0f,1f]", "[0f,0f,0f,1f]", "[150f,0f,0f]", "[100f,100f,0.1f]")
	set {_inv} to kitEffect_UniversalDivision_InvisibleWall({_location}, {_transformation})
	add {_inv} to {_invisibles::*}
	# (right)
	set {_transformation} to kitTransformation("[0f,0f,0f,1f]", "[0f,0f,0f,1f]", "[-50f,0f,0f]", "[100f,100f,0.1f]")
	set {_wall} to kitEffect_UniversalDivision_Wall({_location}, {_transformation})
	add {_wall} to {_walls::*}

	set {_transformation} to kitTransformation("[0f,0f,0f,1f]", "[0f,0f,0f,1f]", "[-50f,0f,0f]", "[100f,100f,0.1f]")
	set {_inv} to kitEffect_UniversalDivision_InvisibleWall({_location}, {_transformation})
	add {_inv} to {_invisibles::*}
	# behind - 100
	set {_location} to location 100 meters to the right of {_walldirection}

	set {_transformation} to kitTransformation("[0f,0f,0f,1f]", "[0f,0f,0f,1f]", "[0f,0f,0f]", "[100f,100f,0.1f]")
	set {_wall} to kitEffect_UniversalDivision_Wall({_location}, {_transformation})
	add {_wall} to {_walls::*}

	set {_transformation} to kitTransformation("[0f,0f,0f,1f]", "[0f,0f,0f,1f]", "[0f,0f,0f]", "[100f,100f,0.1f]")
	set {_inv} to kitEffect_UniversalDivision_InvisibleWall({_location}, {_transformation})
	add {_inv} to {_invisibles::*}
	# (left1)
	set {_transformation} to kitTransformation("[0f,0f,0f,1f]", "[0f,0f,0f,1f]", "[100f,0f,0f]", "[100f,100f,0.1f]")
	set {_wall} to kitEffect_UniversalDivision_Wall({_location}, {_transformation})
	add {_wall} to {_walls::*}

	set {_transformation} to kitTransformation("[0f,0f,0f,1f]", "[0f,0f,0f,1f]", "[100f,0f,0f]", "[100f,100f,0.1f]")
	set {_inv} to kitEffect_UniversalDivision_InvisibleWall({_location}, {_transformation})
	add {_inv} to {_invisibles::*}
	# (left2)
	set {_transformation} to kitTransformation("[0f,0f,0f,1f]", "[0f,0f,0f,1f]", "[200f,0f,0f]", "[100f,100f,0.1f]")
	set {_wall} to kitEffect_UniversalDivision_Wall({_location}, {_transformation})
	add {_wall} to {_walls::*}

	set {_transformation} to kitTransformation("[0f,0f,0f,1f]", "[0f,0f,0f,1f]", "[200f,0f,0f]", "[100f,100f,0.1f]")
	set {_inv} to kitEffect_UniversalDivision_InvisibleWall({_location}, {_transformation})
	add {_inv} to {_invisibles::*}
	# END
	set {_now} to now
	set {Ult.%{_player}%::UniversalDivision} to {_walldirection}
	kitEffect_UniversalDivision_Timer()
	loop 400 times:
		if {Ult.%{_player}%::UniversalDivision} is not {_walldirection}:
			continue
		loop all players:
			kitCheckTeam({_player}, loop-player, true, true) is true
			loop all item displays:
				if {_walls::*} contains loop-item display:
					kitEffect_UniversalDivision_DestroyWall(loop-player, loop-item display)
		set {_pm} to 0
		loop 151 times:
			set {_el.l} to location {_pm} meters to the left of {_walldirection}
			spawnParticle_Vector(trial_spawner_detection_ominous, vector(0, 3, 0), 1, {_el.l})
			spawnParticle_Vector(trial_spawner_detection_ominous, vector(0, -3, 0), 1, {_el.l})
			set {_el.r} to location {_pm} meters to the right of {_walldirection}
			spawnParticle_Vector(trial_spawner_detection_ominous, vector(0, 3, 0), 1, {_el.r})
			spawnParticle_Vector(trial_spawner_detection_ominous, vector(0, -3, 0), 1, {_el.r})
			add 1 to {_pm}
		wait a tick
	loop all entities:
		if {_walls::*} contains loop-entity:
			delete loop-entity
		if {_invisibles::*} contains loop-entity:
			delete loop-entity
	if {Ult.%{_player}%::UniversalDivision} is {_walldirection}:
		delete {Ult.%{_player}%::UniversalDivision}

local function kitEffect_UniversalDivision_Wall(loc: location, transform: text) :: entity:
	set {_item} to "minecraft:sea_lantern"
	set {_nbt} to nbt compound from "{transformation:%{_transform}%,item:{id:""%{_item}%"",Count:1b}}"
	spawn a item display at {_loc} with nbt {_nbt}
	set {_display} to spawned item display
	set metadata value "gametype" of {_display} to "Kit"
	set metadata value "Universal Division" of {_display} to "%{_player}%"
	return {_display}

local function kitEffect_UniversalDivision_InvisibleWall(loc: location, transform: text) :: entity:
	set {_item} to "minecraft:glass_pane"
	set {_nbt} to nbt compound from "{transformation:%{_transform}%,item:{id:""%{_item}%"",Count:1b}}"
	spawn a item display at {_loc} with nbt {_nbt}
	set {_display} to spawned item display
	set metadata value "gametype" of {_display} to "Kit"
	set metadata value "Universal Division" of {_display} to "%{_player}%"
	set metadata value "Universal Division - Invisible" of {_display} to true
	return {_display}

import:
	java.util.ArrayList
	com.comphenix.protocol.ProtocolLibrary
	com.comphenix.protocol.PacketType
	com.google.common.collect.Lists

local function kitEffect_UniversalDivision_DestroyWall(player: player, entity: entity):
	set {_id} to {_entity}.getEntityId()
	set {_manager} to ProtocolLibrary.getProtocolManager()
	set {_packet} to {_manager}.createPacket(PacketType.Play.Server.ENTITY_DESTROY)
	set {_ids} to Lists.newArrayList({_id})
	{_packet}.getIntLists().write(0, {_ids})
	ProtocolLibrary.getProtocolManager().sendServerPacket({_player}, {_packet})

local function kitEffect_UniversalDivision_Timer():
	# teams setting
	add "red" to {_teams::*}
	add "blue" to {_teams::*}
	add "yellow" to {_teams::*}
	add "green" to {_teams::*}
	add "purple" to {_teams::*}

	set {_true} to true
	while {_true} is true:
		# delete values
		delete {_ok}
		delete {_livingteams::*}
		delete {_players::*}
		delete {_targets::*}
		loop {_teams::*}:
			delete {_walls.%loop-value%::*}
		
		# add wall locations to list
		loop all players:
			{Ult.%loop-player%::UniversalDivision} is set
			set {_ok} to true
			set {_team} to {TrueTeam::%loop-player%}
			add {_team} to {_livingteams::*}  # save existing teams
			add {Ult.%loop-player%::UniversalDivision} to {_walls.%{_team}%::*}
		
		# if walls dont exist, exit loops
		if {_ok} is not set:
			set {_true} to false
			continue
		
		# add players to player-list
		loop all players:
			metadata value "gametype" of loop-player is "Kit"
			add loop-player to {_players::*}

		# teams loop
		loop {_livingteams::*}:
			set {_team} to loop-value

			# players loop
			loop {_players::*}:
				set {_player.1} to loop-value-2  # seeing
				if {TrueTeam::%{_player.1}%} is {_team}:
					continue

				set {_targets::*} to {_players::*}
				remove {_player.1} from {_targets::*}  # remove themselves from player-list

				loop {_targets::*}:
					set {_player.2} to loop-value-3  # seen
					kitEffect_UniversalDivision_Vision({_player.1}, {_player.2}, {_walls.%{_team}%::*})
		wait a tick
	loop all players:
		{Kit-Invisible::%loop-player%} is not set
		add loop-player to {_visible::*}
	reveal {_visible::*} from all players

local function kitEffect_UniversalDivision_Vision(seeing: player, seen: player, walls: locations):
	if {Kit-Invisible::%{_seen}%} is set:
		stop
	set {_loc.seeing} to location of {_seeing}
	set {_loc.seen} to location of {_seen}
	loop {_walls::*}:
		set {_loc.wall.1} to location 150 meters in front of loop-value
		set {_loc.wall.2} to location 150 meters behind loop-value
		if kitEffect_UniversalDivision_Intersect({_loc.seeing}, {_loc.seen}, {_loc.wall.1}, {_loc.wall.2}) is true:
			set {_invisible} to true
	if {_invisible} is true:
		hide {_seen} from {_seeing}
	else:
		reveal {_seen} from {_seeing}

local function kitEffect_UniversalDivision_Intersect(loc-1: location, loc-2: location, loc-3: location, loc-4: location) :: boolean:
	set {_orien-1} to kitEffect_UniversalDivision_Orientation({_loc-3}, {_loc-4}, {_loc-1})
	set {_orien-2} to kitEffect_UniversalDivision_Orientation({_loc-3}, {_loc-4}, {_loc-2})
	set {_orien-3} to kitEffect_UniversalDivision_Orientation({_loc-1}, {_loc-2}, {_loc-3})
	set {_orien-4} to kitEffect_UniversalDivision_Orientation({_loc-1}, {_loc-2}, {_loc-4})
	if {_orien-1} is not {_orien-2}:
		if {_orien-3} is not {_orien-4}:
			return true
	return false

local function kitEffect_UniversalDivision_Orientation(p: location, q: location, r: location) :: number:
	set {_p.x} to x-pos of {_p}
	set {_p.z} to z-pos of {_p}
	set {_q.x} to x-pos of {_q}
	set {_q.z} to z-pos of {_q}
	set {_r.x} to x-pos of {_r}
	set {_r.z} to z-pos of {_r}
	set {_val} to ({_q.z} - {_p.z}) * ({_r.x} - {_q.x}) - ({_q.x} - {_p.x}) * ({_r.z} - {_q.z})
	if {_val} is 0:
		return 0
	if {_val} > 0:
		return 1
	else:
		return 2