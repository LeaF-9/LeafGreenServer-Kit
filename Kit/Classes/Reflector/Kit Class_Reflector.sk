# Reflectorのスキル Ver1.0.0

# Ability
on damage of player with priority NORMAL:
	{Class::%victim%} is "Reflector"
	checkDamagable(victim) is true
	set {_attacker} to getAttacker(victim)
	{_attacker} is set
	kitReflector_DamageChecker(victim) is "none"
	set {_c} to kitPercentDuel(victim, {_attacker}, 20)
	chance of {_c}%:
		set {_rawdamage} to getDamageModification_ALL(victim, damage)
		set {_dm} to {_rawdamage} / 4
		kitDamageNull(victim, {_attacker}, {_dm}, "反射")
		playSound("entity.experience_orb.pickup", 1, 1.5, victim)

function kitReflector_DamageChecker(victim: player) :: text:
	if kitStats_GET({_victim}, "DamageAbsorption") is set:
		return "Damage Absorption"
	if kitStats_GET({_victim}, "PerfectReflection") is set:
		return "Perfect Reflection"
	return "none"

# Timer
function kitTimerReflector(player: player):
	set {_wn} to kitSelectChecker_Weapon({_player}, "Reflector")
	if {_wn} is not 3:
		stop
	while {Class::%{_player}%} is "Reflector":
		set {_slot} to {_player}.getInventory().getHeldItemSlot()
		if {_slot} is 0:
			send action bar "<##ae5ec7>§l蓄積傷<##f9c7ff>取得済" to {_player} if kitStats_GET({_player}, "TolleStone") is true
		wait 5 ticks