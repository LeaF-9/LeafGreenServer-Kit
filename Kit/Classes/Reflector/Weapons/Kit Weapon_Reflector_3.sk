# weapon-name: Tolle Stone

on damage of player with priority NORMAL:
	{Class::%victim%} is "Reflector"
	victim is sneaking
	set {_attacker} to getAttacker(victim)
	set {_tool} to victim's tool
	kitItemAllChecker({_tool}, "Reflector", "Weapon", 3) is true
	{Stats.%victim%::TolleStone} is not set
	set {_dmg} to getDamageModification_ALL(victim, damage)
	if {_dmg} < 3:
		stop

	setDamageModification_ADD(victim, -1.5)
	set {Stats.%victim%::TolleStone} to true
	kitMsg(victim, "§cダメージ<##f068d2>を<##bf23e6>§lチャージ<##f068d2>した!")
	kitParticle_TolleStone_Charge(victim)

function kitWeapon_Reflector_3(player: player):
	toolItemCT({_player}, "Reflector", 3)
	kitEffect_TolleStone({_player})



local function kitEffect_TolleStone(player: player):
	set {_dmg} to 1.5
	if {Stats.%{_player}%::TolleStone} is set:
		set {_adddmg} to 1.5
		delete {Stats.%{_player}%::TolleStone}

	set {_baseloc} to location of head of {_player}
	kitParticle_TolleStone_Launch(location 0.5 meters in front of {_baseloc})

	if {_adddmg} is set:
		set {_dmg} to {_dmg} + {_adddmg}
		kitParticle_TolleStone_Power({_baseloc})

	set {_m} to 0
	loop 20 times:
		add 0.5 to {_m}
		set {_effloc} to location {_m} meters in front of {_baseloc}
		kitParticle_TolleStone_Beam({_effloc})
		set {_hits::*} to checkHitEntities({_effloc})
		loop {_hits::*}:
			{_hit.%id of loop-value-2%} is not set
			kitCheckTeam(loop-value-2, {_player}, false, true) is true
			set {_hit.%id of loop-value-2%} to true
			kitDamage({_player}, loop-value-2, {_dmg}, "蓄傷光線")
			


local function kitParticle_TolleStone_Charge(player: player):
	playSound("block.amethyst_block.break", 1, 1.1, {_player})
	loop 10 times:
		set {_loc} to aroundEffect({_player})
		spawnParticle_Block(amethyst block, {_loc})

local function kitParticle_TolleStone_Launch(loc: location):
	playSound("entity.illusioner.mirror_move", 0.9, 1.7, {_loc})

	kitParticle_TolleStone_Circle({_loc})
	wait a tick

local function kitParticle_TolleStone_Power(loc: location):
	playSound("block.amethyst_cluster.break", 0.9, 0.7, {_loc})
	set {_basevec} to setVector({_loc}, location 10 meters in front of {_loc})
	set {_vecloc} to {_loc}
	add -90 to pitch of {_vecloc}
	set {_directvec} to setVector({_vecloc}, location 10 meters in front of {_vecloc})

	set {_length} to 10
	set {_count} to 50
	set {_m} to 0
	set {_addm} to {_length} / {_count}
	set {_rad} to 0
	set {_addrad} to 90 / ({_count} * 0.1)

	loop {_count} times:
		add {_addm} to {_m}

		set {_effbaseloc} to location {_m} meters in front of {_loc}
		set {_dirvec} to {_directvec}
		rotate {_dirvec} around {_basevec} by {_rad}
		set {_effloc} to setDirToVec({_effbaseloc}, {_dirvec})
		set {_el} to location 0.5 meters in front of {_effloc}
		spawnParticle(reverse_portal, {_el})

		add {_addrad} to {_rad}
		

local function kitParticle_TolleStone_Circle(loc: location):
	set {_m} to 0
	set {_count} to 10
	loop 5 times:
		add 0.2 to {_m}
		add 5 to {_count}
		set {_rad} to 0
		loop {_count} times:
			add 360 / {_count} to {_rad}
			set {_el} to {_loc}
			set {_m1} to {_el}
			set pitch of {_m1} to pitch of {_m1} - 90
			set {_test1} to {_m} * cos({_rad})
			set {_t1} to location {_test1} meters in front of {_m1}
			set {_m2} to {_el}
			set pitch of {_m2} to 0
			set {_test2} to {_m} * sin({_rad})
			set {_t2} to location {_test2} meters to the right of {_m2}
			set x-pos of {_el} to x-pos of {_t1} + x-pos of {_t2} - x-pos of {_el}
			set y-pos of {_el} to y-pos of {_t1} + y-pos of {_t2} - y-pos of {_el}
			set z-pos of {_el} to z-pos of {_t1} + z-pos of {_t2} - z-pos of {_el}
			spawnParticle_Dust(rgb(86, 37, 110), 0.5, {_el})
		wait a tick

local function kitParticle_TolleStone_Beam(loc: location):
	spawnParticle(witch, {_loc})
