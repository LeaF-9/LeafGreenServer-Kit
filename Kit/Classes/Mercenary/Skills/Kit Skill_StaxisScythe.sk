# Staxis Scythe

function kitEffect_StaxisScythe(player: player):
	nameCT({_player}, "Staxis Scythe")
	kitMsg({_player}, "<##483d8b>3方向に鮮血の斬撃を放ちます...")
	# --- 溜め時の音の演出 ---
	playSound("item.trident.riptide_1", 1, 0.75, {_player})
	# ---------------------
	set {_baseloc} to head of {_player}

	# locsリスト変数は基準点 この点を始点として前方に攻撃判定を走らせる

	# --- mid ---
	set {_locs::mid} to {_baseloc}
	# -----------

	# left/right基準点を作るためのaxisVector作成
	set {_yawAxisVector} to getVectorFromYawAxis({_baseloc})

	# --- left ---
	set {_playerRollVector} to getVectorFromRollAxis({_baseloc})
	rotate {_playerRollVector} around {_yawAxisVector} by -45
	
	set {_leftloc} to setDirToVec({_baseloc}, {_playerRollVector})
	set {_locs::left} to {_leftloc}
	# ------------
	# --- right ---
	set {_playerRollVector} to getVectorFromRollAxis({_baseloc})
	rotate {_playerRollVector} around {_yawAxisVector} by 45
	
	set {_rightloc} to setDirToVec({_baseloc}, {_playerRollVector})
	set {_locs::right} to {_rightloc}

	# -------------
	loop 20 times:  # 溜め時間
		set {_basenum} to loop-number

		# hittingリスト関数はその鎌がヒットしたかどうかの確認
		# 鎌はヒットしたら消える

		loop {_locs::*}:
			set {_index} to loop-index
			set {_valoc} to loop-value-2
			{_hitting::%{_index}%} is not set
			kitEffect_StaxisScythe_1({_locs::%{_index}%}, mod({_basenum}, 5))

			# --- マーク判定 ---
			set {_m} to 0
			loop 15 times:
				add 1 to {_m}
				set {_checkloc} to location {_m} meters in front of {_valoc}
				loop all players in radius 5 around {_checkloc}:
					kitCheckTeam({_player}, loop-player, false) is true
					getDebuffs(loop-player, "Blood") is true
					{_hit::%loop-player%} is not set
					{_trail::*} does not contain loop-player
					set {_trail::%{_index}%} to loop-player
			# ----------------
			# --- ヒット判定 ---
			loop all entities in radius 2 around {_valoc}:
				kitCheckTeam({_player}, loop-entity, false) is true
				{_hit::%loop-entity%} is not set
				set {_hit::%loop-entity%} to true
				set {_hitting::%{_index}%} to true
				delete {_trail::%{_index}%}
				kitDamage({_player}, loop-entity, 3, "鮮血の大鎌")
				kitEffectDescription(loop-entity, "§4❤3")
				# --- ヒット時の音の演出 ---
				playSound("item.trident.hit", 1, 0.5, loop-entity)
				# -----------------------
				# --- ヒット時のパーティクル演出 ---
				kitEffect_StaxisScythe_2(loop-entity, {_valoc})  # 当たった方向から赤いパーティクルが色々吹き出す感じ
				# ------------------------------
			# ----------------
		wait a tick
	# --- 発射時の音の演出 ---
	playSound("item.trident.throw", 1, 0.5, {_player})
	# ---------------------
	loop 15 times:  # 発射時間
		set {_basenum} to loop-number
		loop {_locs::*}:
			set {_index} to loop-index
			set {_valoc} to loop-value-2
			{_hitting::%{_index}%} is not set  # 鎌がHIT済でないかどうか
			if {_trail::%{_index}%} is set:  # マークした敵がいるかどうか
				set {_vector} to setVector({_valoc}, location of {_trail::%{_index}%})
				set yaw of {_valoc} to yaw of {_vector}
				set pitch of {_valoc} to pitch of {_vector}
				set {_valoc} to location 1.5 meters in front of {_valoc}
			else:
				set {_valoc} to location 1 meters in front of {_valoc}
			kitEffect_StaxisScythe_1({_valoc}, mod({_basenum}, 5))
			set {_locs::%{_index}%} to {_valoc}
			# --- ヒット判定 ---
			loop all entities in radius 2 around {_valoc}:
				kitCheckTeam({_player}, loop-entity, false) is true
				{_hit::%loop-entity%} is not set
				set {_hit::%loop-entity%} to true
				set {_hitting::%{_index}%} to true
				delete {_trail::%{_index}%}
				kitDamage({_player}, loop-entity, 3, "鮮血の大鎌")
				# --- ヒット時の音の演出 ---
				playSound("item.trident.hit", 1, 0.5, loop-entity)
				# -----------------------
				# --- ヒット時のパーティクル演出 ---
				kitEffect_StaxisScythe_2(loop-entity, {_valoc})  # 当たった方向から赤いパーティクルが色々吹き出す感じ
				# ------------------------------
			# ----------------
		wait a tick

# 鎌の演出 5段階
local function kitEffect_StaxisScythe_1(baseloc: location, num: number):  # 鎌の回転演出の関数
	set {_yawAxis} to getVectorFromYawAxis({_baseloc})
	set {_pitchAxis} to getVectorFromPitchAxis({_baseloc})
	set {_rollAxis} to getVectorFromRollAxis({_baseloc})

	set {_vec} to {_rollAxis}

	set {_rotateAmount} to -90 if {_num} is 0
	set {_rotateAmount} to -18 if {_num} is 1
	set {_rotateAmount} to 54 if {_num} is 2
	set {_rotateAmount} to 126 if {_num} is 3
	set {_rotateAmount} to 198 if {_num} is 4

	rotate {_vec} around {_pitchAxis} by {_rotateAmount}
	set {_baseloc} to setDirToVec({_baseloc}, {_vec})

	set {_ln.1} to 0
	set {_R} to a random number out of 106 and 108
	set {_G} to a random number out of 25 and 39
	set {_B} to a random number out of 23 and 45
	spawnParticle_Color(entity_effect, rgb({_R}, {_G}, {_B}), {_baseloc})

	# 3回円を描くことで厚みがかるように
	# ちょっと尖ったように見えるよう、回数を重ねるごとに真ん中のlengthを増やす
	# degreeの値が0に近いほどvector lengthを伸ばすように設計
	# ループ回数が増えるごとにlengthを伸ばすように設計
	loop 3 times:
		add 1 to {_ln.1}
		set {_rad} to -45

		# maxLengthは 1.5 - 2 の幅
		set {_maxLength} to (1.25 + ({_ln.1} / 4))
		set {_minLength} to 1.5
		set {_minusLength} to (({_maxLength}) - ({_minLength}))

		loop 6 times:
			set {_length} to {_minLength}
			set {_absDegree} to ((45 - (abs({_rad}))) / 45)
			set {_plusLength} to {_minusLength} * {_absDegree}
			set {_trueLength} to {_minLength} + {_plusLength}

			set {_vec} to getVectorFromRollAxis({_baseloc}, {_trueLength})
			rotate {_vec} around {_pitchAxis} by {_rad}
			set {_el} to {_baseloc} ~ {_vec}

			set {_R} to a random integer between 20 and 100
			spawnParticle_Dust(rgb({_R}, 0, 0), 1, {_el})
			add 15 to {_rad}

local function kitEffect_StaxisScythe_2(target: entity, directloc: location):  # 鎌のヒット演出の関数
	# --- プレイヤー側の演出 ---
	set {_rn} to a random integer between 5 and 10
	loop {_rn} times:
		set {_playerloc} to location of {_target}
		add 1 to y-pos of {_playerloc}
		set yaw of {_playerloc} to yaw of {_directloc}
		set pitch of {_playerloc} to 0
		set {_addyaw} to a random number between -30 and 30
		set {_addpitch} to a random number between -30 and 30
		set {_R} to a random number between 50 and 150
		set {_ln} to 0
		loop 5 times:
			add 1 to {_ln}
			set {_bl} to {_playerloc}
			set {_setyaw} to ((yaw of ({_bl})) + ({_addyaw}) / (6 - ({_ln})))
			set {_setpitch} to (({_addpitch}) / (6 - ({_ln})))
			set yaw of {_bl} to {_setyaw}
			set pitch of {_bl} to {_setpitch}
			set {_el} to location {_ln} meters in front of {_bl}
			spawnParticle_Dust(rgb({_R}, 0, 0), 1, {_el})
	# -----------------------
	# --- 鎌側の演出 ---
	set {_basevec} to getVectorFromPitchAxis({_directloc})
	set {_rad} to 0
	loop 10 times:
		add 36 to {_rad}
		set {_vec} to getVectorFromRollAxis({_directloc}, 1.5)
		rotate {_vec} around {_basevec} by {_rad}
		set {_el} to {_directloc} ~ {_vec}

		set {_R} to a random number between 50 and 150
		spawnParticle_Color(entity_effect, rgb({_R}, 0, 0), {_el})
	# -----------------