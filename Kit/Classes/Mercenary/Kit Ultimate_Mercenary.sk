# Sanguinary Murder

function kitUltMercenary(player: player):
	kitParticle_SanguinaryMurder({_player})
	setKitStats({_player}, "UltMercenary", true)
	loop 30 times:
		shoot a falling redstone block from block above {_player} at speed 1 upwards
		set {_redstone} to shot falling redstone block
		set metadata value "kit-merult" of {_redstone} to "%{_player}%"
		push {_redstone} north at speed {_power.n}
		push {_redstone} east at speed {_power.e}
	loop 200 times:
		loop all falling redstone blocks:
			metadata value "kit-merult" of (loop-falling redstone block) is "%{_player}%"
			set {_l} to (location of (block at (loop-falling redstone block)))
			if block at {_l} is air:
				if block below {_l} is not passable:
					delete (loop-falling redstone block)
					if {_lb::*} does not contain {_l}:
						add {_l} to {_lb::*}
						playSound("entity.slime.jump", 0.5, 2, {_l})
		loop all players:
			kitCheckTeam({_player}, loop-player, false, true) is true
			delete {_bl}
			loop all blocks in radius 1.5 around loop-player:
				{_bl} is not set
				{_lb::*} contains location of loop-block
				set {_bl} to true
				remove location of loop-block from {_lb::*}
				make all players see loop-block as air
			{_bl} is true
			kitDamage({_player}, loop-player, 1, "血痕", true)
			kitBlood(loop-player)
			kitEffectDescription(loop-player, "§4出血 §8& §4❤1")
		loop {_lb::*}:
			make all players see block at loop-value-2 as redstone wire
		wait a tick
	deleteKitStats({_player}, "UltMercenary")
	loop {_lb::*}:
		make all players see block at loop-value as air

function kitParticle_SanguinaryMurder(player: player):
	loop 200 times:
		spawnParticle_Color(entity_effect, rgb(150, 0, 0), {_player})
		wait a tick

local function kitParticle_SanguinaryMurder_Kill(player: player):
	set {_baseloc} to location of {_player}
	loop 10 times:
		loop 3 times:
			set {_el} to {_baseloc}
			set {_add.x} to a random number between -1 and 1
			set {_add.z} to a random number between -1 and 1
			set {_add.y} to a random number between 0 and 2
			add {_add.x} to x-pos of {_el}
			add {_add.y} to z-pos of {_el}
			add {_add.z} to y-pos of {_el}
			spawnParticle(explosion_emitter, {_el})
		wait a tick

on damage of player with priority NORMAL:
	metadata value "gametype" of victim is "Kit"
	set {_attacker} to getAttacker(victim)
	getKitStats({_attacker}, "UltMercenary") is true
	getDebuffs(victim, "Blood") is true
	health of victim <= 3
	setDamageModification_FIX(victim, 100)
	kitParticle_SanguinaryMurder_Kill(victim)