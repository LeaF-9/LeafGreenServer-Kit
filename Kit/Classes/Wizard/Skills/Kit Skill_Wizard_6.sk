# Meteor Magic

function kitSkill_Wizard_6(player: player):
	set {_mana} to kitManaCalc({_player}, 30)
	if {Kit-Mana::%{_player}%} >= {_mana}:
		toolCT({_player}, "Wizard", 6)
		set {_baseloc} to location of head of {_player}
		set {_front} to 0
		loop 20 times:
			if {_ok} is not set:
				loop 5 times:
					{_ok} is not set
					add 1 to {_front}
					set {_loc} to location {_front} meters in front of {_baseloc}
					drawDot count 1, particle "witchspell", center {_loc}, visibleRange 100
					if block at {_loc} is not passable:
						set {_ok} to true
				wait a tick
		{_ok} is true
		subtract {_mana} from {Kit-Mana::%{_player}%}
		kitMsg({_player}, "<##dc143c>メテオ<##8b008b>を召喚します...")
		kitFreeze({_player}, 1 seconds, false)
		set {_bn} to 0
		while {_blockok} is not set:
			add 0.1 to {_bn}
			set {_bl} to location {_bn} meters above {_loc}
			if block at {_bl} is passable:
				set {_blockok} to true
				set {_point} to {_bl}
		playSound("entity.evoker.prepare_summon", 1.5, 2, {_point})
#	弧を描く
		set {_n.k} to 0
		loop 60 times:
			set {_effbaseloc} to {_point}
			add 10 * sin({_n.k}) to x-coordinate of {_effbaseloc}
			add 10 * cos({_n.k}) to z-coordinate of {_effbaseloc}
			drawDot count 1, particle "redstone", RGB 220, 20, 60, center {_effbaseloc}, visibleRange 100, keepFor 1 second
			add 6 to {_n.k}
#	弦を描く
		if {_l.A} is not set:
			set {_l.A} to {_point}
			set yaw of {_l.A} to 120
			set pitch of {_l.A} to 0
			add 10 * sin(90) to x-coordinate of {_l.A}
			add 10 * cos(90) to z-coordinate of {_l.A}
		if {_l.B} is not set:
			set {_l.B} to {_point}
			set yaw of {_l.B} to 0
			set pitch of {_l.B} to 0
			add 10 * sin(210) to x-coordinate of {_l.B}
			add 10 * cos(210) to z-coordinate of {_l.B}
		if {_l.C} is not set:
			set {_l.C} to {_point}
			set yaw of {_l.C} to 240
			set pitch of {_l.C} to 0
			add 10 * sin(330) to x-coordinate of {_l.C}
			add 10 * cos(330) to z-coordinate of {_l.C}
		if {_l.D} is not set:
			set {_l.D} to {_point}
			set yaw of {_l.D} to 180
			set pitch of {_l.D} to 0
			add 10 * sin(30) to x-coordinate of {_l.D}
			add 10 * cos(30) to z-coordinate of {_l.D}
		if {_l.E} is not set:
			set {_l.E} to {_point}
			set yaw of {_l.E} to 60
			set pitch of {_l.E} to 0
			add 10 * sin(150) to x-coordinate of {_l.E}
			add 10 * cos(150) to z-coordinate of {_l.E}
		if {_l.F} is not set:
			set {_l.F} to {_point}
			set yaw of {_l.F} to 300
			set pitch of {_l.F} to 0
			add 10 * sin(270) to x-coordinate of {_l.F}
			add 10 * cos(270) to z-coordinate of {_l.F}
		loop 19 times:
			add sqrt(3) / 2 to {_n.g}
#		A-B
			set {_loc.g} to location {_n.g} meters in front of {_l.A}
			drawDot count 1, particle "redstone", RGB 220, 20, 60, center {_loc.g}, visibleRange 100, keepFor 1 second
#		D-E
			set {_loc.g} to location {_n.g} meters in front of {_l.D}
			drawDot count 1, particle "redstone", RGB 220, 20, 60, center {_loc.g}, visibleRange 100, keepFor 1 second
#		B-C
			set {_loc.g} to location {_n.g} meters in front of {_l.B}
			drawDot count 1, particle "redstone", RGB 220, 20, 60, center {_loc.g}, visibleRange 100, keepFor 1 second
#		E-F
			set {_loc.g} to location {_n.g} meters in front of {_l.E}
			drawDot count 1, particle "redstone", RGB 220, 20, 60, center {_loc.g}, visibleRange 100, keepFor 1 second
#		C-A
			set {_loc.g} to location {_n.g} meters in front of {_l.C}
			drawDot count 1, particle "redstone", RGB 220, 20, 60, center {_loc.g}, visibleRange 100, keepFor 1 second
#		F-D
			set {_loc.g} to location {_n.g} meters in front of {_l.F}
			drawDot count 1, particle "redstone", RGB 220, 20, 60, center {_loc.g}, visibleRange 100, keepFor 1 second
		set {_el} to location of {_player}
		loop 30 times:
			draw 1 witchspell particle at {_el} with direction randomVector({_el}) and speed 0.3, keepFor 1 tick
		wait a second
		playSound("entity.illusioner.prepare_blindness", 1.5, 0.8, {_point})
		set {_up} to 0
		loop 30 times:
			{_ch} is not set
			add 1 to {_up}
			set {_bc} to block {_up} meters above {_point}
			if {_bc} is not air:
				set {_ch} to true
		shoot a falling magma block from {_bc} at speed 1 downward
		drawDot count 5, particle "lava", center shot entity, visibleRange 30, keepFor 1 second
		set {_ran} to 0
		loop 3 times:
			add 3 to {_ran}
			loop all blocks in radius {_ran} around {_point}:
				block below loop-block is not air
				loop-block is air
				distance between {_point} and loop-block is between {_ran} - 1 and {_ran}
				drawDot count 1, particle "mobspell", RGB 220, 20, 60, center location of loop-block, visibleRange 32, keepFor 2 ticks
			wait 3 ticks
		wait 11 ticks
		playSound("entity.generic.explode", 1.5, 0.5, {_point})
		loop 5 times:
			shoot an egg from {_point} at speed 0.5 upwards
			drawDot count 1, particle "lava", center shot entity, visibleRange 30, keepFor 2 seconds
			push shot egg north at speed random number from -0.5 to 0.5
			push shot egg east at speed random number from -0.5 to 0.5
		loop all entities in radius 10 around {_point}:
			kitCheckTeam(loop-entity, {_player}, false) is true
			set {_dis} to distance between loop-entity and {_point}
			set {_dm} to (10 - {_dis})
			message "<##dc143c>メテオ<##c71585>がヒットした!" to loop-entity
			kitDamage({_player}, loop-entity, {_dm})
			apply blindness 1 to loop-entity for 3 seconds
			apply glowing 1 to loop-entity for 3 seconds
		loop all blocks in radius 5 around {_point}:
			loop-block is air
			add loop-block to {_blocks::*}
		loop 5 times:
			set {_rl} to a random location out of {_blocks::*}
			remove {_rl} from {_blocks::*}
			drawDot count 1, particle "explosionlarge", center {_rl}, visibleRange 30
			wait a tick
	else:
		send action bar "§4§lマナが足りません!" to {_player}