# Arcane Sorcery

options:
	itemname: "§5§lArcane Staff"

function kitUltWizard(player: player):
	wait a tick
	give a netherite hoe named {@itemname} to {_player}

on rightclick holding a netherite hoe:
	name of player's tool is {@itemname}
	cancel event
	remove a netherite hoe named {@itemname} from player
	kitEffect_ArcaneSorcery(player)



local function kitEffect_ArcaneSorcery(player: player):
	set {_baseloc} to location of head of {_player}
	kitParticle_ArcaneSorcery_Launch({_baseloc})
	loop 2000 times:
		if {_hitloc} is set:
			continue
		set {_effloc} to location loop-number * 0.1 meters in front of {_baseloc}
		kitParticle_ArcaneSorcery_Sphere({_effloc})
		loop all entities in radius 3 around {_effloc}:
			kitCheckTeam(loop-entity, {_player}, false, true) is true
			{_hit.%id of loop-entity%} is not set
			set {_entityloc} to location 1 meter above loop-entity
			distance between loop-entity and {_effloc} <= 1
			set {_hit.%id of loop-entity%} to true
			kitEffect_ArcaneSorcery_HitEntity({_player}, loop-entity)
		set {_preloc} to location 0.1 meters in front of {_effloc}
		if block at {_preloc} is not passable:
			set {_hitloc} to {_effloc}
			continue
		wait a tick
	if {_hitloc} is set:
		kitEffect_ArcaneSorcery_Ground({_player}, {_hitloc})

local function kitEffect_ArcaneSorcery_HitEntity(player: player, target: entity):
	kitParticle_ArcaneSorcery_HitEntity({_target})
	kitDamage({_player}, {_target}, 5)
	ignite {_target} by 10 seconds

local function kitEffect_ArcaneSorcery_Ground(player: player, loc: location):
	kitParticle_ArcaneSorcery_Magical({_loc})
	wait 3 seconds
	kitParticle_ArcaneSorcery_Beam({_loc})
	loop 100 times:
		loop all entities:
			kitCheckTeam(loop-entity, {_player}, false, true) is true
			set {_el} to location of loop-entity
			set y-pos of {_el} to y-pos of {_loc}
			distance between {_loc} and {_el} <= 10
			kitParticle_ArcaneSorcery_Burn(loop-entity)
			kitDamageInstant({_player}, loop-entity, 0.1)
		wait a tick



local function kitParticle_ArcaneSorcery_Launch(loc: location):
	playSound("entity.ghast.warn", 1, 0.7, {_loc})
	playSound("entity.ghast.shoot", 1, 0.65, {_loc})
	set {_loc} to location 1 meter in front of {_loc}
	set {_count} to 60
	set {_rad} to 0
	loop {_count} times:
		set {_el} to {_loc}
		set {_m1} to {_el}
		set pitch of {_m1} to pitch of {_m1} - 90
		set {_test1} to {_radius} * cos({_rad})
		set {_t1} to location {_test1} meters in front of {_m1}
		set {_m2} to {_el}
		set pitch of {_m2} to 0
		set {_test2} to {_radius} * sin({_rad})
		set {_t2} to location {_test2} meters to the right of {_m2}
		set x-pos of {_el} to x-pos of {_t1} + x-pos of {_t2} - x-pos of {_el}
		set y-pos of {_el} to y-pos of {_t1} + y-pos of {_t2} - y-pos of {_el}
		set z-pos of {_el} to z-pos of {_t1} + z-pos of {_t2} - z-pos of {_el}
		if mod({_rad}, 60) is 0 or 60:
			add {_el} to {_triangles::*}
		spawnParticle_Dust(rgb(162, 32, 65), 0.6, {_el})
		add 360 / {_count} to {_rad}
	set {_ln} to 0
	loop {_triangles::*}:
		add 1 to {_ln}
		set {_dot.1} to {_triangles::%{_ln}%}
		set {_tgn} to {_ln} + 2
		if {_tgn} > 6:
			set {_tgn} to {_tgn} - 6
		set {_dot.2} to {_triangles::%{_tgn}%}
		set {_disn} to distance between {_dot.1} and {_dot.2} / 30
		set {_linebase} to setDirToVec({_dot.1}, setVector({_dot.1}, {_dot.2}))
		set {_m} to 0
		loop 30 times:
			add 1 to {_m}
			set {_el} to location {_disn} * {_m} meters in front of {_linebase}
			spawnParticle_Dust(rgb(162, 32, 65), 0.6, {_el})

local function kitParticle_ArcaneSorcery_Sphere(loc: location):
	spawnParticle_Dust(rgb(162, 32, 65), 3, {_loc})
	set {_locs::*} to particleLocation_Sphere({_loc}, 10, 1, 30)
	loop {_locs::*}:
		spawnParticle(flame, loop-value)

local function kitParticle_ArcaneSorcery_HitEntity(entity: entity):
	






	set {_tp} to target block
	if {_tp} is set:
		remove a netherite hoe named {@itemname} from player
		set {_tpl} to location of {_tp}
		set {_base} to location 0.6 meters above {_tpl}
#	光線発射で魔法陣展開
		set {_pb} to location of player
		add 1.5 to y-coordinate of {_pb}
		set {_dis} to round(distance between {_pb} and {_base})
		set {_n} to 0
		loop {_dis} times:
			add 1 to {_n}
			set {_el} to location {_n} meters in front of {_pb}
			spawnParticle(end_rod, {_el})
#	魔法陣の展開
		set {_tick} to 20
		set {_n.k} to 0
		set {_n.g} to 0
		set {_n.e} to 0
		set pitch of {_effbaseloc} to 0
		playSound("block.respawn_anchor.set_spawn", 1.9, 1, {_base})
		loop 20 times:
#		弧を描く
			loop 3 times:
				set {_effbaseloc} to {_base}
				add 10 * sin({_n.k}) to x-coordinate of {_effbaseloc}
				add 10 * cos({_n.k}) to z-coordinate of {_effbaseloc}
				add {_effbaseloc} to {_effloc::*}
				kitParticle_MagicalConfusion_Dust({_effbaseloc}, {_tick})
				add 6 to {_n.k}
#		弦を描く
			if loop-number is between 1 and 6:
				if {_l.A} is not set:
					set {_l.A} to {_base}
					set yaw of {_l.A} to 120
					add 10 * sin(90) to x-coordinate of {_l.A}
					add 10 * cos(90) to z-coordinate of {_l.A}
				if {_l.B} is not set:
					set {_l.B} to {_base}
					set yaw of {_l.B} to 0
					add 10 * sin(210) to x-coordinate of {_l.B}
					add 10 * cos(210) to z-coordinate of {_l.B}
				if {_l.C} is not set:
					set {_l.C} to {_base}
					set yaw of {_l.C} to 240
					add 10 * sin(330) to x-coordinate of {_l.C}
					add 10 * cos(330) to z-coordinate of {_l.C}
				if {_l.D} is not set:
					set {_l.D} to {_base}
					set yaw of {_l.D} to 180
					add 10 * sin(30) to x-coordinate of {_l.D}
					add 10 * cos(30) to z-coordinate of {_l.D}
				if {_l.E} is not set:
					set {_l.E} to {_base}
					set yaw of {_l.E} to 60
					add 10 * sin(150) to x-coordinate of {_l.E}
					add 10 * cos(150) to z-coordinate of {_l.E}
				if {_l.F} is not set:
					set {_l.F} to {_base}
					set yaw of {_l.F} to 300
					add 10 * sin(270) to x-coordinate of {_l.F}
					add 10 * cos(270) to z-coordinate of {_l.F}
				loop 3 times:
					add sqrt(3) / 2 to {_n.g}
#				A-B
					set {_loc.g} to location {_n.g} meters in front of {_l.A}
					add {_loc.g} to {_effloc::*}
					kitParticle_MagicalConfusion_Dust({_loc.g}, {_tick})
#				D-E
					set {_loc.g} to location {_n.g} meters in front of {_l.D}
					add {_loc.g} to {_effloc::*}
					kitParticle_MagicalConfusion_Dust({_loc.g}, {_tick})
			else if loop-number is between 7 and 12:
				if {_n.g} > 15:
					set {_n.g} to 0
				loop 3 times:
					add sqrt(3) / 2 to {_n.g}
#				B-C
					set {_loc.g} to location {_n.g} meters in front of {_l.B}
					add {_loc.g} to {_effloc::*}
					kitParticle_MagicalConfusion_Dust({_loc.g}, {_tick})
#				E-F
					set {_loc.g} to location {_n.g} meters in front of {_l.E}
					add {_loc.g} to {_effloc::*}
					kitParticle_MagicalConfusion_Dust({_loc.g}, {_tick})
			else if loop-number is between 13 and 18:
				if {_n.g} > 15:
					set {_n.g} to 0
				loop 3 times:
					add sqrt(3) / 2 to {_n.g}
#				C-A
					set {_loc.g} to location {_n.g} meters in front of {_l.C}
					add {_loc.g} to {_effloc::*}
					kitParticle_MagicalConfusion_Dust({_loc.g}, {_tick})
#				F-D
					set {_loc.g} to location {_n.g} meters in front of {_l.F}
					add {_loc.g} to {_effloc::*}
					kitParticle_MagicalConfusion_Dust({_loc.g}, {_tick})
			subtract 1 from {_tick}
			add 1 to {_n.e}
			loop all blocks in radius 10 around {_base}:
				loop-block is air
				chance of ({_n.e} / 10)%:
					spawnParticle_Color(entity_effect, 0, 123, 187, location of loop-block)
			wait a tick
		playSound("block.respawn_anchor.deplete", 1.9, 0.5, {_base})
		loop all players in radius 10 around {_base}:
			{TrueTeam::%loop-player%} is not {TrueTeam::%player%}
			kitDamage(player, loop-player, 5, true)
			apply wither 3 to loop-player for 5 seconds
			message "<##e2041b>§l魔力爆発に巻き込まれてしまった!" to loop-player
			add 10 to {Kit-Mana::%player%}
			loop 5 times:
				set {_el} to aroundEffect(loop-player)
				spawnParticle_Color(entity_effect, 226, 4, 27, {_el})
		loop all blocks in radius 10 around {_base}:
			loop-block is air
			chance of 10%:
				spawnParticle_Block(blue ice, location of loop-block)
		kitParticle_MagicalConfusion_Dust2({_effloc::*})
		loop 180 times:
			if distance between player and {_base} <= 10:
				set {Stats.%player%::UltWizard} to true
				loop 3 times:
					set {_el} to aroundEffect(player)
					spawnParticle_Dust(rgb(226, 4, 27), 1, {_el})
			else:
				delete {Stats.%player%::UltWizard}
			wait a tick
		delete {Stats.%player%::UltWizard}
	else:
		send action bar "§c§l目先にブロックがありません" to player

local function kitParticle_MagicalConfusion_Dust(loc: location, tick: number):
	loop {_tick} times:
		spawnParticle_Dust(rgb(0, 123, 187), 1, {_loc})
		wait a tick

local function kitParticle_MagicalConfusion_Dust2(locs: locations):
	loop 180 times:
		loop {_locs::*}:
			spawnParticle_Dust(rgb(226, 4, 27), 1, loop-value-2)
		wait a tick