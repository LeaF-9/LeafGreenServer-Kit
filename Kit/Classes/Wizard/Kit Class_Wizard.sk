# Wizardのスキル Ver1.0.0

# Weapons
on damage of player:
	metadata value "gametype" of attacker is "Kit"
	damage was caused by attack
	{Class::%attacker%} is "Wizard"
	{Stats.%victim%::Invincible} is not set
	set {_tool} to attacker's tool
	if kitItemAllChecker({_tool}, "Wizard", "Weapon.main", 1) is true:
		set {_ok} to true
		set {_mana} to 5
	else if kitItemAllChecker({_tool}, "Wizard", "Weapon.main", 2) is true:
		set {_ok} to true
		set {_mana} to 3
	else if kitItemAllChecker({_tool}, "Wizard", "Weapon.main", 3) is true:
		set {_ok} to true
		set {_mana} to 1
	if {_ok} is true:
		add {_mana} to {Kit-Mana::%attacker%}
		kitMsg(attacker, "§bマナ §9§l%{_mana}% §7ゲット!")

on shoot:
	if name of shooter's tool is "§bMana Drawing":
		set metadata value "manablue" of projectile to "true"
	else if name of shooter's tool is "§aMana Assimilation":
		set metadata value "managreen" of projectile to "true"

on damage of player:
	{Class::%attacker%} is "Wizard"
	victim is not attacker
	{Stats.%victim%::Invincible} is not set
	if damage was caused by potion:
		if metadata value "managreen" of projectile is "true":
			set damage to 1
			add 2 to {Kit-Mana::%attacker%}
			kitMsg(attacker, "§bマナ §9§l2 §7ゲット!")
		else if metadata value "manablue" of projectile is "true":
			add 3 to {Kit-Mana::%attacker%}
			kitMsg(attacker, "§bマナ §9§l3 §7ゲット!")

function kitWeaponWizard(player: player):
	set {_tool} to {_player}'s tool
	set {_item.num} to kitItemNumberChecker({_tool})
	checkCT({_player}, name of {_tool}) is true
	checkItemCT({_player}, {_tool}) is true
	if {_item.num} is 2:
		kitWeapon_Wizard_2({_player})
	else if {_item.num} is 3:
		kitWeapon_Wizard_3({_player})

# Skills
function kitSkillWizard(player: player) :: boolean:
	set {_tool} to {_player}'s tool
	set {_item.num} to kitItemNumberChecker({_tool})
	if checkCT({_player}, name of {_tool}) is true:
		if {_item.num} is 1:
			kitSkill_Wizard_1({_player})
		else if {_item.num} is 2:
			kitSkill_Wizard_2({_player})
		else if {_item.num} is 3:
			kitSkill_Wizard_3({_player})
		else if {_item.num} is 4:
			kitSkill_Wizard_4({_player})
		else if {_item.num} is 5:
			kitSkill_Wizard_5({_player})
		else if {_item.num} is 6:
			kitSkill_Wizard_6({_player})
		else if {_item.num} is 7:
			kitSkill_Wizard_7({_player})
		else if {_item.num} is 8:
			kitSkill_Wizard_8({_player})
	return true

function kitParticle_Wizard_Magic(proj: projectile, R: number, G: number, B: number):
	loop 30 times:
		spawnParticle_Color(entity_effect, {_R}, {_G}, {_B}, {_proj})
		wait a tick

function kitParticle_Wizard_Circle(baseloc: location, color: color):
	loop 20 times:
		loop 72 times:
			add 5 to {_rad}
			set {_el} to {_baseloc}
			add 5 * sin({_rad}) to x-pos of {_el}
			add 5 * cos({_rad}) to z-pos of {_el}
			spawnParticle_Dust({_color}, 1.5, {_el})
		wait a tick

on projectile hit:
	projectile is a snowball
	if metadata value "magic" of projectile is set:
		set {_l} to location of block at projectile
		if metadata value "magic" of projectile is "blood":
			playSound("entity.husk.converted_to_zombie", 1, 1, {_l})
			kitParticle_Wizard_Circle({_l}, rgb(255, 0, 0))
			kitEffect_BloodMagic(shooter, {_l})
		else if metadata value "magic" of projectile is "dark":
			playSound("entity.phantom.bite", 1, 1, {_l})
			kitParticle_Wizard_Circle({_l}, rgb(0, 0, 0))
			kitEffect_DarkMagic(shooter, {_l})
		else if metadata value "magic" of projectile is "freeze":
			playSound("entity.vex.death", 1, 1, {_l})
			kitParticle_Wizard_Circle({_l}, rgb(0, 0, 255))
			kitEffect_FreezeMagic(shooter, {_l})
		else if metadata value "magic" of projectile is "electro":
			loop 3 times:
				strike lightning effect at {_l}
			kitParticle_Wizard_Circle({_l}, rgb(255, 255, 0))
			kitEffect_ElectroMagic(shooter, {_l})
		else if metadata value "magic" of projectile is "drain":
			playSound("block.bubble_column.upwards_inside", 1, 1, {_l})
			kitParticle_Wizard_Circle({_l}, rgb(0, 255, 0))
			kitEffect_DrainMagic(shooter, {_l})

# Abilities
on death of player:
	{Class::%{LastKiller::%victim%}%} is "Wizard"
	add 10 to {Kit-Mana::%{LastKiller::%victim%}%}
	kitMsg({LastKiller::%victim%}, "§bマナ §9§l10 §7ゲット!")
	if type of slot 4 of {LastKiller::%victim%} is air:
		load yml "plugins/skript-yaml/Kit Classes/Wizard.yml" as "manadrawing.%{_player}%"
		set {_ManaDrawing} to yml value "kititems.Mana Drawing" from "manadrawing.%{_player}%"
		set slot 4 of {LastKiller::%victim%} to {_ManaDrawing}
		unload yml "manadrawing.%{_player}%"

function kitManaCalc(player: player, mana: number) :: number:
	set {_mc} to {_mana}
	if {Stats.%{_player}%::FairyWand} is set:
		set {_mc} to {_mc} - {Stats.%{_player}%::FairyWand}
		delete {Stats.%{_player}%::FairyWand}
		if {_mc} < 0:
			set {_mc} to 0
	if {Stats.%{_player}%::UltWizard} is true:
		set {_mc} to 0
	return {_mc}

command /manaset <number>:
	permission: sk.admin
	trigger:
		set {Kit-Mana::%player%} to arg 1

# Timer
function kitTimerWizard(player: player):
	create bossbar titled "&b&lMana&5: &9&l%{Kit-Mana::%{_player}%}%" and id "%{_player}%-Mana" for {_player} with progress {Kit-Mana::%{_player}%} with colors blue with style segmented 10
	while {Class::%{_player}%} is "Wizard":
		set bossbar "%{_player}%-Mana" title to "&b&lMana&5: &9&l%{Kit-Mana::%{_player}%}%"
		set bossbar "%{_player}%-Mana" value to {Kit-Mana::%{_player}%}
		wait a second
	remove bossbar "%{_player}%-Mana"