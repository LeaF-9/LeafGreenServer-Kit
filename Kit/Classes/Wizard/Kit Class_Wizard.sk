# Wizardのスキル Ver1.0.0

# Weapons
on damage of player:
	set {_attacker} to getAttacker(victim)
	metadata value "gametype" of {_attacker} is "Kit"
	damage was caused by attack
	{Class::%attacker%} is "Wizard"
	{Stats.%victim%::Invincible} is not set
	set {_tool} to {_attacker}'s tool
	if kitItemAllChecker({_tool}, "Wizard", "Weapon", 1) is true:
		set {_ok} to true
		set {_mana} to 5
	else if kitItemAllChecker({_tool}, "Wizard", "Weapon", 2) is true:
		set {_ok} to true
		set {_mana} to 3
	else if kitItemAllChecker({_tool}, "Wizard", "Weapon", 3) is true:
		set {_ok} to true
		set {_mana} to 1
	if {_ok} is true:
		add {_mana} to {Kit-Mana::%{_attacker}%}
		kitMsg({_attacker}, "§bマナ §9§l%{_mana}% §7ゲット!")

on shoot:
	if name of shooter's tool is "§bMana Drawing":
		set metadata value "manablue" of projectile to "true"
	else if name of shooter's tool is "§aMana Assimilation":
		set metadata value "managreen" of projectile to "true"

on damage of player with priority LOW:
	set {_attacker} to getAttacker(victim)
	{Class::%{_attacker}%} is "Wizard"
	victim is not {_attacker}
	{Stats.%victim%::Invincible} is not set
	if damage was caused by potion:
		if metadata value "managreen" of projectile is "true":
			setDamageModification_SET(victim, 1)
			add 2 to {Kit-Mana::%{_attacker}%}
			kitMsg({_attacker}, "§bマナ §9§l2 §7ゲット!")
		else if metadata value "manablue" of projectile is "true":
			add 3 to {Kit-Mana::%{_attacker}%}
			kitMsg({_attacker}, "§bマナ §9§l3 §7ゲット!")

# Skills

function kitParticle_Wizard_Magic(proj: projectile, R: number, G: number, B: number):
	loop 30 times:
		spawnParticle_Color(entity_effect, rgb({_R}, {_G}, {_B}), {_proj})
		wait a tick

function kitParticle_Wizard_Circle(baseloc: location, color: color):
	set pitch of {_baseloc} to 0

	set {_loopnum} to 20
	set {_radius} to 5
	set {_circle} to 90
	set {_addrad} to 360 / {_circle}

	set {_rad} to 0
	loop 8 times:
		add 45 to {_rad}
		set {_el} to {_baseloc}
		set yaw of {_el} to {_rad}
		set {_el} to location {_radius} meters in front of {_el}
		if mod({_rad}, 90) = 0:
			add {_el} to {_square.1::*}
		if mod(({_rad} + 45), 90) = 0:
			add {_el} to {_square.2::*}

	loop {_loopnum} times:
		# circles
		set {_rad} to 0

		loop {_circle} times:
			add {_addrad} to {_rad}
			set {_el} to {_baseloc}
			set yaw of {_el} to {_rad}
			set {_el} to location {_radius} meters in front of {_el}
			spawnParticle_Dust({_color}, 1.5, {_el})

		set {_ln.2} to 0
		loop 2 times:
			add 1 to {_ln.2}

			set {_ln.3} to 0
			loop {_square.%{_ln.2}%::*}:
				add 1 to {_ln.3}
				set {_ln.next} to {_ln.3} + 1
				if {_ln.next} is 5:
					set {_ln.next} to 1
				
				set {_loc.pres} to {_square.%{_ln.2}%::%{_ln.3}%}
				set {_loc.next} to {_square.%{_ln.2}%::%{_ln.next}%}
				set {_loc.direct} to setDirToVec({_loc.pres}, setVector({_loc.pres}, {_loc.next}))

				set {_distance} to distance between {_loc.pres} and {_loc.next}
				set {_amount} to 10
				set {_addm} to {_distance} / {_amount}

				set {_m} to 0
				loop {_amount} times:
					set {_el} to location {_m} meters in front of {_loc.direct}
					spawnParticle_Dust({_color}, 1.5, {_el})
					add {_addm} to {_m}

		wait a tick

on projectile hit:
	projectile is a snowball
	if metadata value "magic" of projectile is set:
		set {_l} to location of block at projectile
		if metadata value "magic" of projectile is "blood":
			playSound("entity.husk.converted_to_zombie", 1, 1, {_l})
			kitParticle_Wizard_Circle({_l}, rgb(255, 0, 0))
			kitEffect_BloodMagic(shooter, {_l})
		else if metadata value "magic" of projectile is "dark":
			playSound("entity.phantom.bite", 1, 1, {_l})
			kitParticle_Wizard_Circle({_l}, rgb(0, 0, 0))
			kitEffect_DarkMagic(shooter, {_l})
		else if metadata value "magic" of projectile is "freeze":
			playSound("entity.vex.death", 1, 1, {_l})
			kitParticle_Wizard_Circle({_l}, rgb(0, 0, 255))
			kitEffect_FreezeMagic(shooter, {_l})
		else if metadata value "magic" of projectile is "electro":
			loop 3 times:
				strike lightning effect at {_l}
			kitParticle_Wizard_Circle({_l}, rgb(255, 255, 0))
			kitEffect_ElectroMagic(shooter, {_l})
		else if metadata value "magic" of projectile is "drain":
			playSound("block.bubble_column.upwards_inside", 1, 1, {_l})
			kitParticle_Wizard_Circle({_l}, rgb(0, 255, 0))
			kitEffect_DrainMagic(shooter, {_l})

# Abilities
on death of player:
	{Class::%{LastKiller::%victim%}%} is "Wizard"
	add 10 to {Kit-Mana::%{LastKiller::%victim%}%}
	kitMsg({LastKiller::%victim%}, "§bマナ §9§l10 §7ゲット!")
	if type of slot 4 of {LastKiller::%victim%} is air:
		load yml "plugins/skript-yaml/Kit Classes/Wizard.yml" as "manadrawing.%{_player}%"
		set {_ManaDrawing} to yml value "kititems.Mana Drawing" from "manadrawing.%{_player}%"
		set slot 4 of {LastKiller::%victim%} to {_ManaDrawing}
		unload yml "manadrawing.%{_player}%"

function kitManaCalc(player: player, mana: number) :: number:
	set {_mc} to {_mana}
	if {Stats.%{_player}%::FairyWand} is set:
		set {_mc} to {_mc} - {Stats.%{_player}%::FairyWand}
		delete {Stats.%{_player}%::FairyWand}
		if {_mc} < 0:
			set {_mc} to 0
	if {Stats.%{_player}%::UltWizard} is true:
		set {_mc} to 0
	return {_mc}

command /manaset <number>:
	permission: sk.admin
	trigger:
		set {Kit-Mana::%player%} to arg 1

# Timer
function kitTimerWizard(player: player):
	create bossbar titled "&b&lMana&5: &9&l%{Kit-Mana::%{_player}%}%" and id "%{_player}%-Mana" for {_player} with progress {Kit-Mana::%{_player}%} with colors blue with style segmented 10
	while {Class::%{_player}%} is "Wizard":
		set bossbar "%{_player}%-Mana" title to "&b&lMana&5: &9&l%{Kit-Mana::%{_player}%}%"
		set bossbar "%{_player}%-Mana" value to {Kit-Mana::%{_player}%}
		wait a second
	remove bossbar "%{_player}%-Mana"