# Hacking Device

function kitEffect_HackingDevice(player: player):
	set {_loc} to getKitStats({_player}, "SkillLocation")
	if {_loc} is not set:
		nullEngineerPlacePosition({_player})
		stop

	nameCT({_player}, "Hacking Device")
	set {_now} to now
	setKitStats({_player}, "HackingDevice-Time", {_now})
	kitFakeDeleteData({_player}, "Machine-Hacking Device")
	set {_loc.base} to {_loc}
	set {_loc.core} to {_loc}
	add 1 to y-coordinate of {_loc.core}
	setKitStats({_player}, "HackingDevice", {_loc.core})
	set {_transformation} to kitTransformation("[0f,0f,0f,1f]", "[0f,0f,0f,1f]", "[-0.5f,0f,-0.5f]", "[1f,1f,1f]")
	kitFakeBlock({_player}, {_loc.base}, "minecraft:polished_blackstone_wall", {_transformation}, "Machine-Hacking Device")
	kitFakeBlock({_player}, {_loc.core}, "minecraft:structure_block", {_transformation}, "Machine-Hacking Device")
	kitMsg({_player}, "<##E9BC00>Hacking Device§eを設置しました!")
	playSound("item.trident.return", 1, 1.5, {_loc.base})
	while getKitStats({_player}, "HackingDevice-Time") is {_now}:
		wait a second
		set {_exist} to kitFakeCheck({_player}, "Machine-Hacking Device")
		if {_exist} is false:
			deleteKitStats({_player}, "HackingDevice")
			deleteKitStats({_player}, "HackingDevice-Time")

on leftclick holding a structure block:
	set {_tool} to player's tool
	set {_item.kit} to kitItemKitChecker({_tool})
	{_item.kit} is "Engineer"
	set {_item.type} to kitItemTypeChecker({_tool})
	{_item.type} is "Skill"
	set {_item.num} to kitItemNumberChecker({_tool})
	{_item.num} is 7
	getKitStats(player, "HackingDevice") is set
	checkCT(player, "Hacking Wave") is true
	if getKitStats(player, "HackingDevice-NoFuel") is true:
		set {_ok} to true
	else if checkFuel(player, 7) is true:
		set {_ok} to true
	if {_ok} is not set:
		stop
	setCT(player, "Hacking Wave", 3)
	kitMsg(player, "§e§lHacking Device §6のチャージを行ないます...")
	set {_pitch} to 0.5
	set {_round} to 0
	loop all block displays:
		metadata value "kit-block" of loop-block display is "Machine-Hacking Device"
		metadata value "Machine-Hacking Device" of loop-block display is "%player%"
		set glowing of loop-block display to true
	loop 40 times:
		if getKitStats(player, "HackingDevice") is set:
			add 0.25 to {_round}
			set {_baseloc} to getKitStats(player, "HackingDevice")
			add 0.5 to y-coordinate of {_baseloc}
			loop 10 times:
				set {_el} to {_baseloc}
				add a random number between {_round} * -1 and {_round} to x-coordinate of {_el}
				add a random number between {_round} * -1 and {_round} to z-coordinate of {_el}
				add a random number between {_round} * -1 and {_round} to y-coordinate of {_el}
				spawnParticle(enchanted_hit, {_el})
			playSound("entity.blaze.hurt", 0.6, {_pitch}, {_baseloc})
			add 0.0375 to {_pitch}
			wait a tick
	if getKitStats(player, "HackingDevice") is set:
		set {_baseloc} to getKitStats(player, "HackingDevice")
		kitMsg(player, "§5装置より <##E9BC00>§lハッキングウェーブ §5を放出しました!")
		playSound("block.respawn_anchor.set_spawn", 1, 1, {_baseloc})
		loop all players in radius 10 around {_baseloc}:
			kitCheckTeam(player, loop-player, false) is true
			kitPalsy(loop-player, 200)
			apply mining fatigue 1 to loop-player for 3 seconds
			message formatted "§eハッキングでスキルの使用が禁じられた!" to loop-player
			kitEffectDescription(loop-player, "§e§l麻痺")
		loop all block displays:
			metadata value "kit-block" of loop-block display is "Machine-Hacking Device"
			metadata value "Machine-Hacking Device" of loop-block display is "%player%"
			set glowing of loop-block display to false
		set {_s} to 0
		set {_t} to 0
		set {_pl} to {_baseloc}
		loop 19 time:
			loop 36 time:
				set {_loc} to {_pl}
				set {_vector} to {_loc}
				set {_x} to x-coordinate of {_loc}
				set {_y} to y-coordinate of {_loc}
				set {_z} to z-coordinate of {_loc}
				set x-coordinate of {_vector} to {_x} + ( 10 * sin({_s}) * cos({_t}) )
				set y-coordinate of {_vector} to {_y} + ( 10 * cos({_s}) )
				set z-coordinate of {_vector} to {_z} + ( 10 * sin({_s}) * sin({_t}) )
				chance of 30%:
					spawnParticle_Color(entity_effect, rgb(255, 255, 0), {_vector})
				add 10 to {_t}
			add 10 to {_s}