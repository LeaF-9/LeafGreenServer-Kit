# Restore Faster

function kitEffect_RestoreFaster(player: player):
	set {_loc} to getKitStats({_player}, "SkillLocation")
	if {_loc} is not set:
		nullEngineerPlacePosition({_player})
		stop

	nameCT({_player}, "Restore Faster")
	set {_now} to now
	setKitStats({_player}, "RestoreFaster-Time", {_now})
	kitFakeDeleteData({_player}, "Machine-Restore Faster")
	set {_loc.base} to {_loc}
	set {_loc.core} to {_loc}
	add 1.55 to y-coordinate of {_loc.core}

	set {_rotation} to getQuaternionf(0, 0, 0, 1)
	set {_translation} to getVector3f(-0.45, -0.45, -0.45)
	set {_scale} to getVector3f(0.9, 0.9, 0.9)
	set {_transformation} to getTransformation({_rotation}, {_rotation}, {_translation}, {_scale})
	set {_block} to getBlockData(glowstone)
	set {_coredisplay} to kitFakeBlock({_player}, {_loc.core}, {_block}, {_transformation}, "Machine-Restore Faster")

	set {_translation} to getVector3f(-0.5, 0, -0.5)
	set {_scale} to getVector3f(1, 1, 1)
	set {_transformation} to getTransformation({_rotation}, {_rotation}, {_translation}, {_scale})
	set {_block} to getBlockData(birch fence)
	kitFakeBlock({_player}, {_loc.base}, {_block}, {_transformation}, "Machine-Restore Faster")
	kitMsg({_player}, "<##FFF352>Restore Faster§6を設置しました!")
	playSound("entity.blaze.hurt", 1, 2, {_loc})

	set {_skill} to kitSkillItem("Engineer", 2)
	set {_lore::*} to lore of {_skill}
	loop {_lore::*}:
		loop-value contains "§8Fuel§7"
		set {_fuel} to loop-value
	replace every "§8Fuel§7: §4" with "" in {_fuel}
	set {_fuel} to {_fuel} parsed as number

	set {_randomid} to a random UUID
	# coreを回転させる関数
	kitEffect_RestoreFaster_Core({_player}, {_coredisplay})
	while getKitStats({_player}, "RestoreFaster-Time") is {_now}:
		wait a second
		# 現在範囲内の味方リストをリセット
		delete {_enter.now::*}
		# fuel check(最低でも消費Fuel以上存在しない場合は効果を発揮しない)
		delete {_execute}
		if {Kit-Fuel::%{_player}%} >= {_fuel}:
			set {_execute} to true
		# 効果発動時
		if {_execute} is true:
			loop all players:
				{_execute} is true
				loop-player is not {_player}
				kitCheckTeam(loop-player, {_player}, true) is true

				# 範囲外に出てから再度有効化するまでの時間
				if {_timer::%loop-player%} is set:
					subtract 1 from {_timer::%loop-player%}
					# 範囲外に立ってから5秒以上が経過した際の処理
					if {_timer::%loop-player%} <= 0:
						delete {_timer::%loop-player%}
					continue

				set {_distance} to distance between {_loc} and loop-player
				if {_distance} > 30:
					continue

				# ボスバー設定
				set {_uuid} to UUID of loop-player
				set {_id} to "%{_randomid}%-%{_uuid}%"

				# もし入った履歴がなければFuel消費
				if {_enter.hist::*} does not contain loop-player:
					if {Kit-Fuel::%{_player}%} < {_fuel}:
						continue
					setFuelCT({_player})
					subtract {_fuel} from {Kit-Fuel::%{_player}%}

					add loop-player to {_enter.hist::*}
					setSupporter(loop-player, {_player})
					message formatted "§bクールタイム短縮時間§eが短くなります!" to loop-player
					kitEffectDescription(loop-player, "§b§lCT§e§l加速")
					kitParticle_RestoreFaster(loop-player, true)

					set {_timer.title} to "§bCool Time§e§l加速"
					create bossbar titled {_timer.title} and id {_id} for loop-player with progress 0 with colors yellow with style solid
				# 現在入っている記録 & 効果
				add loop-player to {_enter.now::*}
				setKitStats(loop-player, "FastCT", true)

				# ボスバー設定
				set {_prog} to 100 - (({_distance} / 30) * 100)
				set bossbar {_id} value to {_prog}

			# 入った履歴内で現在いないプレイヤーの処理
			loop {_enter.hist::*}:
				{_enter.now::*} does not contain loop-value
				set {_uuid} to UUID of loop-value
				set {_id} to "%{_randomid}%-%{_uuid}%"
				# 効果発動中であれば効果削除
				if getKitStats(loop-value, "FastCT") is true:
					deleteKitStats(loop-value, "FastCT")
					message formatted "§bクールタイム短縮§c効果が切れました" to loop-value
					kitParticle_RestoreFaster(loop-value, false)
					set {_timer::%loop-value%} to 5
					remove bossbar {_id}
					remove loop-value from {_enter.hist::*}

		# 効果未発動時
		else:
			loop {_enter.hist::*}:
				set {_uuid} to UUID of loop-value
				set {_id} to "%{_randomid}%-%{_uuid}%"
				# 効果発動中であれば効果削除
				if getKitStats(loop-value, "FastCT") is true:
					deleteKitStats(loop-value, "FastCT")
					message formatted "§bクールタイム短縮§c効果が切れました" to loop-value
					kitParticle_RestoreFaster(loop-value, false)
					remove bossbar {_id}
		# 機械存在のチェック
		set {_exist} to kitFakeCheck({_player}, "Machine-Restore Faster")
		if {_exist} is false:
			deleteKitStats({_player}, "RestoreFaster-Time")
			loop {_enter.hist::*}:
				getKitStats(loop-value, "FastCT") is true
				deleteKitStats(loop-value, "FastCT")
				message "§bクールタイム短縮§c効果が切れました" to loop-value
				kitParticle_RestoreFaster(loop-value, false)
			loop all players:
				set {_uuid} to UUID of loop-player
				set {_id} to "%{_randomid}%-%{_uuid}%"
				remove bossbar {_id}

local function kitEffect_RestoreFaster_Core(player: player, display: entity):
	set {_now} to getKitStats({_player}, "RestoreFaster-Time")
	set {_yaw} to yaw of {_display}
	set {_rotate.yaw} to 100
	set {_add.yaw} to {_rotate.yaw} / 20 * -1

	set {_ln} to 0
	while getKitStats({_player}, "RestoreFaster-Time") is {_now}:
		delete {_exist}
		loop all block displays:
			loop-block display is {_display}
			set {_exist} to true
		if {_exist} is not set:
			stop

		set {_baseloc} to location of {_display}
		set {_tploc} to {_baseloc}
		add {_add.yaw} to {_yaw}
		set yaw of {_tploc} to {_yaw}
		teleport {_display} to {_tploc}

		add 1 to {_ln}
		if mod({_ln}, 20) = 0:
			set {_soundpitch} to a random number between 0.5 and 0.8
			playSound("item.lodestone_compass.lock", 0.05, {_soundpitch}, {_tploc})

		kitParticle_RestoreFaster_Clock({_tploc})
		wait a tick



local function kitParticle_RestoreFaster(player: player, bool: boolean):
	set {_up} to -0.5
	loop 5 times:
		set {_loc} to location of {_player}
		add 0.5 to {_up}
		if {_bool} is true:
			add {_up} to y-coordinate of {_loc}
		else:
			add 2 to y-coordinate of {_loc}
			subtract {_up} from y-coordinate of {_loc}
		set {_rad} to 0
		loop 10 times:
			set {_el} to {_loc}
			add 36 to {_rad}
			add 0.5 * sin({_rad}) to x-coordinate of {_el}
			add 0.5 * cos({_rad}) to z-coordinate of {_el}
			if {_bool} is true:
				spawnParticle_Color(entity_effect, rgb(255, 255, 0), {_el})
			else:
				spawnParticle_Color(entity_effect, rgb(0, 255, 255), {_el})
		wait a tick

local function kitParticle_RestoreFaster_Clock(baseloc: location):
	set {_yaw} to (yaw of {_baseloc}) * 2
	spawnParticle_DustTransition(rgb(243, 243, 57), rgb(243, 243, 179), 1, particleLocation_Circle({_baseloc}, 4, 1.2, {_yaw}))