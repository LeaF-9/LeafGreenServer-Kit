# Weapon-Name: Bolt Knife

function kitEffect_BoltKnife_AttackLow(player: player, event: object):
	set {_victim} to {_event}.getEntity()
	set {_attacker} to {_player}
	kitEffect_BoltKnife({_attacker}) is true
	setDamageModification_MUL({_victim}, 1.2)
	kitParticle_BoltKnife({_attacker}, {_victim})

local function kitEffect_BoltKnife(player: player) :: boolean:
	set {_bool} to false
	loop all entities in radius 5 around {_player}:
		type of loop-entity is armor stand
		set {_meta} to metadata value "kit-armor" of loop-entity
		{_meta} contains "Machine-"
		set {_bool} to true
	return {_bool}

local function kitParticle_BoltKnife(attacker: player, victim: player):
	playSound("entity.villager.work_toolsmith", 1, 1, {_victim})
	set {_from} to location 1 meters above {_attacker}
	set {_to} to location 1 meters above {_victim}
	set {_vector} to setVector({_from}, {_to})
	set {_baseloc} to {_from}
	set yaw of {_baseloc} to yaw of {_vector}
	set pitch of {_baseloc} to pitch of {_vector}
	set {_dist} to round(distance between {_from} and {_to})
	loop {_dist} times:
		set {_el} to location loop-number meters in front of {_baseloc}
		spawnParticle(cloud, {_el})
	set {_rad} to 0
	# 準備
	set {_eb} to {_to}
	set yaw of {_eb} to yaw of {_baseloc}
	set pitch of {_eb} to pitch of {_baseloc}
	set {_m1} to {_eb}
	set {_p} to pitch of {_m1}
	if {_p} < 0:
		set {_p} to -1 * 90 - {_p}
		set {_y} to yaw of {_m1}
		add 180 to {_y}
		if {_y} >= 360:
			set {_y} to {_y} - 360
		set yaw of {_m1} to {_y}
	else:
		set {_p} to {_p} - 90
	set pitch of {_m1} to {_p}
	# particle
	loop 5 times:
		loop 2 times:
			set {_test1} to 1 * cos({_rad})
			set {_t1} to location {_test1} meters in front of {_m1}
			set {_m2} to {_eb}
			set pitch of {_m2} to 0
			set {_test2} to 1 * sin({_rad})
			set {_t2} to location {_test2} meters to the right of {_m2}
			set x-pos of {_eb} to ((x-pos of {_t1}) + (x-pos of {_t2}) - (x-pos of {_eb}))
			set y-pos of {_eb} to ((y-pos of {_t1}) + (y-pos of {_t2}) - (y-pos of {_eb}))
			set z-pos of {_eb} to ((z-pos of {_t1}) + (z-pos of {_t2}) - (z-pos of {_eb}))
			spawnParticle(enchanted_hit, {_eb})
			add 180 to {_rad}
		add 36 to {_rad}
		wait a tick