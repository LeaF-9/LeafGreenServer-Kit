# Weapon-Name: Geary Cog

function kitEffect_GearyCog_Sneak(player: player, event: object):
	# Fuel Check
	if checkFuel({_player}, 2, "Weapon") is false:
		stop
	if getKitStats({_player}, "GearyCog") is true:
		stop
	# ギアチェンジ
	kitEffect_GearyCog_Change({_player})

function kitEffect_GearyCog_DamageLow(player: player, object: event):
	set {_victim} to {_player}
	kitSelectChecker_Weapon({_victim}, "Engineer") is 2
	getKitStats({_victim}, "GearyCog") is true
	kitEffect_GearyCog_Change({_victim})

function kitEffect_GearyCog_AttackLow(player: player, object: event):
	set {_victim} to {_event}.getEntity()
	set {_attacker} to {_player}
	# Geary Cogでの攻撃時
	if getKitStats({_attacker}, "GearyCog") is true:
		setDamageModification_MUL({_victim}, 2)
		kitParticle_GearyCog_Positive(location of {_attacker}, location of {_victim})
		kitEffect_GearyCog_Change({_attacker})
	else:
		setDamageModification_MUL({_victim}, 0.2)
		kitParticle_GearyCog_Negative(location of {_attacker}, location of {_victim})

local function kitEffect_GearyCog_Change(player: player):
	if getKitStats({_player}, "GearyCog") is true:
		setKitStats({_player}, "GearyCog", false)
	else:
		setKitStats({_player}, "GearyCog", true)
	kitParticle_GearyCog_Change(location of {_player})

function kitEffect_GearyCog_ActionBar(player: player):
	if getKitStats({_player}, "GearyCog") is true:
		set {_state} to "§a§lPositive"
	else:
		set {_state} to "§c§lNegative"
	send action bar "§6§lGear§7: %{_state}%" to {_player}

# 渦が相手に迫る演出
local function kitParticle_GearyCog_Positive(fromloc: location, toloc: location):
	playSound("block.respawn_anchor.deplete", 1, 1.5, {_toloc})
	set {_distance} to distance between {_fromloc} and {_toloc}
	set {_vector} to setVector({_fromloc}, {_toloc})
	set yaw of {_fromloc} to yaw of {_vector}
	set pitch of {_fromloc} to pitch of {_vector}
	add 1 to y-pos of {_fromloc}
	set {_rad} to 0
	loop 5 times:
		set {_m} to {_distance} / 5 * loop-number
		set {_centerloc} to location {_m} meters in front of {_fromloc}
		loop 8 times:
			set {_tmprad} to {_rad} + (45 * loop-number-2)
			set {_el} to {_centerloc}
			set {_mt} to 0
			loop 10 times:
				add 0.1 to {_mt}
				set {_vec} to vector({_mt}, 0, 0)
				rotate {_vec} around y-axis by {_tmprad}
				set {_el} to {_el} ~ {_vec}

				spawnParticle_Dust(rgb(255, 243, 82), 0.5, {_el})
				set {_sub} to ((loop-number-3) * (loop-number-3) / 10)
				subtract {_sub} from {_tmprad}
		add 10 to {_rad}
		wait a tick
	
# 円が相手に迫る演出
local function kitParticle_GearyCog_Negative(fromloc: location, toloc: location):
	playSound("block.amethyst_block.fall", 1, 2, {_toloc})
	set {_distance} to distance between {_fromloc} and {_toloc}
	set {_vector} to setVector({_fromloc}, {_toloc})
	set yaw of {_fromloc} to yaw of {_vector}
	set pitch of {_fromloc} to pitch of {_vector}
	add 1 to y-pos of {_fromloc}
	set {_rad} to 0
	loop 5 times:
		set {_m} to (({_distance}) / 5 * (loop-number))
		set {_centerloc} to location {_m} meters in front of {_fromloc}
		loop 8 times:
			set {_tmprad} to ({_rad} + (45 * (loop-number-2)))
			set {_vec} to vector(1, 0, 0)
			rotate {_vec} around y-axis by {_tmprad}
			set {_el} to {_centerloc} ~ {_vec}

			spawnParticle_Dust(rgb(90, 68, 152), 0.5, {_el})
		add 10 to {_rad}
		wait a tick

# ギアが回るような演出
local function kitParticle_GearyCog_Change(baseloc: location):
	playSound("item.lodestone_compass.lock", 1, 1, {_baseloc})
	add 1 to y-pos of {_baseloc}
	set pitch of {_baseloc} to 0
	# 円の座標保存
	set {_rad} to 0
	loop 60 times:
		add 6 to {_rad}
		set {_m.upper} to 0.5 * cos({_rad})
		set {_loc.upper} to location {_m.upper} meters above {_baseloc}
		set {_m.right} to 0.5 * sin({_rad})
		set {_loc.right} to location {_m.right} meters to the right of {_baseloc}
		set {_el} to {_baseloc}
		set (x-pos of {_el}) to ((x-pos of {_loc.upper}) + (x-pos of {_loc.right}) - (x-pos of {_el}))
		set (y-pos of {_el}) to ((y-pos of {_loc.upper}) + (y-pos of {_loc.right}) - (y-pos of {_el}))
		set (z-pos of {_el}) to ((z-pos of {_loc.upper}) + (z-pos of {_loc.right}) - (z-pos of {_el}))
		set {_circles::%{_rad}%} to {_el}
	# 回転中のギア
	set {_baserad} to 0
	loop 3 times:
		# 円
		loop {_circles::*}:
			spawnParticle_Dust(rgb(148, 108, 69), 0.5, loop-value-2)
			# ギア
			set {_angle} to loop-index parsed as number
			if mod({_angle} + 60, 60) is {_baserad}:
				set {_loc.gear} to loop-value-2
				set {_v} to setVector({_baseloc}, {_loc.gear})
				set yaw of {_loc.gear} to yaw of {_v}
				set pitch of {_loc.gear} to pitch of {_v}
				set {_m} to 0
				loop 5 times:
					add 0.1 to {_m}
					set {_el} to location {_m} meters in front of {_loc.gear}
					spawnParticle_Dust(rgb(148, 108, 69), 0.5, {_el})
		add 20 to {_baserad}
		wait a tick
	playSound("item.lodestone_compass.lock", 1, 0.5, {_baseloc})
	# 回転後のギア
	set {_baserad} to 0
	loop 3 times:
		# 円
		loop {_circles::*}:
			spawnParticle_Dust(rgb(148, 108, 69), 0.5, loop-value-2)
			# ギア
			set {_angle} to loop-index parsed as number
			if mod({_angle} + 60, 60) is {_baserad}:
				set {_loc.gear} to loop-value-2
				set {_v} to setVector({_baseloc}, {_loc.gear})
				set yaw of {_loc.gear} to yaw of {_v}
				set pitch of {_loc.gear} to pitch of {_v}
				set {_m} to 0
				loop 5 times:
					add 0.1 to {_m}
					set {_el} to location {_m} meters in front of {_loc.gear}
					spawnParticle_Dust(rgb(148, 108, 69), 0.5, {_el})
		wait a tick