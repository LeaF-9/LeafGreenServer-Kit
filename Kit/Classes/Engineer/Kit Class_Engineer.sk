# Weapons
function kitWeaponEngineer(player: player):
	set {_tool} to {_player}'s tool
	set {_item.num} to kitItemNumberChecker({_tool})
	checkCT({_player}, name of {_tool}) is true
	if {_item.num} is 4:
		kitWeapon_Engineer_4({_player})
	else if {_item.num} is 5:
		kitWeapon_Engineer_5({_player})

# Skills
function kitSkillEngineer(player: player) :: boolean:
	set {_tool} to {_player}'s tool
	set {_item.num} to kitItemNumberChecker({_tool})
	if checkCT({_player}, name of {_tool}) is true:
		if {Stats.%{_player}%::SkillLocation} is not set:
			send action bar "§c§l対象地点がありません" to {_player}
			return true
			stop
		set {_loc} to {Stats.%{_player}%::SkillLocation}
		if {_item.num} is 1:
			kitSkill_Engineer_1({_player}, {_loc})
		else if {_item.num} is 2:
			kitSkill_Engineer_2({_player}, {_loc})
		else if {_item.num} is 3:
			kitSkill_Engineer_3({_player}, {_loc})
		else if {_item.num} is 4:
			kitSkill_Engineer_4({_player}, {_loc})
		else if {_item.num} is 5:
			kitSkill_Engineer_5({_player}, {_loc})
		else if {_item.num} is 6:
			kitSkill_Engineer_6({_player}, {_loc})
		else if {_item.num} is 7:
			kitSkill_Engineer_7({_player}, {_loc})
		else if {_item.num} is 8:
			kitSkill_Engineer_8({_player}, {_loc})
	return true

on rightclick holding a coal:
	{Class::%player%} is "Engineer"
	name of player's tool contains "<##D70035>Dasher"
	set {_item} to player's tool
	cancel event
	if checkCT(player, name of tool of player) is true:
		if {Kit-Fuel::%player%} >= 10:
			setFuelCT(player)
			subtract 10 from {Kit-Fuel::%{_player}%}
			detectCT(player, {_item})
			apply speed 1 to player for 10 seconds
			kitMsg(player, "§e加速装置を使った!")
			make a fake explosion at player
			push player forward at speed 2

# Abilities
function checkFuel(player: player, num: number, type: text = "Skill") :: boolean:
	set {_tool} to {_player}'s tool
	if kitItemKitChecker({_tool}) is "Engineer":
		if kitItemTypeChecker({_tool}) is {_type}:
			if kitItemNumberChecker({_tool}) is {_num}:
				set {_fueltool} to {_tool}
	if {_fueltool} is not set:
		loop all items in {_player}'s inventory:
			kitItemKitChecker(loop-item) is "Engineer"
			kitItemTypeChecker(loop-item) is {_type}
			kitItemNumberChecker(loop-item) is {_num}
			set {_fueltool} to loop-item
	set {_lore::*} to lore of {_fueltool}
	loop {_lore::*}:
		loop-value contains "§8Fuel§7"
		set {_fuel} to loop-value
	replace every "§8Fuel§7: §4" with "" in {_fuel}
	set {_fuel} to {_fuel} parsed as number
	if {Kit-Fuel::%{_player}%} >= {_fuel}:
		setFuelCT({_player})
		subtract {_fuel} from {Kit-Fuel::%{_player}%}
		return true
	else:
		send action bar "§c§l燃料が不足しています!" to {_player}
		return false

function setFuelCT(player: player):
	if {Stats.%{_player}%::Fuel CT} is set:
		set {Stats.%{_player}%::Fuel CT} to 100
	else:
		set {Stats.%{_player}%::Fuel CT} to 100
		while {Stats.%{_player}%::Fuel CT} > 0:
			subtract 1 from {Stats.%{_player}%::Fuel CT}
			wait a tick
		delete {Stats.%{_player}%::Fuel CT}

# Timer
function kitTimerEngineer(player: player):
	set {_fuels} to 0
	create bossbar titled "&8&lFuel&7: &4&l%{Kit-Fuel::%{_player}%}%" and id "%{_player}%-Fuel" for {_player} with progress {Kit-Fuel::%{_player}%} with colors red with style segmented 10
	while {Class::%{_player}%} is "Engineer":
		# ツール情報の設定
		set {_tool} to {_player}'s tool
		set {_item.type} to kitItemTypeChecker({_tool})
		set {_item.num} to kitItemNumberChecker({_tool})
		# ループ回数の記録
		add 1 to {_fuels}
		# 燃料回復処理
		if mod({_fuels}, 2) = 0:
			set {_fuels} to 0
			if {Kit-Fuel::%{_player}%} < 100:
				if {Stats.%{_player}%::Fuel CT} is not set:
					add 1 to {Kit-Fuel::%{_player}%}
		# ボスバー表示
		set bossbar "%{_player}%-Fuel" title to "&8&lFuel&7: &4&l%{Kit-Fuel::%{_player}%}%"
		set bossbar "%{_player}%-Fuel" value to {Kit-Fuel::%{_player}%}
		# アクションバー表示
		if {_item.type} is "Weapon.main":
			if {_item.num} is 3:
				if {Stats.%{_player}%::GearyCog} is not set:
					set {Stats.%{_player}%::GearyCog} to true
				kitEffect_GearyCog_ActionBar({_player})
		# Hover効果
		delete {_true}
		if {_player} is sneaking:
			if block 0.1 meters below {_player} is passable:
				if {Kit-Fuel::%{_player}%} >= 1:
					set {_true} to true
					set {_hovering} to true
					setFuelCT({_player})
					subtract 1 from {Kit-Fuel::%{_player}%}
					apply levitation 1 to {_player} for 2 ticks
					playSound("block.fire.ambient", 0.8, 2, {_player})
					loop 3 times:
						set {_el} to aroundEffect({_player})
						spawnParticle(smoke, {_el})
		if {_player} has levitation:
			{_hovering} is true
			{_true} is not set
			delete {_hovering}
			remove levitation from {_player}
		wait a tick
	remove bossbar "%{_player}%-Fuel"