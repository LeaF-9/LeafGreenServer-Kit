# Sprite Talisman

options:
	effect-tick: 200



on damage of player with priority NORMAL:
	if {Stats.%victim%::SpriteTalisman} is set:
		set {_dmg} to damage - {Stats.%victim%::SpriteTalisman}
		if {_dmg} < 0:  # ゼロ以下になった場合はノックバックのみ
			set {_dmg} to 0
		setDamageModification_SET(victim, {_dmg})
		send action bar "§4❤%{Stats.%victim%::SpriteTalisman}%§cダメージ §aを§2§l吸収§aしました!" to victim
		set {Stats.%victim%::SpriteTalisman} to {Stats.%victim%::SpriteTalisman} - 0.5
		if {Stats.%victim%::SpriteTalisman} <= 0:  # ダメージ減衰の効果終了時
			kitEffect_SpriteTalisman_Explode(victim)
		kitParticle_SpriteTalisman_Damage(victim)

function kitSkill_Paladin_4(player: player):
	toolCT({_player}, "Paladin", 4)
	kitEffect_SpriteTalisman({_player})



local function kitEffect_SpriteTalisman(player: player):
	set {_now} to now
	kitMsg({_player}, "<##65ab31>守護の力を分け与えます...")
	kitParticle_SpriteTalisman_Launch({_player})
	loop all players in radius 10 around {_player}:
		kitCheckTeam(loop-player, {_player}, true) is true
		setSupporter(loop-player, {_player})
		message formatted "<##c6ff4a>ダメージを受け持つ<##98ff4a>守護の妖精<##c6ff4a>が付与された!" to loop-player
		sendTimeBossbar_GREEN(loop-player, "<##98ff4a>§l守護の妖精", {@effect-tick})
		set {Stats.%loop-player%::SpriteTalisman} to 2.5
		set {Stats.%loop-player%::SpriteTalisman-Time} to {_now}
		kitParticle_SpriteTalisman_Apply(loop-player)
		kitParticle_SpriteTalisman_Aura(loop-player)

	loop {@effect-tick} times:
		wait a tick
	
	loop all players:
		{Stats.%loop-player%::SpriteTalisman-Time} is {_now}
		delete {Stats.%loop-player%::SpriteTalisman}
		delete {Stats.%loop-player%::SpriteTalisman-Time}
		message formatted "<##98ff4a>守護の妖精<##1d6e1b>は去っていきました..." to loop-player

# 効果終了時
local function kitEffect_SpriteTalisman_Explode(player: player):
	kitParticle_SpriteTalisman_Explode({_player})
	delete {Stats.%{_player}%::SpriteTalisman}
	delete {Stats.%{_player}%::SpriteTalisman-Time}
	message formatted "<##005243>守護の妖精は役割を終えました..." to {_player}

local function kitParticle_SpriteTalisman_Explode(player: player):
	playSound("entity.allay.death", 1, 0.9, {_player})
	set {_baseloc} to location 1 meter above {_player}
	# でかい爆発
	loop 30 times:
		spawnParticle_Vector(glow_squid_ink, randomVector(1), 0.5, {_baseloc})
	# 小さいキラキラ爆発
	loop 10 times:
		spawnParticle_Vector(glow, randomVector(), 0.3, {_baseloc})

local function kitParticle_SpriteTalisman_Launch(player: player):
	playSound("entity.allay.item_given", 1, 0.65, {_player})
	set {_loc} to location of {_player}
	set {_vector} to {_loc}
#	座標の設定　主軸{_loc}{_w}{_vw}
	set {_x} to x-coordinate of {_loc}
	set {_y} to y-coordinate of {_loc} + 0.2
	set {_z} to z-coordinate of {_loc}
#	軸の設定　座標{_A}{_vwA}
	set {_A} to {_loc}
	set {_vyA} to 0
	set pitch of {_A} to 0
	set {_vxA1} to location 1 meters to the right of {_A}
	set {_vzA1} to location 1 meters in front of {_A}
#	方向ベクトル{_vwnw}
	set {_vxnx} to x-coordinate of {_vxA1} - {_x}
	set {_vxnz} to z-coordinate of {_vxA1} - {_z}
	set {_vznx} to x-coordinate of {_vzA1} - {_x}
	set {_vznz} to z-coordinate of {_vzA1} - {_z}
#	発動直後の耐性付与演出ty平面でy=2-0.02t^2
	set {_t} to 0
	loop 10 times:
		set {_ax} to {_vxnx} * cos({_t}) + {_vznx} * sin({_t})
		set {_az} to {_vxnz} * cos({_t}) + {_vznz} * sin({_t})
		set {_s} to 0
		loop 10 times:
			set x-coordinate of {_vector} to {_x} + {_ax} * {_s}
			set y-coordinate of {_vector} to {_y} + 2 - 0.02 * {_s} ^ 2
			set z-coordinate of {_vector} to {_z} + {_az} * {_s}
			spawnParticle_Dust(rgb(192, 255, 192), 2, {_vector})
			add 1 to {_s}
		set {_s} to 0
		loop 5 times:
			set {_ax} to {_vxnx} * cos({_s} + {_t} * 0.5) + {_vznx} * sin({_s} + {_t} * 0.5)
			set {_az} to {_vxnz} * cos({_s} + {_t} * 0.5) + {_vznz} * sin({_s} + {_t} * 0.5)
			set x-coordinate of {_vector} to {_x} + {_ax} * 10
			set y-coordinate of {_vector} to {_y} - {_t} * 0.02
			set z-coordinate of {_vector} to {_z} + {_az} * 10
			spawnParticle_Dust(rgb(160, 255, 160), 1.1, {_vector})
			add 72 to {_s}
		add 36 to {_t}
		wait a tick

local function kitParticle_SpriteTalisman_Apply(player: player):
	playSound("entity.allay.ambient_with_item", 1, 0.9, {_player})
	set {_efflocs::*} to particleLocation_Spiral(location of {_player}, 10, 0.5, 0.5, 2)
	set {_num} to 0
	loop {_efflocs::*}:
		spawnParticle_Dust(rgb(140, 255, 190), 0.5, loop-value)
		add 1 to {_num}
		if mod({_num}, 8) is 0:
			wait a tick

local function kitParticle_SpriteTalisman_Aura(player: player):
	set {_now} to {Stats.%{_player}%::SpriteTalisman-Time}
	loop {@effect-tick} times:
		if {Stats.%{_player}%::SpriteTalisman-TIme} is not {_now}:
			stop

		set {_loc} to location of {_player}
		set {_vector} to {_loc}
#		座標の設定　主軸{_loc}{_w}{_vw}
		set {_x} to x-coordinate of {_loc}
		set {_y} to y-coordinate of {_loc} + 0.2
		set {_z} to z-coordinate of {_loc}
#		軸の設定　座標{_A}{_vwA}
		set {_A} to {_loc}
		set {_vyA} to 0
		set pitch of {_A} to 0
		set {_vxA1} to location 1 meters to the right of {_A}
		set {_vzA1} to location 1 meters in front of {_A}
#		方向ベクトル{_vwnw}
		set {_vxnx} to x-coordinate of {_vxA1} - {_x}
		set {_vxnz} to z-coordinate of {_vxA1} - {_z}
		set {_vznx} to x-coordinate of {_vzA1} - {_x}
		set {_vznz} to z-coordinate of {_vzA1} - {_z}
		set {_s} to a random number between 0 and 360
		set {_t} to a random number between -1 and 1
		set {_ax} to ({_vxnx} * cos({_s}) + {_vznx} * sin({_s})) * 1.2
		set {_az} to ({_vxnz} * cos({_s}) + {_vznz} * sin({_s})) * 1.2
		set x-coordinate of {_vector} to {_x} + {_ax}
		set y-coordinate of {_vector} to {_y} + {_t}
		set z-coordinate of {_vector} to {_z} + {_az}
		spawnParticle_Dust(rgb(160, 255, 160), 2, {_vector})
		wait a tick

local function kitParticle_SpriteTalisman_Damage(player: player):
	playSound("entity.allay.hurt", 1, 0.8, {_player})
	set {_loc} to location of {_player}
	set {_x} to x-coordinate of {_loc}
	set {_y} to y-coordinate of {_loc} + 0.7
	set {_z} to z-coordinate of {_loc}
	loop 3 times:
		set {_s} to a random number between -2 and 2
		set {_t} to a random number between -0.7 and 0.7
		set {_u} to a random number between -2 and 2
		set {_p} to 0
		loop 5 times:
			add 0.2 to {_p}
			set x-coordinate of {_vector} to {_x} + {_s} * {_p}
			set y-coordinate of {_vector} to {_y} + {_t} * {_p}
			set z-coordinate of {_vector} to {_z} + {_u} * {_p}
			spawnParticle_Dust(rgb(192, 255, 192), 0.95, {_vector})
		wait a tick
