# Ambushのスキル Ver1.0.0

# Weapons
function kitWeapon_Ambush_1(player: player):
	kitEffect_Scyclone({_player})

function kitWeapon_Ambush_2(player: player):
	kitEffect_AeroBlade({_player})

# function kitWeapon_Ambush_3(player: player):
# 	kitEffect_SilentReaper({_player})

# Skills
function kitSkill_Ambush_1(player: player):
	kitEffect_SmokeBomb({_player})

function kitSkill_Ambush_2(player: player):
	kitEffect_SwiftSlay({_player})

function kitSkill_Ambush_3(player: player):
	kitEffect_LatentEscape({_player})

function kitSkill_Ambush_4(player: player):
	kitEffect_DarkTravel({_player})

function kitSkill_Ambush_5(player: player):
	kitEffect_FlashLight({_player})

function kitSkill_Ambush_6(player: player):
	kitEffect_BlindDome({_player})

function kitSkill_Ambush_7(player: player):
	kitEffect_ParanoidOrb({_player})

function kitSkill_Ambush_8(player: player):
	kitEffect_FakeDecease({_player})

# Passive
options:
	metadata-spyaction: "Spy Action - Active"
	spyaction-sneaktime: 20
	spyaction-limitmeter: 10
	metadata-stealthbehavior-damage: "Stealth Behavior - Damage"

# Spy Action
on sneak toggle:
	{Class::%player%} is "Ambush"
	metadata value "gametype" of player is "Kit"
	# 解除処理
	if player is sneaking:
		if metadata value {@metadata-spyaction} of player is true:
			kitEffect_SpyAction_Reveal(player)
		stop

	# 発動処理
	stop if getInvisibleStatus(player) is true
	kitEffect_SpyAction(player)

local function kitEffect_SpyAction(player: player):
	kitMsg({_player}, "§7身を潜める準備をします...")

	set {_baseloc} to location of {_player}
	set {_ln} to 0
	loop {@spyaction-sneaktime} times:
		wait a tick

		if {_player} is not sneaking:
			kitMsg({_player}, "§c§lスニークを解除した為,潜伏できませんでした...")
			kitSound_SpyAction_Cancel({_player})
			stop
		set {_nowloc} to location of {_player}
		set yaw of {_nowloc} to yaw of {_baseloc}
		set pitch of {_nowloc} to pitch of {_baseloc}
		if {_nowloc} is not {_baseloc}:
			kitMsg({_player}, "§c§l準備中に動いた為,潜伏できませんでした...")
			kitSound_SpyAction_Cancel({_player})
			stop

		add 1 to {_ln}
		kitParticle_SpyAction_Prepare({_player}, {_ln})
	
	set metadata value {@metadata-spyaction} of {_player} to true
	set {_spyaction.location} to location of {_player}

	kitMsg({_player}, "§8§l§o潜伏が成功しました...")
	kitParticle_SpyAction_Active({_player})

	kitInvisible({_player}, 3)
	wait a tick
	set {_active} to true
	while {_active} is true:
		if getInvisibleRemains({_player}) > 3:
			delete metadata value {@metadata-spyaction} of {_player}
			removeInvisible({_player})
		
		if getInvisibleStatus({_player}) is false:
			delete metadata value {@metadata-spyaction} of {_player}
		
		if metadata value {@metadata-spyaction} of {_player} is not set:
			delete {_active}
			stop
		
		set {_loc.now} to location of {_player}
		set {_distance.now} to distance between {_spyaction.location} and {_loc.now}
		add {_distance.now} to {_spyaction.distance}
		set {_spyaction.location} to {_loc.now}
		# キャンセル処理
		if {_spyaction.distance} >= {@spyaction-limitmeter}:
			removeInvisible({_player})
			delete metadata value {@metadata-spyaction} of {_player}
			kitMsg({_player}, "§c§l動きすぎた! §3§o潜伏が明らかになってしまった...!")
			kitParticle_SpyAction_Reveal({_player})
			stop
		
		kitInvisible({_player}, 3)
		send action bar "§7§l§o潜伏中です..." to {_player}
		wait a tick

local function kitEffect_SpyAction_Reveal(player: player):
	removeInvisible({_player})
	delete metadata value {@metadata-spyaction} of {_player}
	kitMsg({_player}, "§b潜伏を解除しました")
	kitParticle_SpyAction_Reveal({_player})



# Spy Action準備中の演出 下からぐいーんと上がってくる感じ
local function kitParticle_SpyAction_Prepare(player: player, tick: number):
	set {_baseloc} to location of {_player}

	add rgb(234, 234, 234) to {_colors::*}
	add rgb(139, 152, 157) to {_colors::*}
	add rgb(181, 192, 193) to {_colors::*}
	set {_color.transition} to rgb(123, 123, 123)

	set {_addy} to {_tick} / 10
	add {_addy} to y-pos of {_baseloc}
	set {_baserad} to 30 * {_tick}
	
	set {_count} to 8
	set {_addrad} to 360 / {_count}

	set {_basevec} to vector(0.5, 0, 0)
	set {_ln} to 0
	loop {_count} times:
		add 1 to {_ln}
		set {_rad} to {_baserad} + ({_addrad} * {_ln})

		set {_rotatevec} to {_basevec}
		rotate {_rotatevec} around y-axis by {_rad}

		set {_el} to {_baseloc} ~ {_rotatevec}
		set {_color} to a random element out of {_colors::*}
		spawnParticle_DustTransition({_color}, {_color.transition}, 1, {_el})


# Spy Action発動の演出
local function kitParticle_SpyAction_Active(player: player):
	playSound("entity.wither.shoot", 3, 1.75, {_player})
	set {_baseloc} to location 1 meter above {_player}
	
	set {_count} to 30
	loop {_count} times:
		set {_el} to moveRandomLocation({_baseloc}, 1)
		spawnParticle(wax_off, {_el}, {_player})

# Spy Action解除時の演出
local function kitParticle_SpyAction_Reveal(player: player):
	set {_baseloc} to location 1 meter above {_player}
	
	set {_count} to 30
	loop {_count} times:
		set {_el} to moveRandomLocation({_baseloc}, 1)
		set {_vec} to randomVector()
		spawnParticle_Vector(firework, {_vec}, 1, {_el}, {_player})



local function kitSound_SpyAction_Cancel(player: player):
	playSound("item.shield.break", 1, 1.3, {_player}, true)


on damage of player:
	{Class::%victim%} is "Ambush"
	metadata value "gametype" of victim is "Kit"
	set {_now} to now
	set metadata value {@metadata-stealthbehavior-damage} of victim to {_now}

# Timer
function kitTimerAmbush(player: player):
	while {Class::%{_player}%} is "Ambush":
		set {_spyaction} to metadata value {@metadata-spyaction} of {_player}
		if {_spyaction} is true:
			wait a tick
			continue

		# Shadow Body
		delete {_shadowbody.active}
		if getInvisibleStatus({_player}) is true:
			set {_shadowbody.true} to true
			applyEffect({_player}, speed, 2, 5 ticks, true)
		
		if {_player} has glowing:
			set {_shadowbody.timer} to 20 if {_shadowbody.timer} is not set

			add 1 to {_shadowbody.timer}
			if {_shadowbody.timer} >= 20:
				set {_shadowbody} to 0
				damage {_player} by 0.5 hearts

		# Stealth Behavior
		if {_shadowbody.active} is set:
			wait a tick
			continue

		set {_now} to now
		set {_stealthbehavior.damage} to metadata value {@metadata-stealthbehavior-damage} of {_player}
		set {_stealthbehavior.timedif} to difference between {_stealthbehavior.damage} and {_now}
		set {_stealthbehavior.timedif} to 100 seconds if {_stealthbehavior.damage} is not set


		if {_stealthbehavior.timedif} <= 10 seconds:
			wait a tick
			continue
		
		{_player} does not have glowing
		set {_stealthbehavior.pop} to 0
		loop all players in radius 10 around {_player}:
			kitCheckTeam({_player}, loop-player, false, true) is true
			add 1 to {_stealthbehavior.pop}

		if {_stealthbehavior.pop} is not 0:
			set metadata value {@metadata-stealthbehavior-damage} of {_player} to {_now}
			wait a tick
			continue

		# Stealth Behavior実行
		kitInvisible({_player}, 3)
		send action bar "§7§l§o潜伏中です..." to {_player}

		wait a tick