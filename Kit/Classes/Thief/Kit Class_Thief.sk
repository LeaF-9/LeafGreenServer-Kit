# Thiefのスキル Ver1.0.0

# Weapons
function kitWeaponThief(player: player):
	set {_tool} to {_player}'s tool
	set {_item.num} to kitItemNumberChecker({_tool})
	checkCT({_player}, name of {_tool}) is true
	if {_item.num} is 2:
		kitWeapon_Thief_2({_player})

# Skills
function kitSkillThief(player: player) :: boolean:
	set {_tool} to {_player}'s tool
	set {_item.num} to kitItemNumberChecker({_tool})
	if checkCT({_player}, name of {_tool}) is true:
		if {_item.num} is 1:
			kitSkill_Thief_1({_player})
			return true
		else if {_item.num} is 2:
			kitSkill_Thief_2({_player})
			return true
		else if {_item.num} is 3:
			kitSkill_Thief_3({_player})
			return true
		else if {_item.num} is 4:
			kitSkill_Thief_4({_player})
			return true
		else if {_item.num} is 5:
			kitSkill_Thief_5({_player})
			return false
		else if {_item.num} is 6:
			kitSkill_Thief_6({_player})
			return true
		else if {_item.num} is 7:
			kitSkill_Thief_7({_player})
			return true
		else if {_item.num} is 8:
			kitSkill_Thief_8({_player})
			return true

on drop:
	{Class::%player%} is "Thief"
	set {_item} to event-item
	set {_nbt} to nbt compound of {_item}
	set {_tag} to string tag "stolen" of {_nbt}
	if {_tag} is not set:
		stop
	loop {StealItem-%{_tag}%.%player%::*}:
		loop-value is {_item}
		set {_index} to loop-index parsed as number + 1
	if {StealItem-%{_tag}%.%player%::%{_index}%} is not set:
		set {_index} to 1
	playSound("entity.experience_orb.pickup", 1, 1.65, player, true)
	send action bar "§b§lスキルを変更しました!" to player
	wait a tick
	player's tool is event-item
	remove event-item from player
	give {StealItem-%{_tag}%.%player%::%{_index}%} to player

# Abilities

on pick up:
	{Class::%player%} is "Thief"
	set {_attacker} to metadata value "Jewelry" of event-dropped item
	if {_attacker} is not set:
		stop
	if kitCheckTeam({_attacker}, player, true) is true:
		stop
	
	delete event-dropped item
	applyEffect(player, strength, 1, 5 seconds)
	applyEffect(player, regeneration, 1, 5 seconds)
	playSound("entity.experience_orb.pickup", 1, 2, player)
	message formatted "§eおっと! §6§lお宝§eだ!" to player
	kitEffectDescription(player, "§a§l攻撃力上昇 §8& §a§l再生能力")
	sendTimeBossbar_GREEN(player, "Gem Bounty", 100)

# --- Stealed Item管理 ---
on inventory click:
	metadata value "gametype" of player is "Kit"
	type of event-inventory is chest inventory
	# --- Skill 6 ---
	if inventory name of event-inventory is "§6§lSkin Scanner":
		cancel event
		set {_playeritem} to clicked item
		{_playeritem} is set
		"%type of {_playeritem}%" is not "air"
		set {_target} to display name of {_playeritem}
		replace "§f§l" with "" in {_target}
		set {_target} to {_target} parsed as player
		kitSetSkinScanner(player, {_target})
		close player's inventory
	# ---------------
	# --- Skill 8 ---
	else if inventory name of event-inventory is "§d§lFence Marker":
		cancel event
		kitEffect_FenceMarker_Click(player, clicked item)
		close player's inventory
	# -----------------
# -----------------------

on damage of player:
	damage was caused by fall
	{Class::%victim%} is "Thief"
	cancel event

# Timer
function kitTimerThief(player: player):
	set {_wn} to kitSelectChecker_Weapon({_player}, "Thief")
	if {_wn} is not 2:
		stop
	set {Stats.%{_player}%::GemStinger} to 0
	create bossbar titled "&a&lGem Bullets&e: &2&l%{Stats.%{_player}%::GemStinger}%" and id "%{_player}%-GemStinger" for {_player} with progress {Stats.%{_player}%::GemStinger} with colors green with style segmented 10
	while {Class::%{_player}%} is "Thief":
		set bossbar "%{_player}%-GemStinger" title to "&a&lGem Bullets&e: &2&l%{Stats.%{_player}%::GemStinger}%"
		set bossbar "%{_player}%-GemStinger" value to {Stats.%{_player}%::GemStinger}
		wait a second
	remove bossbar "%{_player}%-GemStinger"