# Thiefのスキル Ver1.0.0

# Weapons
function kitWeaponThief(player: player):
	set {_tool} to {_player}'s tool
	set {_item.num} to kitItemNumberChecker({_tool})
	checkCT({_player}, name of {_player}'s tool) is true
	if {_item.num} is 2:
		kitWeapon_Thief_2({_player})
	else if {_item.num} is 3:
		if {_player} is sneaking:
			kitWeapon_Thief_3({_player})
	else if {_item.num} is 4:
		kitWeapon_Thief_4({_player})
	else if {_item.num} is 5:
		kitWeapon_Thief_5({_player})

# Skills
function kitSkillThief(player: player) :: boolean:
	set {_tool} to {_player}'s tool
	set {_item.num} to kitItemNumberChecker({_tool})
	if checkCT({_player}, name of {_player}'s tool) is true:
		if {_item.num} is 1:
			kitSkill_Thief_1({_player})
			return true
		else if {_item.num} is 2:
			kitSkill_Thief_2({_player})
			return true
		else if {_item.num} is 3:
			kitSkill_Thief_3({_player})
			return true
		else if {_item.num} is 4:
			kitSkill_Thief_4({_player})
			return true
		else if {_item.num} is 5:
			kitSkill_Thief_5({_player})
			return false
		else if {_item.num} is 6:
			kitSkill_Thief_6({_player})
			return true
		else if {_item.num} is 7:
			kitSkill_Thief_7({_player})
			return true
		else if {_item.num} is 8:
			kitSkill_Thief_8({_player})
			return true

# Abilities

# --- Stealed Item管理 ---
on inventory click:
	metadata value "gametype" of player is "Kit"
	type of event-inventory is chest inventory
	if inventory name of event-inventory contains "§e§lLoot Item§8:":
		cancel event
		set {_skill} to clicked item
		{_skill} is set
		"%type of {_skill}%" is not "air"
		if kitItemKitChecker({_skill}) is not "Thief":
			set {_inv} to inventory name of event-inventory
			replace "§e§lLoot Item§8: §6" with "" in {_inv}
			if {Stats.%player%::Stealing.%{_inv}%} is true:
				set {Stats.%player%::UsingSteal.%{_inv}%} to true
				delete {Stats.%player%::Stealing.%{_inv}%}
				delete {StealItem-%{_inv}%.%player%::*}
				loop all items in player's inventory:
					name of loop-item contains "%{_inv}%"
					name of loop-item contains "§b[§eloot§b]"
					set {_lootitem} to loop-item
				remove {_lootitem} from player
				give {_skill} to player
				kitItemTargetTimer(player, {_skill})
				kitMsg(player, "§b選択スキルを§6§l獲得§bしました!")
				close player's inventory
				wait 10 seconds
				if {Stats.%player%::UsingSteal.%{_inv}%} is true:
					delete {Stats.%player%::UsingSteal.%{_inv}%}
					if {_inv} is "Perfect Steal":
						set {_skillnum} to 3
					else if {_inv} is "Job Switch":
						set {_skillnum} to 5
					else if {_inv} is "Theft Declaration":
						set {_skillnum} to 7
					set {_return} to kitSkillItem("Thief", {_skillnum})
					set {_return} to kitItemTagChanger({_return}, "Thief", "Skill", {_skillnum})
					remove {_skill} from player
					give {_return} to player
			else:
				kitMsg(player, "§c§l既にスキルを返却済です!")
		else:
			kitMsg(player, "§c§lThiefのスキルを盗むことは出来ません!")
	# --- Skill 6 ---
	else if inventory name of event-inventory is "§6§lSkin Scanner":
		cancel event
		set {_playeritem} to clicked item
		{_playeritem} is set
		"%type of {_playeritem}%" is not "air"
		set {_target} to display name of {_playeritem}
		replace "§f§l" with "" in {_target}
		set {_target} to {_target} parsed as player
		kitSetSkinScanner(player, {_target})
		close player's inventory
	# ---------------
	# --- Skill 8 ---
	else if inventory name of event-inventory is "§d§lFence Marker":
		cancel event
		if {Stats.%player%::FenceMarker} is set:
			set {_fakeskill} to clicked item
			{_fakeskill} is set
			"%type of {_fakeskill}%" is not "air"
			close player's inventory
			set {_lore::*} to lore of {_fakeskill}
			loop {_lore::*}:
				if loop-value contains "§6所持者§7: §e":
					set {_target} to loop-value
					replace "§6所持者§7: §e" with "" in {_target}
					set {_target} to {_target} parsed as player
				else if loop-value contains "§6キット§7: §e":
					set {_type} to loop-value
					replace "§6キット§7: §e" with "" in {_type}
				else if loop-value contains "§6ナンバー§7: §e":
					set {_skillnum} to loop-value
					replace "§6ナンバー§7: §e" with "" in {_skillnum}
					set {_skillnum} to {_skillnum} parsed as number
			set {_skill} to kitPlayerSkillItem({_target}, {_type}, {_skillnum})
			if {_target}'s inventory contains {_skill}:
				kitItemTargetTimer(player, {_skill})
				kitMsg(player, "§8Fence Marker§dより §a%display name of {_skill}% §dを強奪した!")
				message formatted "§a%display name of {_skill}% §1を奪われた!" to {_target}
				playSound("entity.item.pickup", 1, 0.5, player)
				playSound("entity.witch.drink", 1, 0.9, {Stats.%player%::FenceMarker})
				set {_from} to {Stats.%player%::FenceMarker}
				set {_to} to location of head of {_target}
				set {_vector} to setVector({_from}, {_to})
				set yaw of {_from} to yaw of {_vector}
				set pitch of {_from} to pitch of {_vector}
				set {_dis} to round(distance between {_from} and {_to})
				loop {_dis} times:
					set {_el} to location loop-number meters in front of {_from}
					drawDot count 1, particle "smoke", center {_el}, visibleRange 30
				loop all items in player's inventory:
					{_deleted} is not set
					kitItemAllChecker(loop-item, "Thief", "Skill", 8) is true
					set {_deleted} to true
					set {_tool} to loop-item
					remove loop-item from player
				set {Stats.%player%::Stealing.Fence Marker} to true
				set {Stats.%{_target}%::Stealed.Fence Marker} to true
				give {_skill} to player
				remove all {_skill} from {_target}
				wait 10 seconds
				if {Stats.%player%::Stealing.Fence Marker} is true:
					remove {_skill} from player
					give {_tool} to player
					delete {Stats.%player%::Stealing.Fence Marker}
				if {Stats.%{_target}%::Stealed.Fence Marker} is true:
					give {_skill} to {_target}
					delete {Stats.%{_target}%::Stealed.Fence Marker}
			else:
				send action bar "§c§l既にそのプレイヤーはスキルを所持していません!" to player
		else:
			send action bar "§c§l既にマーカーが破壊されています!" to player
	# -----------------

function kitStealItem(player: player, inv: text):
	wait a tick
	open chest with 3 row named "§e§lLoot Item§8: §6%{_inv}%" to {_player}
	wait a tick
	set {_slot} to 0
	loop {StealItem-%{_inv}%.%{_player}%::*}:
		set slot {_slot} of {_player}'s current inventory to loop-value
		add 1 to {_slot}
# -----------------------

on damage of player:
	if damage was caused by fall:
		{CLS::%victim%} is "THI"
		cancel event

# Timer
function kitTimerThief(player: player):
	set {_timer} to 0
	while {Class::%{_player}%} is "Thief":
		set {_tool} to {_player}'s tool
		add 1 to {_timer}
		if kitItemTypeChecker({_tool}) is "Weapon.main":
			if kitItemNumberChecker({_tool}) is not 5:
				stop
		if {_timer} > 30:
			set {_timer} to 0
		wait a second