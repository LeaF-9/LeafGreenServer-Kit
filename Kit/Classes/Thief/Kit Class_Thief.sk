# Thiefのスキル Ver1.0.0

# Skills
on drop:
	{Class::%player%} is "Thief"
	set {_item} to event-item
	set {_tag} to getNamespacedKey({_item}, "stolen", "string")
	if {_tag} is not set:
		stop
	loop {StealItem-%{_tag}%.%player%::*}:
		loop-value is {_item}
		set {_index} to loop-index parsed as number + 1
	if {StealItem-%{_tag}%.%player%::%{_index}%} is not set:
		set {_index} to 1
	playSound("entity.experience_orb.pickup", 1, 1.65, player, true)
	send action bar "§b§lスキルを変更しました!" to player
	wait a tick
	player's tool is event-item
	remove event-item from player
	give {StealItem-%{_tag}%.%player%::%{_index}%} to player

# Abilities

on pick up:
	{Class::%player%} is "Thief"
	set {_attacker} to metadata value "Jewelry" of event-dropped item
	if {_attacker} is not set:
		stop
	if kitCheckTeam({_attacker}, player, true) is true:
		stop
	
	delete event-dropped item
	applyEffect(player, strength, 1, 100)
	applyEffect(player, regeneration, 1, 100)
	playSound("entity.experience_orb.pickup", 1, 2, player)
	message formatted "§eおっと! §6§lお宝§eだ!" to player
	kitEffectDescription(player, "§a§l攻撃力上昇 §8& §a§l再生能力")
	sendTimeBossbar_GREEN(player, "Gem Bounty", 100)
	kitParticle_GemBounty(player)

local function kitParticle_GemBounty(player: player):
	set {_baseloc} to location 1 meters above {_player}

	loop 15 times:
		set {_el} to moveRandomLocation({_baseloc}, 1.5)
		set {_d} to dice(4)
		if {_d} is 1:
			spawnParticle(composter, {_el})
		else if {_d} is 2:
			spawnParticle(scrape, {_el})
		else if {_d} is 3:
			spawnParticle(wax_on, {_el})
		else:
			spawnParticle(wax_off, {_el})


# --- Stealed Item管理 ---
on inventory click:
	metadata value "gametype" of player is "Kit"
	type of event-inventory is chest inventory
	# --- Skill 6 ---
	if name of event-inventory is "§6§lSkin Scanner":
		cancel event
		set {_playeritem} to event-item
		{_playeritem} is set
		"%type of {_playeritem}%" is not "air"
		set {_target} to display name of {_playeritem}
		replace "§f§l" with "" in {_target}
		set {_target} to {_target} parsed as player
		kitSetSkinScanner(player, {_target})
		close player's inventory
	# ---------------
	# --- Skill 8 ---
	else if name of event-inventory is "§d§lFence Marker":
		cancel event
		kitEffect_FenceMarker_Click(player, event-item)
		close player's inventory
	# -----------------
# -----------------------

on damage of player:
	damage was caused by fall
	{Class::%victim%} is "Thief"
	cancel event

# Timer
function kitTimerThief(player: player):
	set {_wn} to kitSelectChecker_Weapon({_player}, "Thief")
	if {_wn} is not 2:
		stop
	setKitStats({_player}, "GemStinger", 0)
	create bossbar titled "&a&lGem Bullets&e: &2&l0" and id "%{_player}%-GemStinger" for {_player} with progress 0 with colors green with style segmented 10
	while {Class::%{_player}%} is "Thief":
		set {_GemStinger} to getKitStats({_player}, "GemStinger")
		set bossbar "%{_player}%-GemStinger" title to "&a&lGem Bullets&e: &2&l%{_GemStinger}%"
		set bossbar "%{_player}%-GemStinger" value to {_GemStinger}
		wait a second
	remove bossbar "%{_player}%-GemStinger"