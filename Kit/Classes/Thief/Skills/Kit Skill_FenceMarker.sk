# Fence Marker

function kitEffect_FenceMarker(player: player):
	set {_SkillLocation} to getKitStats({_player}, "SkillLocation")
	if {_SkillLocation} is not set:
		send action bar "§c§l発動地点が有効ではありません!" to {_player}
		stop

	nameCT({_player}, "Fence Marker")
	set {_now} to now
	setKitStats({_player}, "FenceMarker-Time", {_now})
	kitFakeDeleteData({_player}, "Fence Marker")
	set {_loc.base} to {_SkillLocation}

	set {_rotation} to getQuaternionf(0, 0, 0, 1)
	set {_translation} to getVector3f(-0.5, 0, -0.5)
	set {_scale} to getVector3f(1, 1, 1)
	set {_transformation} to getTransformation({_rotation}, {_rotation}, {_translation}, {_scale})
	set {_block} to getBlockData(end rod)
	kitFakeBlock({_player}, {_loc.base}, {_block}, {_transformation}, "Fence Marker")
	set {_loc.top} to location 1 meter above {_loc.base}

	set {_block} to getBlockData(dead fire coral fan)
	kitFakeBlock({_player}, {_loc.top}, {_block}, {_transformation}, "Fence Marker")
	setKitStats({_player}, "FenceMarker", {_loc.top})
	kitMsg({_player}, "§7盗品売買所§5を設置しました...")
	playSound("entity.witch.celebrate", 1, 0.9, {_loc.base})
	while getKitStats({_player}, "FenceMarker-Time") is {_now}:
		wait a second
		set {_exist} to kitFakeCheck({_player}, "Fence Marker")
		if {_exist} is false:
			deleteKitStats({_player}, "FenceMarker")
			deleteKitStats({_player}, "FenceMarker-Time")

on leftclick holding an end rod:
	metadata value "gametype" of player is "Kit"
	set {_tool} to player's tool
	kitItemAllChecker({_tool}, "Thief", "Skill", 8) is true
	set {_FenceMarker} to getKitStats(player, "FenceMarker")
	if {_FenceMarker} is set:
		open chest with 3 row named "§d§lFence Marker" to player
		wait a tick
		loop all players in radius 15 around {_FenceMarker}:
			kitCheckTeam(loop-player, player, false, true) is true
			{Class::%loop-player%} is not "Thief"
			if {Class::%loop-player%} is "Werewolf":
				if getKitStats(loop-player, "Instinct") is true:
					set {_type} to "Werewolf_Instinct"
				else:
					set {_type} to {Class::%loop-player%}
			else if {Class::%loop-player%} is "Vampire":
				if getKitStats(loop-player, "BatMode") is true:
					set {_type} to "Vampire_Bat"
				else:
					set {_type} to {Class::%loop-player%}
			else:
				set {_type} to {Class::%loop-player%}
			set {_num} to 0
			loop 3 times:
				add 1 to {_num}
				set {_skill} to kitPlayerSkillItem(loop-player, {_type}, {_num})
				if loop-player's inventory contains {_skill}:
					set {_lore::*} to lore of {_skill}
					add "§5§m------------------------------" to {_lore::*}
					add "§f[§b§lスキル情報§f]" to {_lore::*}
					add "§6所持者§7: §e%loop-player%" to {_lore::*}
					add "§6キット§7: §e%{_type}%" to {_lore::*}
					add "§6ナンバー§7: §e%{_num}%" to {_lore::*}
					set lore of {_skill} to {_lore::*}
					add {_skill} to {_skills::*}
		set {_slot} to 0
		loop {_skills::*}:
			set slot {_slot} of player's current inventory to loop-value
			add 1 to {_slot}
	else:
		send action bar "§c§lマーカーを設置してください!" to player



function kitEffect_FenceMarker_Click(player: player, fakeskill: item):
	if getKitStats({_player}, "FenceMarker") is not set:
		send action bar "§c§l既にマーカーが破壊されています!" to {_player}
		stop

	if "%type of {_fakeskill}%" is "air":
		stop
	
	set {_lore::*} to lore of {_fakeskill}
	loop {_lore::*}:
		if loop-value contains "§6所持者§7: §e":
			set {_target} to loop-value
			replace "§6所持者§7: §e" with "" in {_target}
			set {_target} to {_target} parsed as player
		else if loop-value contains "§6キット§7: §e":
			set {_type} to loop-value
			replace "§6キット§7: §e" with "" in {_type}
		else if loop-value contains "§6ナンバー§7: §e":
			set {_skillnum} to loop-value
			replace "§6ナンバー§7: §e" with "" in {_skillnum}
			set {_skillnum} to {_skillnum} parsed as number
	set {_skill} to kitPlayerSkillItem({_target}, {_type}, {_skillnum})
	if {_target}'s inventory does not contain {_skill}:
		send action bar "§c§l既にそのプレイヤーはスキルを所持していません!" to {_player}
		stop

	kitMsg({_player}, "§8Fence Marker§dより §a%display name of {_skill}% §dを強奪した!")
	message formatted "§a%display name of {_skill}% §1を奪われた!" to {_target}
	kitEffectDescription({_target}, "§7§l窃盗")
	sendTimeBossbar_GREEN({_player}, "Fence Marker", 200)
	sendTimeBossbar_RED({_target}, "§7§l窃盗", 200)
	set {_FenceMarker} to getKitStats({_player}, "FenceMarker")
	playSound("entity.item.pickup", 1, 0.5, {_player})
	playSound("entity.witch.drink", 1, 0.9, {_FenceMarker})
	set {_from} to {_FenceMarker}
	set {_to} to location of head of {_target}
	set {_vector} to setVector({_from}, {_to})
	set yaw of {_from} to yaw of {_vector}
	set pitch of {_from} to pitch of {_vector}
	set {_dis} to round(distance between {_from} and {_to})
	loop {_dis} times:
		set {_el} to location loop-number meters in front of {_from}
		spawnParticle(smoke, {_el})
	loop all items in {_player}'s inventory:
		{_deleted} is not set
		kitItemAllChecker(loop-item, "Thief", "Skill", 8) is true
		set {_deleted} to true
		set {_tool} to loop-item
		remove loop-item from {_player}
	setKitStats({_player}, "Stealing.Fence Marker", true)
	setKitStats({_target}, "Stealed.Fence Marker", true)
	give {_skill} to {_player}
	remove all {_skill} from {_target}
	wait 10 seconds
	if getKitStats({_player}, "Stealing.Fence Marker") is true:
		remove {_skill} from {_player}
		give {_tool} to {_player}
		deleteKitStats({_player}, "Stealing.Fence Marker")
	if getKitStats({_target}, "Stealed.Fence Marker") is true:
		give {_skill} to {_target}
		deleteKitStats({_target}, "Stealed.Fence Marker")