# Ninjutsu

on leftclick holding a bonemeal:
	set {_tool} to player's tool
	kitItemAllChecker({_tool}, "Ninja", "Skill", 5) is true
	cancel event
	playSound("ui.button.click", 1, 1, player, true)
	if {Stats.%player%::Ninjutsu1} is not set:
		set {Stats.%player%::Ninjutsu1} to "L"
		send action bar "§a§lL §6- §7§l? §6- §7§l?" to player
		set {_now} to now
		set {Stats.%player%::NinTime} to {_now}
		wait 3 seconds
		if {Stats.%player%::NinTime} is {_now}:
			delete {Stats.%player%::Ninjutsu1}
	else if {Stats.%player%::Ninjutsu1} is set:
		if {Stats.%player%::Ninjutsu2} is not set:
			set {Stats.%player%::Ninjutsu2} to "L"
			send action bar "§a§l%{Stats.%player%::Ninjutsu1}% §6- §a§lL §6- §7§l?" to player
			set {_now} to now
			set {Stats.%player%::NinTime} to {_now}
			wait 3 seconds
			if {Stats.%player%::NinTime} is {_now}:
				delete {Stats.%player%::Ninjutsu1}
				delete {Stats.%player%::Ninjutsu2}
		else:
			delete {Stats.%player%::NinTime}
			set {Stats.%player%::Ninjutsu3} to "L"
			send action bar "§a§l%{Stats.%player%::Ninjutsu1}% §6- §a§l%{Stats.%player%::Ninjutsu2}% §6- §a§lL" to player
			kitMsg(player, "§f§l印を結びました!")
			playSound("entity.item.pickup", 1, 0.5, player, true)
			set {_nin} to "%{Stats.%player%::Ninjutsu1}% - %{Stats.%player%::Ninjutsu2}% - %{Stats.%player%::Ninjutsu3}%"
			delete {Stats.%player%::Ninjutsu1}
			delete {Stats.%player%::Ninjutsu2}
			delete {Stats.%player%::Ninjutsu3}
			if {_nin} is "L - L - L":
				set player's tool to light blue dye named "§5Ninjutsu §9[§b風§9]" with lore "§f敵を吹き飛ばす風遁の術", "§5§m------------------------------", "§f[§d§l効果§f]", "§6§l忍術", "", "§3右クリック§7:", "§8- §d現在地点§7に§e竜巻§7を§6§l設置 §b5秒", "§8- §d竜巻内§4の敵§7を§6§l吹き飛ばして§4❤0.5§c§lダメージ" and "§8- §3空中で発動時§7,§d上方向§7に§6§l大ジャンプ"
			else if {_nin} is "L - R - L":
				set player's tool to light green dye named "§5Ninjutsu §9[§2木§9]" with lore "§f生命力を奪う木遁の術", "§5§m------------------------------", "§f[§d§l効果§f]", "§6§l忍術", "", "§3右クリック§7:", "§8- §e根を張る植物§7を§d6方向§7に§6§l発射", "§8- §d着弾点周辺5m§7の§4敵§7に§6§l吸収効果 §b5秒" and "§8- §e根§7は§b5秒後§7に§6§l消滅"
			else if {_nin} is "R - L - L":
				set player's tool to red dye named "§5Ninjutsu §9[§4火§9]" with lore "§f周辺を燃やす火遁の術", "§5§m------------------------------", "§f[§d§l効果§f]", "§6§l忍術", "", "§3右クリック§7:", "§8- §d周辺5m§cの§4敵§7に§4❤2§c§lダメージ", "§8- §d周辺5m§7に§e炎上フィールド§7を§6§l展開 §b5秒" and "§8- §dフィールド内§cの§4敵§7を§6§l着火 §b5秒"
			else if {_nin} is "R - R - L":
				set player's tool to orange dye named "§5Ninjutsu §9[§6土§9]" with lore "§f逃げ場を抑える土遁の術", "§5§m------------------------------", "§f[§d§l効果§f]", "§6§l忍術", "", "§3右クリック§7:", "§8- §d半径5m§7の§e土壁§7を§6§l設置" and "§8- §2自身§7と§d周辺5m§§2の味方§7に§a耐性 I§7を§6§l付与 §b5秒"

on rightclick holding a bonemeal:
	set {_tool} to player's tool
	kitItemAllChecker({_tool}, "Ninja", "Skill", 5) is true
	cancel event
	playSound("ui.button.click", 1, 1, player, true)
	if {Stats.%player%::Ninjutsu1} is not set:
		set {Stats.%player%::Ninjutsu1} to "R"
		send action bar "§a§lR §6- §7§l? §6- §7§l?" to player
		set {_now} to now
		set {Stats.%player%::NinTime} to {_now}
		wait 3 seconds
		if {Stats.%player%::NinTime} is {_now}:
			delete {Stats.%player%::Ninjutsu1}
	else if {Stats.%player%::Ninjutsu1} is set:
		if {Stats.%player%::Ninjutsu2} is not set:
			set {Stats.%player%::Ninjutsu2} to "R"
			send action bar "§a§l%{Stats.%player%::Ninjutsu1}% §6- §a§lR §6- §7§l?" to player
			set {_now} to now
			set {Stats.%player%::NinTime} to {_now}
			wait 3 seconds
			if {Stats.%player%::NinTime} is {_now}:
				delete {Stats.%player%::Ninjutsu1}
				delete {Stats.%player%::Ninjutsu2}
		else:
			delete {Stats.%player%::NinTime}
			set {Stats.%player%::Ninjutsu3} to "R"
			send action bar "§a§l%{Stats.%player%::Ninjutsu1}% §6- §a§l%{Stats.%player%::Ninjutsu2}% §6- §a§lR" to player
			kitMsg(player, "§f§l印を結びました!")
			playSound("entity.item.pickup", 1, 0.5, player, true)
			remove a bone meal named "§fNinjutsu" from the player
			set {_nin} to "%{Stats.%player%::Ninjutsu1}% - %{Stats.%player%::Ninjutsu2}% - %{Stats.%player%::Ninjutsu3}%"
			delete {Stats.%player%::Ninjutsu1}
			delete {Stats.%player%::Ninjutsu2}
			delete {Stats.%player%::Ninjutsu3}
			wait a tick
			if {_nin} is "L - L - R":
				set player's tool to gray dye named "§5Ninjutsu §9[§8爆§9]" with lore "§f木っ端微塵にする爆遁の術", "§5§m------------------------------", "§f[§d§l効果§f]", "§6§l忍術", "", "§3右クリック§7:", "§8- §b3秒後§7に§6爆発§7する§eTNT§7を§d6方向§7に§6§l投擲 §d6個", "§8- §3TNT爆発時§7,§d爆発地点§7に§b1秒後§e爆発する小爆弾§7を§6§l展開 §d2個" and "§8- §3小爆弾爆発時§7,§b1秒後§e爆発する火薬§7を§6§l展開 §b3個"
			else if {_nin} is "L - R - R":
				set player's tool to blue dye named "§5Ninjutsu §9[§1水§9]" with lore "§f心身を癒やす水遁の術", "§5§m------------------------------", "§f[§d§l効果§f]", "§6§l忍術", "", "§3右クリック§7:", "§8- §d周辺5m§7に§e水のベール§7を§6§l展開 §b5秒" and "§8- §dベール内の§2自身§dと§2味方§7を§6§l消火§7し§a再生能力 II§6§l付与"
			else if {_nin} is "R - L - R":
				set player's tool to cyan dye named "§5Ninjutsu §9[§3氷§9]" with lore "§f動きを固める氷遁の術", "§5§m------------------------------", "§f[§d§l効果§f]", "§6§l忍術", "", "§3右クリック§7:", "§8- §b1秒後§7,§d周辺5m§cの§4敵§7に§6§l凍結効果 §b2秒", "§8- §d周辺5m§7に§e氷結フィールド§7を§6§l展開 §b5秒", "§8- §dエリア内の§4敵§7に§c移動速度低下 I§6§l付与" and "§8- §b1秒間継続§7で§dエリア内にいる§4敵§7に§6§l凍結効果 §b0.25秒"
			else if {_nin} is "R - R - R":
				set player's tool to yellow dye named "§5Ninjutsu §9[§e雷§9]" with lore "§f痺れを与える雷遁の術", "§5§m------------------------------", "§f[§d§l効果§f]", "§6§l忍術", "", "§3右クリック§7:", "§8- §d周辺5m§cの§4敵§に§e固定§4❤2§c§lダメージ§7と§6§l麻痺効果 §b5秒" and "§8- §dヒットした§4敵§7を§d5m内§7に§6§l拘束 §b5秒"

on rightclick holding a dye:
	name of player's tool contains "§5Ninjutsu"
	cancel event
	if checkCT(player, "Ninjutsu") is true:
		setCT(player, "Ninjutsu", 10, false)
		set {_n} to player's tool
		set player's tool to air
		if "%type of {_n}%" is "light blue dye":
			kitMsg(player, "§b忍法・風遁の術!")
			kunaiNinjutsu(player, "Ninjutsu-KAZE")
			set {_l} to location of player
			kitNinjutsu_KAZE(player, {_l})
		else if "%type of {_n}%" is "grey dye":
			kitMsg(player, "§8忍法・爆遁の術!")
			kunaiNinjutsu(player, "Ninjutsu-BAKU")
			set {_loc} to location of player
			kitNinjutsu_BAKU(player, {_loc})
		else if "%type of {_n}%" is "light green dye":
			kitMsg(player, "§2忍法・木遁の術!")
			kunaiNinjutsu(player, "Ninjutsu-MOKU")
			set {_loc} to location of player
			kitNinjutsu_MOKU(player, {_loc})
		else if "%type of {_n}%" is "blue dye":
			kitMsg(player, "§1忍法・水遁の術!")
			kunaiNinjutsu(player, "Ninjutsu-MIZU")
			set {_l} to location of player
			kitNinjutsu_MIZU(player, {_l})
		else if "%type of {_n}%" is "red dye":
			kitMsg(player, "§4忍法・火遁の術!")
			kunaiNinjutsu(player, "Ninjutsu-HONO")
			set {_loc} to location of player
			kitNinjutsu_HONO(player, {_loc})
		else if "%type of {_n}%" is "cyan dye":
			kitMsg(player, "§3忍法・氷遁の術!")
			kunaiNinjutsu(player, "Ninjutsu-HYOU")
			set {_loc} to location of player
			kitNinjutsu_HYOU(player, {_loc})
		else if "%type of {_n}%" is "orange dye":
			kitMsg(player, "§6忍法・土遁の術!")
			kunaiNinjutsu(player, "Ninjutsu-TSUCHI")
			set {_l} to location of player
			kitNinjutsu_TSUCHI(player, {_l})
		else if "%type of {_n}%" is "yellow dye":
			kitMsg(player, "§e忍法・雷遁の術!")
			kunaiNinjutsu(player, "Ninjutsu-RAI")
			set {_loc} to location of player
			kitNinjutsu_RAI(player, {_loc})

# Ninjutsu -風-
function kitNinjutsu_KAZE(player: player, l: location):
	sendTimeBossbar_GREEN({_player}, "Ninjutsu - 風 -", 100)
	playSound("entity.wither.shoot", 1, 0.5, {_player})
	if block at location 0.1 meters below {_l} is passable:
		set {_v} to setVector({_l}, location 5 meters above {_l})
		set velocity of {_player} to {_v}
	loop 20 times:
		loop all entities in radius 5 around {_l}:
			kitCheckTeam({_player}, loop-entity, false) is true
			kitDamage({_player}, loop-entity, 0.5, "風遁")
			push loop-entity upwards at speed 0.1
			set {_v} to setVector({_l}, location of loop-entity)
			set velocity of loop-entity to {_v}
		# --- 音演出 ---
		playSound("entity.wither.shoot", 0.5, 1.5, {_l})
		# -------------
		# --- パーティクル演出 ---
		loop 4 times:
			set {_y} to 0
			set {_m} to 0
			loop 10 times:
				add 9 to {_rad}
				add 0.25 to {_y}
				add 0.5 to {_m}
				set {_el} to {_l}
				add {_y} to y-coordinate of {_el}
				add {_m} * sin({_rad}) to x-coordinate of {_el}
				add {_m} * cos({_rad}) to z-coordinate of {_el}
				spawnParticle_DustTransition(rgb(0, 175, 204), rgb(161, 216, 226), 1.5, {_el})
			add 10 to {_rad}
		# ----------------------
		wait 5 ticks

# Ninjutsu -爆-
function kitNinjutsu_BAKU(player: player, loc: location):
	set pitch of {_loc} to 0
	playSound("entity.tnt.primed", 1, 0.8, {_loc})
	loop 6 times:
		add 60 to yaw of {_loc}
		shoot a primed tnt from {_loc} at speed 0.5 upwards
		set metadata value "attacker" of shot primed tnt to "%{_player}%"
		set metadata value "kit-bomber" of shot primed tnt to 2
		set metadata value "ninjutsu-baku" of shot primed tnt to "%{_player}%"
		setFuseTime(shot primed tnt, 60)
		spawnParticle(lava, shot primed tnt)

on explosion:
	if metadata value "ninjutsu-baku" of event-entity is set:
		set {_act} to metadata value "pop" of event-entity
		set {_act} to {_act} parsed as player
		set {_loc} to event-location
		wait a tick
		loop 2 times:
			drop a tnt named "%{_act}%" at event-location
			set metadata value "gametype" of last dropped item to "Kit"
			set metadata value "ninjutsu-baku-2" of last dropped item to "%{_act}%"
			set metadata value "undelete" of last dropped item to true
			spawnParticle(flame, last dropped item)
			push last dropped item upwards at speed 0.2
			push last dropped item north at speed random number from -1 to 1
			push last dropped item east at speed random number from -1 to 1
		wait 20 ticks
		loop all dropped items:
			metadata value "ninjutsu-baku-2" of loop-dropped item is "%{_act}%"
			add location of loop-dropped item to {_dloc::*}
			delete loop-dropped item
		loop {_dloc::*}:
			kitExplosion({_act}, 1.8, loop-value)
		wait a tick
		loop {_dloc::*}:
			loop 3 times:
				drop a gunpowder named "%{_act}%" at loop-value-1
				set metadata value "gametype" of last dropped item to "Kit"
				set metadata value "ninjutsu-baku-3" of last dropped item to "%{_act}%"
				set metadata value "undelete" of last dropped item to true
				spawnParticle(smoke, last dropped item)
				push last dropped item upwards at speed 0.1
				push last dropped item north at speed random number from -1 to 1
				push last dropped item east at speed random number from -1 to 1
		wait 20 ticks
		delete {_dloc::*}
		loop all dropped items:
			metadata value "ninjutsu-baku-3" of loop-dropped item is "%{_act}%"
			add location of loop-dropped item to {_dloc::*}
			delete loop-dropped item
		loop {_dloc::*}:
			kitExplosion({_act}, 1.5, loop-value)

# Ninjutsu -木-
function kitNinjutsu_MOKU(player: player, loc: location):
	playSound("block.cherry_leaves.break", 1, 0.5, {_loc})
	sendTimeBossbar_GREEN({_player}, "Ninjutsu - 木 -", 100)
	# --- 草木フィールド展開 ---
	loop all blocks in radius 5 around {_loc}:
		loop-block is air
		block below loop-block is not passable
		add location of loop-block to {_grasses::*}
		make all players see loop-block as short grass
		chance of 30%:
			spawnParticle(happy_villager, location of loop-block)
	# -----------------------
	loop 100 times:
		kitParticle_Ninjutsu_MOKU({_loc})
		delete {_nowentering::*}
		loop all players in radius 5 around {_loc}:
			if kitCheckTeam(loop-player, {_player}, true) is true:
				add loop-player to {_nowentering::*}
				add loop-player to {_entered::*} if {_entered::*} does not contain loop-player
				if loop-player does not have regeneration:
					applyEffect(loop-player, regeneration, 1, 5 seconds)
				if getInvisibleStatus(loop-player) is true:
					set {_noInvTimer.%loop-player%} to 20
				else:
					if {_noInvTimer.%loop-player%} is set:
						subtract 1 from {_noInvTimer.%loop-player%}
						if {_noInvTimer.%loop-player%} <= 0:
							delete {_noInvTimer.%loop-player%}
					else:
						kitInvisible(loop-player, 100)
						kitEffectDescription(loop-player, "§b§l透明化")
			else:
				add loop-player to {_nowentering::*}
				add loop-player to {_entered::*} if {_entered::*} does not contain loop-player
				if loop-player does not have poison:
					applyEffect(loop-player, poison, 1, 5 seconds)
					kitEffectDescription(loop-player, "§c§l毒")
		loop {_entered::*}:
			if {_nowentering::*} does not contain loop-value-2:
				remove loop-value-2 from {_entered::*}
				if kitCheckTeam(loop-value-2, {_player}, true) is true:
					resetEffect(loop-value-2)
					if getInvisibleStatus(loop-value-2) is true:
						removeInvisible(loop-value-2)
				else:
					resetEffect(loop-value-2)
		loop {_grasses::*}:
			make all players see block at loop-value-2 as short grass
		wait a tick
	loop {_entered::*}:
		if kitCheckTeam(loop-value, {_player}, true) is true:
			resetEffect(loop-value)
			if getInvisibleStatus(loop-value) is true:
				removeInvisible(loop-value)
		else:
			resetEffect(loop-value)
	loop {_grasses::*}:
		make all players see block at loop-value as air
	playSound("block.rooted_dirt.break", 1, 0.5, {_loc})

function kitParticle_Ninjutsu_MOKU(loc: location):
	loop all blocks in radius 5 around {_loc}:
		loop-block is passable
		chance of 3%:
			spawnParticle_Block(oak leaves, location of loop-block)
	loop 36 times:
		add 10 to {_rad}
		set {_el} to {_loc}
		add 5 * sin({_rad}) to x-pos of {_el}
		add 5 * cos({_rad}) to z-pos of {_el}
		spawnParticle_Dust(rgb(46, 139, 87), 1, {_el})

# Ninjutsu -水-
function kitNinjutsu_MIZU(player: player, l: location):
	set {_y} to y-coordinate of block at {_l}
	# --- 座標の追加 ---
	set {_y} to y-coordinate of block at {_player}
	loop all blocks in radius 5 around {_l}:
		distance between location of block at {_l} and location of loop-block >= 4
		y-coordinate of loop-block is {_y}
		add location of loop-block to {_base::*}
	# ----------------
	# --- 水のベール展開 ---
	sendTimeBossbar_GREEN({_player}, "Ninjutsu - 水 -", 110)
	playSound("entity.generic.splash", 1, 1.5, {_l})
	# nmは高さ
	# chは1のときは継続して高くする それ以外はストップ
	set {_nm} to 0
	loop 10 times:
		loop {_base::*}:
			set {_bl} to loop-value-2
			set {_s} to abs(x-pos of {_bl} - x-pos of location of block at {_l}) / 5
			if {_nm} is between 0 and (4 + {_s} * 3):
				set {_ch} to 1
			else:
				set {_ch} to 0
			if {_ch} is 1:
				set {_ck} to location of block {_nm} meters above {_bl}
				block at {_ck} is air
				make all players see block at {_ck} as water
				add {_ck} to {_locations::*}
				playSound("block.grass.break", 0.5, 1.5, {_ck})
				spawnParticle_Color(entity_effect, rgb(0, 0, 200), loop-value-2)
			else:
				remove loop-value-2 from {_ci::*}
		add 1 to {_nm}
		wait a tick
	# --------------------
	# --- 展開中の処理 ---
	loop 100 times:
		delete {_joins::*}
		# --- 味方プレイヤーへの効果付与 ---
		loop all entities in radius 5 around {_l}:
			kitCheckTeam(loop-entity, {_player}, true) is true
			add loop-entity to {_joins::*}
			if {_joined::*} does not contain loop-entity:
				add loop-entity to {_joined::*}
			extinguish loop-entity
			if loop-entity does not have regeneration:
				applyEffect(loop-entity, regeneration, 2, 5 seconds)
				kitEffectDescription(loop-entity, "§d§l再生能力")
		# ------------------------------

		# --- 範囲外に出たエンティティの再生能力削除 ---
		loop {_joined::*}:
			set {_loop-entity} to loop-value-2
			if {_joins::*} does not contain {_loop-entity}:
				remove regeneration from {_loop-entity}
				remove {_loop-entity} from {_joined::*}
		# -------------------------------------------

		# ---ブロック表示 ---
		loop {_locations::*}:
			make all players see block at loop-value-2 as water
		# -----------------
		wait a tick
	# ------------------

	# --- エンティティの再生能力削除 ---
	loop {_joined::*}:
		set {_loop-entity} to loop-value
		remove regeneration from {_loop-entity}
	# -------------------------------------------

	# --- ブロックを戻す処理 ---
	playSound("ambient.underwater.exit", 1, 2, {_l})
	loop {_locations::*}:
		make all players see block at loop-value as air
	# -----------------------

# Ninjutsu -火-
function kitNinjutsu_HONO(player: player, loc: location):
	playSound("entity.ghast.shoot", 1, 1, {_player})
	sendTimeBossbar_GREEN({_player}, "Ninjutsu - 火 -", 100)
	applyEffect({_player}, fire resistance, 1, 5 seconds)
	kitParticle_Ninjutsu_HONO_1({_loc})
	loop all entities in radius 5 around {_loc}:
		kitCheckTeam({_player}, loop-entity, false) is true
		kitDamage({_player}, loop-entity, 2, "火遁")
	loop all blocks in radius 5 around {_loc}:
		distance between {_loc} and loop-block >= 4
		loop-block is air
		block below loop-block is not passable
		set {_lb::%location of loop-block%} to location of loop-block
		set loop-block to fire
		add location of loop-block to {Block.%{_player}%::*}
	loop 100 times:
		loop all entities in radius 5 around {_loc}:
			kitCheckTeam(loop-entity, {_player}, false) is true
			if loop-entity is not ignited:
				playSound("block.campfire.crackle", 1, 1, loop-entity)
				ignite loop-entity for 5 seconds
				kitEffectDescription(loop-entity, "§4§l着火")
				sendTimeBossbar_RED(loop-entity, "Ninjutsu - 火 -", 100)
			kitParticle_Ninjutsu_HONO_2(location of loop-entity)
		chance of 10%:
			playSound("block.furnace.fire_crackle", 1, 1.25, {_loc})
		wait a tick
	loop {_lb::*}:
		if block at loop-value is not air:
			set block at loop-value to air
		remove loop-value from {Block.%{_player}%::*}
	extinguish {_player}

function kitParticle_Ninjutsu_HONO_1(baseloc: location):
	set pitch of {_baseloc} to 0
	loop 30 times:
		set {_dl} to {_baseloc}
		set yaw of {_dl} to a random number between 0 and 360
		set {_v} to setVector({_dl}, location 1 meter in front of {_dl})
		spawnParticle_Vector(flame, {_v}, 0.75, {_dl})
	set {_baserad} to 0
	loop 100 times:  # 5秒間
		set {_y} to 0
		set {_rad} to {_baserad}
		loop 5 times:  # 上3m(0.6mおき)
			set {_elbase} to {_baseloc}
			add 0.6 to {_y}
			add {_y} to y-coordinate of {_elbase}
			loop 8 times:  # 回転
				add 45 to {_rad}
				set {_el} to {_elbase}
				add 5 * sin({_rad}) to x-coordinate of {_el}
				add 5 * cos({_rad}) to z-coordinate of {_el}
				add {_y} to y-coordinate of {_el}
				chance of 10%:
					spawnParticle(flame, {_el})
			add 10 to {_rad}
		add 10 to {_baserad}
		wait a tick

function kitParticle_Ninjutsu_HONO_2(loc: location):
	set pitch of {_loc} to 0
	loop 5 times:
		set {_el} to {_loc}
		set yaw of {_el} to a random number between 0 and 360
		subtract a random number between -90 and 0 from pitch of {_el}
		set {_v} to setVector({_el}, location 1 meters in front of {_el})
		spawnParticle_Vector(flame, {_v}, 0.1, {_el})

# Ninjutsu -氷-
function kitNinjutsu_HYOU(player: player, loc: location):
	kitParticle_Ninjutsu_HYOU_1({_loc})
	wait a seconds
	kitParticle_Ninjutsu_HYOU_2({_loc})
	sendTimeBossbar_GREEN({_player}, "Ninjutsu - 氷 -", 100)
	loop all players in radius 5 around {_loc}:
		kitCheckTeam({_player}, loop-player, false) is true
		kitFreeze(loop-player, 40)
		kitEffectDescription(loop-player, "§b§l凍結")
	loop 100 times:
		delete {_jb::*}
		loop all players in radius 5 around {_loc}:
			kitCheckTeam(loop-player, {_player}, false) is true
			if getDebuffs(loop-player, "Freeze") is false:
				add 1 to {_eg::%loop-player%}
				if {_eg::%loop-player%} >= 20:
					set {_eg::%loop-player%} to 0
					kitFreeze(loop-player, 5)
					kitEffectDescription(loop-player, "§b§l凍結")
					playSound("block.glass.break", 1, 2, loop-player)
			set {_jb::%loop-player%} to true
		loop all players:
			metadata value "gametype" of loop-player is "Kit"
			{_eg::%loop-player%} is set
			if {_jb::%loop-player%} is true:
				applyEffect(loop-player, slowness, 1, 0.2 seconds, true)
				kitParticle_Ninjutsu_HYOU_3(loop-player)
			else:
				if {_eg::%loop-player%} > 0:
					subtract 1 from {_eg::%loop-player%}
		wait a tick
	loop all players:
		{_eg::%loop-player%} is set
		resetEffect(loop-player)

function kitParticle_Ninjutsu_HYOU_1(loc: location):  # 発動前の溜め演出 1秒間
	add 1 to y-pos of {_loc}
	set {_rad.in} to 0
	set {_rad.ex} to 45
	set {_meter.in} to 3
	set {_meter.ex} to 5
	loop 20 times:
		playSound("block.powder_snow.break", 1, 0.5 + 0.05 * loop-number, {_loc})
		loop 4 times:
			add 90 to {_rad.in}
			set {_el.in} to {_loc}
			add {_meter.in} * sin({_rad.in}) to x-pos of {_el.in}
			add {_meter.in} * cos({_rad.in}) to z-pos of {_el.in}
			spawnParticle_DustTransition(rgb(175, 238, 238), rgb(217, 238, 238), 0.8, {_el.in})
			add 90 to {_rad.ex}
			set {_el.ex} to {_loc}
			add {_meter.ex} * sin({_rad.ex}) to x-pos of {_el.ex}
			add {_meter.ex} * cos({_rad.ex}) to z-pos of {_el.ex}
			spawnParticle_DustTransition(rgb(37, 183, 192), rgb(130, 205, 221), 1.5, {_el.ex})
		add 3 to {_rad.in}
		add 3 to {_rad.ex}
		subtract 0.15 from {_meter.in}
		subtract 0.25 from {_meter.ex}
		wait a tick

function kitParticle_Ninjutsu_HYOU_2(loc: location):  # 発動後の爆発とフィールド演出 5秒間
	# 爆発演出
	playSound("block.glass.break", 1, 0.5, {_loc})
	loop all blocks in radius 5 around {_loc}:
		loop-block is air
		chance of 5%:
			spawnParticle_Block(ice, location of loop-block)
		chance of 5%:
			spawnParticle_Block(blue ice, location of loop-block)
		chance of 5%:
			spawnParticle_Block(snow block, location of loop-block)
	# フィールド演出
	add 1 to y-pos of {_loc}
	set {_rad} to 0
	loop 100 times:
		loop 8 times:
			add 45 to {_rad}
			set {_el} to {_loc}
			add 5 * sin({_rad}) to x-pos of {_el}
			add 5 * cos({_rad}) to z-pos of {_el}
			spawnParticle_DustTransition(rgb(0, 163, 175), rgb(131, 204, 210), 2, {_el})
		add 10 to {_rad}
		loop all blocks in radius 5 around {_loc}:
			loop-block is air
			chance of 1%:
				spawnParticle_BlockData(falling_dust, ice, location of loop-block)
			chance of 1%:
				spawnParticle_BlockData(falling_dust, blue ice, location of loop-block)
			chance of 1%:
				spawnParticle_BlockData(falling_dust, snow block, location of loop-block)
		wait a tick

function kitParticle_Ninjutsu_HYOU_3(player: player):  # フィールド内のプレイヤー演出
	playSound("block.snow.step", 0.1, 1.1, {_player}, true)
	loop 3 times:
		set {_el} to aroundEffect({_player})
		spawnParticle_Block(snow block, {_el})

# Ninjutsu -土-
function kitNinjutsu_TSUCHI(player: player, l: location):
	sendTimeBossbar_GREEN({_player}, "Ninjutsu - 土 -", 110)
	loop all entities in radius 5 around {_l}:
		kitCheckTeam(loop-entity, {_player}, true) is true
		setSupporter(loop-entity, {_player})
		applyEffect(loop-entity, resistance, 1, 5 seconds)
		applyEffect(loop-entity, mining fatigue, 1, 5 seconds)
		kitEffectDescription(loop-entity, "§6§l耐性")
		sendTimeBossbar_GREEN(loop-entity, "Ninjutsu - 土 -", 100)
	set {_y} to y-coordinate of block at {_player}
	loop all blocks in radius 5 around {_l}:
		distance between location of block at {_l} and location of loop-block >= 4
		y-coordinate of loop-block is {_y}
		add location of loop-block to {_ci::*}
	set {_nm} to 0
	loop 10 times:
		loop {_ci::*}:
			set {_bl} to loop-value-2
			if {_nm} is between 0 and 4:
				set {_ch} to 1
			else:
				set {_ch} to a random integer between 1 and 2
			if {_ch} is 1:
				set {_ck} to location of block {_nm} meters above {_bl}
				block at {_ck} is air
				make all players see block at {_ck} as dirt
				add {_ck} to {_lb::*}
				playSound("block.grass.break", 0.5, 1.5, {_ck})
				spawnParticle_Block(dirt, {_ck})
			else:
				remove loop-value-2 from {_ci::*}
		add 1 to {_nm}
		wait a tick
	loop 100 times:
		loop {_lb::*}:
			make all players see block at loop-value-2 as dirt
		wait a tick
	loop {_lb::*}:
		make all players see block at loop-value as air
		playSound("block.grass.break", 0.5, 1.2, loop-value)

# Ninjutsu -雷-
function kitNinjutsu_RAI(player: player, loc: location):
	sendTimeBossbar_GREEN({_player}, "Ninjutsu - 雷 -", 100)
	strike lightning effect at {_loc}
	loop all players in radius 5 around {_loc}:
		kitCheckTeam(loop-player, {_player}, false) is true
		add loop-player to {_hitplayers::*}
		strike lightning effect at loop-player
		kitDamage({_player}, loop-player, 2, "雷遁", true)
		kitPalsy(loop-player, 100)
		kitEffectDescription(loop-player, "§4❤2 §8& §e§l麻痺 §8& §5§l拘束")
		sendTimeBossbar_RED(loop-player, "Ninjutsu - 雷 -", 100)
	loop 100 times:
		kitParticle_Ninjutsu_RAI_1(location 1 meters above {_loc})
		loop {_hitplayers::*}:
			kitParticle_Ninjutsu_RAI_2(loop-value-2)
			set {_dis} to distance between {_loc} and loop-value-2
			if {_dis} > 5:
				kitParticle_Ninjutsu_RAI_3(loop-value-2, {_loc})
				set {_vector} to setVector(location of loop-value-2, {_loc}, 0.3)
				set velocity of loop-value-2 to {_vector}
		wait a tick

function kitParticle_Ninjutsu_RAI_1(loc: location):
	loop 36 times:
		add 10 to {_rad}
		set {_el} to {_loc}
		add 5 * sin({_rad}) to x-pos of {_el}
		add 5 * cos({_rad}) to z-pos of {_el}
		spawnParticle(enchanted_hit, {_el})

function kitParticle_Ninjutsu_RAI_2(player: player):
	set {_baseloc} to location of {_player}
	add 1 to y-pos of {_baseloc}
	loop 4 times:
		set {_el} to {_baseloc}
		add 90 to {_rad}
		add 0.5 * sin({_rad}) to x-pos of {_el}
		add 0.5 * cos({_rad}) to z-pos of {_el}
		spawnParticle(enchanted_hit, {_el})

function kitParticle_Ninjutsu_RAI_3(toplayer: player, fromloc: location):
	playSound("block.beehive.work", 1, 2, {_toplayer})
	set {_vector} to setVector({_fromloc}, location 1 meter above {_toplayer})
	set {_baseloc} to {_fromloc}
	set yaw of {_baseloc} to yaw of {_vector}
	set pitch of {_baseloc} to pitch of {_vector}
	loop 50 times:
		set {_el} to location 0.1 * loop-number meters in front of {_baseloc}
		spawnParticle_Dust(rgb(215, 207, 58), 0.5, {_el})