# Kunai

function kitWeapon_Ninja_2(player: player):
	set {_tool} to {_player}'s tool
	if name of {_tool} contains "Kunai":
		# --- Fudaの付与 ---
		set {_fuda} to a name tag named "<##698AAB>Fuda" with lore lore of {_tool}
		set {_fuda} to kitItemTagChanger({_fuda}, "Ninja", "Weapon.main", 2)
		remove {_tool} from {_player}
		give {_fuda} to {_player}
		# -----------------
		set {Stats.%{_player}%::Kunai-Shooting} to true
		# --- クナイの発射 ---
		shoot an arrow from {_player} at speed 3
		set metadata value "kunai" of shot arrow to "%{_player}%"
		set metadata value "arrowdamage" of shot arrow to 3
		# ------------------
		# --- クナイのパーティクル ---
		kitParticle_Kunai(shot arrow)
		# -------------------------
		loop 60 times:
			if {_player} has {_fuda}:
				wait a tick
		if {_player} has {_fuda}:
			delete {_remain}
			loop all entities:
				type of loop-entity is armor stand
				metadata value "kunai-remaining" of loop-entity is "%{_player}%"
				set {_remaining} to true
			if {_remaining} is not set:
				delete {Stats.%{_player}%::Kunai-Shooting}
				# --- クナイの返還 ---
				remove {_fuda} from {_player}
				give {_tool} to {_player}
				# ------------------
	else if name of {_tool} contains "Fuda":
		if {Stats.%{_player}%::Kunai-Remaining} is set:
			delete {Stats.%{_player}%::Kunai-Remaining}
			loop all entities:
				type of loop-entity is armor stand
				metadata value "kunai-remaining" of loop-entity is "%{_player}%"
				delete loop-entity
		else:
			delete {Stats.%{_player}%::Kunai-Shooting}
		# --- クナイの返還 --
		set {_kunai} to kitPlayerWeaponItem({_player}, "Ninja", "main")
		remove {_tool} from {_player}
		give {_kunai} to {_player}
		# ------------------
		

function kitParticle_Kunai(proj: projectile):
	loop 20 times:
		set {_el} to location of {_proj}
		spawnParticle(bubble_pop, {_el})
		wait a tick

on projectile hit:
	projectile is an arrow
	metadata value "kunai" of projectile is set
	{Stats.%shooter%::Kunai-Shooting} is true
	delete {Stats.%shooter%::Kunai-Shooting}
	set {_baseloc} to location of projectile
	set {_d} to 100
	loop all blocks in radius 1.5 around {_baseloc}:
		loop-block is not passable
		distance between {_baseloc} and location of loop-block < {_d}
		set {_d} to distance between {_baseloc} and location of loop-block
		set {_baseblock} to loop-block
	if {_baseblock} is set:
		set {_v} to setVector({_baseloc}, {_baseblock})
		# --- armor stand 置く処理 ---
		set {_yaw} to yaw of {_v}
		set {_pitch} to pitch of {_v}
		set {_kunailoc} to location of {_baseblock}
		subtract 0.5 from y-coordinate of {_kunailoc}
		set yaw of {_kunailoc} to {_yaw}
		set {_p} to 315 + {_p}
		set {Stats.%shooter%::Kunai-Remaining} to {_kunailoc}
		set {_nbt} to nbt compound from "{Invisible:1b,Invulnerable:1b,NoBasePlate:1b,NoGravity:1b,ShowArms:1b,ArmorItems:[{},{},{},{}],HandItems:[{id:""arrow"",Count:1b},{}],Pose:{RightArm:[0f,%{_p}%f,270f]}}"
		spawn an armor stand at {_kunailoc} with nbt {_nbt}
		set metadata value "kunai-remaining" of spawned entity to "%shooter%"
		# ---------------------------

function kunaiNinjutsu(player: player, type: text):
	if {Stats.%{_player}%::Kunai-Remaining} is set:
		set {_loc} to {Stats.%{_player}%::Kunai-Remaining}
		# --- 隠身 ---
		if {_type} is "Kakuremi":
			loop all players in radius 5 around {_loc}:
				{_player} is not loop-player
				kitCheckTeam({_player}, loop-player, true) is true
				setSupporter(loop-player, {_player})
				kitInvisible(loop-player, 5 seconds)
			# --- 音演出 ---
			playSound("entity.wither.shoot", 1, 2, {_loc})
			# -------------
			# --- パーティクル演出 ---
			loop 5 times:
				add 1 to {_y}
				loop 36 times:
					set {_el} to {_loc}
					add 10 to {_rad}
					add 5 * sin({_rad}) to x-coordinate of {_el}
					add 5 * cos({_rad}) to z-coordinate of {_el}
					add {_y} to y-coordinate of {_el}
					spawnParticle_Dust(rgb(119, 136, 153), 2, {_el})
				wait a tick
			# ---------------------
		# -----------
		# --- 分身 ---
		else if {_type} is "Bunshin":
			# --- 音演出 ---
			playSound("block.fire.extinguish", 1, 2, {_loc})
			# -------------
			loop 3 times:
				set {_nbt} to nbt compound from "{IsBaby:0,Silent:1,Attributes:[{Name:""generic.movement_speed"",Base:0.6f}],ArmorItems:[{id:""minecraft:air"",Count:1b},{id:""minecraft:air"",Count:1b},{id:""minecraft:leather_chestplate"",tag:{display:{color:0}},Count:1b},{id:""minecraft:player_head"",tag:{SkullOwner:%{_player}%},Count:1b}],HandItems:[{id:""minecraft:air"",Count:1b},{id:""minecraft:air"",Count:1b}],ActiveEffects:[{Id:8,Amplifier:2,Duration:999999}]}"
				spawn a zombie at {_loc} with nbt {_nbt}
				set metadata value "gametype" of spawned zombie to "Kit"
				set metadata value "kunai-bunshin" of spawned zombie to "%{_player}%"
				set spawned zombie's display name to "%{_player}%"
			wait 5 seconds
			loop all zombies:
				metadata value "kunai-bunshin" of loop-zombie is "%{_player}%"
				delete loop-zombie
		# -----------
		# --- 残像 ---
		else if {_type} is "Zanzo":
			# --- 音演出 ---
			playSound("entity.bat.takeoff", 1, 1.5, {_loc})
			# -------------
			loop 100 times:
				delete {_inow::*}
				loop all players in radius 5 around {_loc}:
					{Class::%loop-player%} is not "Ninja"
					kitCheckTeam({_player}, loop-player, true) is true
					add loop-player to {_inow::*}
					if {_ined::*} does not contain loop-player:
						add loop-player to {_ined::*}
					set {Stats.%loop-player%::Zanzo} to true
				loop {_ined::*}:
					{_inow::*} does not contain loop-value-2
					delete {Stats.%loop-value-2%::Zanzo}
					delete {_ined::%loop-index%}
				# --- パーティクル演出 ---
				loop all blocks in radius 5 around {_loc}:
					loop-block is passable
					block below loop-block is not passable
					spawnParticle_Color(ambient_entity_effect, 0, 0, 0, location of loop-block)
				# ---------------------
				wait a tick
			loop {_ined::*}:
				delete {Stats.%loop-value%::Zanzo}
		# -----------
		# --- 鎌鼬 ---
		else if {_type} is "Kamaitachi":
			loop 100 times:
				loop all entities in radius 5 around {_loc}:
					kitCheckTeam({_player}, loop-entity, false) is true
					kitDamage({_player}, loop-entity, 0.25)
					set {_el} to location of loop-entity
					add 1 to y-coordinate of {_el}
					spawnParticle_Vector(cloud, randomVector(), 0.5, {_el})
				set {_pitch} to a random number between 0.5 and 2
				playSound("entity.player.player,sweep", 1, {_pitch}, {_loc})
				loop all blocks in radius 5 around {_loc}:
					loop-block is passable
					chance of 1%:
						spawnParticle(explosion, location of loop-block)
				wait a tick
		# -----------
		# --- 忍術 [風] ---
		else if {_type} is "Ninjutsu-KAZE":
			playSound("entity.wither.shoot", 1, 0.5, {_loc})
			loop 20 times:
				loop all entities in radius 5 around {_loc}:
					kitCheckTeam({_player}, loop-entity, false) is true
					kitDamage({_player}, loop-entity, 0.5)
					push loop-entity upwards at speed 0.1
					set {_v} to setVector({_loc}, location of loop-entity)
					set velocity of loop-entity to {_v}
				# --- 音演出 ---
				playSound("entity.wither.shoot", 0.5, 1.5, {_loc})
				# -------------
				# --- パーティクル演出 ---
				set {_y} to 0
				loop 50 times:
					add 40 to {_rad}
					add 0.1 to {_y}
					add 0.1 to {_m}
					set {_el} to {_loc}
					add {_y} to y-coordinate of {_el}
					add {_m} * sin({_rad}) to x-coordinate of {_el}
					add {_m} * cos({_rad}) to z-coordinate of {_el}
					spawnParticle_DustTransition(rgb(0, 175, 204), rgb(161, 216, 226), 1.5, {_el})
				# ----------------------
				wait 5 ticks
		# ----------------
		# --- 忍術 [爆] ---
		else if {_type} is "Ninjutsu-BAKU":
			set pitch of {_loc} to 0
			playSound("entity.tnt.primed", 1, 0.8, {_loc})
			loop 6 times:
				add 60 to yaw of {_loc}
				shoot a primed tnt from {_loc} at speed 0.5 upwards
				set metadata value "attacker" of shot primed tnt to "%{_player}%"
				set metadata value "kit-bomber" of shot primed tnt to 2
				set metadata value "ninjutsu-baku" of shot primed tnt to "%{_player}%"
				setFuseTime(shot primed tnt, 60)
				spawnParticle(lava, shot primed tnt)
		# ----------------
		# --- 忍術 [木] ---
		else if {_type} is "Ninjutsu-MOKU":
			set {_baseloc} to {_loc}
			set {_shootloc} to {_baseloc}
			set pitch of {_shootloc} to 0
			playSound("block.wet_grass.place", 1, 0.9, {_baseloc})
			loop 6 times:
				shoot a snowball from {_shootloc} at speed 1
				kitEffect_Ninjutsu_MOKU({_player}, shot snowball)
				add 60 to yaw of {_shootloc}
		# ----------------
		# --- 忍術 [水] ---
		else if {_type} is "Ninjutsu-MIZU":
			set {_l} to location of {_player}
			set {_y} to y-coordinate of block at {_l}
			# --- 座標の追加 ---
			loop 36 times:
				set {_pl} to {_l}
				add 10 to {_rad}
				add 5 * sin({_rad}) to x-coordinate of {_pl}
				add 5 * cos({_rad}) to z-coordinate of {_pl}
				loop 7 times:
					if block at {_pl} is air:
						if {_locations::*} does not contain {_pl}:
							add {_pl} to {_locations::*}
					add 1 to y-coordinate of {_pl}
				loop round(3 * sin({_rad})) times:
					if block at {_pl} is air:
						if {_locations::*} does not contain {_pl}:
							add {_pl} to {_locations::*}
					add 1 to y-coordinate of {_pl}
			# ----------------
			# --- 水のベール展開 ---
			loop 10 times:
				add 1 to {_checky}
				loop {_locations::*}:
					y-coordinate of loop-value-2 <= y-coordinate of {_l} + {_checky}
					playSound("entity.generic.splash", 0.5, 1.5, loop-value-2)
					spawnParticle_Color(entity_effect, 0, 0, 200, loop-value-2)
					make all players see block at loop-value as water
				wait a tick
			# --------------------
			# --- 展開中の処理 ---
			loop 100 times:
				# --- 味方プレイヤーへの効果付与 ---
				loop all entities in radius 5 around {_l}:
					kitCheckTeam(loop-entity, {_player}. true) is true
					extinguish loop-entity
					if loop-entity does not have regeneration:
						applyEffect(loop-entity, regeneration, 2, 1 second)
				# ------------------------------
				# ---ブロック表示 ---
				loop {_locations::*}:
					make all players see block at loop-value-2 as water
				# -----------------
				wait a tick
			# ------------------
			# --- ブロックを戻す処理 ---
			loop {_locations::*}:
				make all players see block at loop-value as air
				playSound("ambient.underwater.exit", 0.5, 2, loop-value)
		# ----------------
		# --- 忍術 [火] ---
		else if {_type} is "Ninjutsu-HONO":
			playSound("entity.ghast.shoot", 1, 1, {_loc})
			kitParticle_Ninjutsu_HONO_1({_loc})
			loop all entities in radius 5 around {_loc}:
				kitCheckTeam({_player}, loop-entity, false) is true
				kitDamage({_player}, loop-entity, 2)
			loop all blocks in radius 5 around {_loc}:
				distance between {_loc} and loop-block >= 4
				loop-block is air
				block below loop-block is not passable
				set {_lb::%location of loop-block%} to location of loop-block
				set loop-block to fire
				add location of loop-block to {Block.%{_player}%::*}
			loop 100 times:
				loop all entities in radius 5 around {_loc}:
					kitCheckTeam(loop-entity, {_player}, false) is true
					if loop-entity is not burning:
						playSound("block.campfire.crackle", 1, 1, loop-entity)
					ignite loop-entity by 5 seconds
					kitParticle_Ninjutsu_HONO_2(location of loop-entity)
				chance of 10%:
					playSound("block.furnace.fire_crackle", 1, 1.25, {_loc})
				wait a tick
			loop {_lb::*}:
				if block at loop-value is not air:
					set block at loop-value to air
				remove loop-value from {Block.%{_player}%::*}
		# ----------------