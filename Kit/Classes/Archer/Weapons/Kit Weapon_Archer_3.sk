# Mechanical Bow

on sneak toggle:
	metadata value "gametype" of player is "Kit"
	{Class::%player%}is "Archer"
	player is not sneaking
	set {_tool} to player's tool
	kitItemAllChecker({_tool}, "Archer", "Weapon.main", 3) is true
	enchant {_tool} with flame
	enchant {_tool} with quick charge 5
	# --- 音の演出 ---
	playSound("entity.iron_golem.hurt", 1, 2, player)
	# --------------
	set {_true} to true
	wait a tick
	while {_true} is true:
		if player is not sneaking:
			delete {_true}
		set {_tool} to player's tool
		if kitItemAllChecker({_tool}, "Archer", "Weapon.main", 3) is false:
			delete {_true}
		if {_tool} is not enchanted with flame:
			delete {_true}
		# --- パーティクルの演出 ---
		spawnParticle(lava, location of player)
		# -----------------------
		wait a tick
	# --- 音の演出 ---
	playSound("entity.iron_golem.damage", 1, 2, player)
	# --------------
	loop all items in player's inventory:
		kitItemAllChecker(loop-item, "Archer", "Weapon.main", 3) is true
		disenchant loop-item
		enchant loop-item with quick charge 2

on shoot:
	metadata value "gametype" of shooter is "Kit"
	{Class::%shooter%} is "Archer"
	set {_tool} to shooter's tool
	kitItemAllChecker({_tool}, "Archer", "Weapon.main", 3) is true
	{_tool} is enchanted with flame
	if {Stats.%shooter%::MechanicalBow-OverHeat} is not set:  # オーバーヒートしてない場合
		# --- カウントの設定 ---
		if {Stats.%shooter%::MechanicalBow-Count} is not set:
			set {Stats.%shooter%::MechanicalBow-Count} to 0
		# --------------------
		set metadata value "mechanicalbow" of projectile to "true"
		# --- 矢の演出処理 ---
		kitEffect_MechanicalBow_Arrow(projectile)
		# ------------------
		set {_to} to vector of location 100 meters in front of shooter
		set {_from} to vector of location of shooter
		set {_vector} to {_to} -- {_from}
		set {_vector} to normalized {_vector}
		set x of {_vector} to x of {_vector} * 10
		set y of {_vector} to y of {_vector} * 10
		set z of {_vector} to z of {_vector} * 10
		set velocity of projectile to {_vector}
		set {_now} to _now
		set {Stats.%shooter%::MechanicalBow-Now} to {_now}
		add 1 to {Stats.%shooter%::MechanicalBow-Count}
		if {Stats.%shooter%::MechanicalBow-Count} > 5:
			set {Stats.%shooter%::MechanicalBow-OverHeat} to true
			delete {Stats.%shooter%::MechanicalBow-Now}
			delete {Stats.%shooter%::MechanicalBow-Count}
			ignite shooter for 10 seconds
			kitMsg(shooter, "<##d70035>§lオーバーヒートした!")
			loop all items in shooter's inventory:
				kitItemAllChecker(loop-item, "Archer", "Weapon.main", 3) is true
				disenchant loop-item
				enchant loop-item with quick charge 2
			wait 10 seconds
			delete {Stats.%shooter%::MechanicalBow-OverHeat}
			kitMsg(shooter, "<##008080>武器の冷却が終了しました")
		else:
			wait 3 seconds
			{Stats.%shooter%::MechanicalBow-Now} is {_now}
			delete {Stats.%shooter%::MechanicalBow-Now}
			delete {Stats.%shooter%::MechanicalBow-Count}
	else:
		cancel event
		send action bar "<##ff6347>武器が熱すぎて扱えない!" to shooter
		# --- 音の演出 ---
		playSound("entity.blaze.hurt", 1, 1.25, shooter)
		# ---------------
		# --- パーティクルの演出 ---
		loop 5 times:
			set {_v} to randomVector(location of shooter)
			spawnParticle_Vector(flame, {_v}, location 1 meters above shooter)
		# -----------------------

function kitEffect_MechanicalBow_Arrow(projectile: projectile):
	loop 10 times:
		spawnParticle(flame, location of {_projectile})
		wait a tick

on damage:
	type of attacker is player
	damage was caused by projectile
	if metadata value "mechanicalbow" of projectile is "true":
		set damage to 3