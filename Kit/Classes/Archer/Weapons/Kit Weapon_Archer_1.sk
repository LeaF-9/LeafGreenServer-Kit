# Power Bow

on shoot:
	metadata value "gametype" of shooter is "Kit"
	{Class::%shooter%} is "Archer"
	shooter is sneaking
	set {_tool} to shooter's tool
	if kitItemAllChecker({_tool}, "Archer", "Weapon.main", 1) is true:
		set metadata value "massivebow" of projectile to true
		kitEffect_MassiveBow(shooter, projectile)
		kitParticle_MassiveBow_Shoot(shooter)

on projectile hit:
	metadata value "massivebow" of projectile is set
	set metadata value "massivebow" of projectile to false
	kitParticle_MassiveBow_Hit(location of projectile)

on damage:
	checkEntityType(attacker, player) is true
	damage was caused by projectile
	metadata value "massivebow" of projectile is set
	set {_dis} to distance between attacker and victim
	if {_dis} <= 5:
		set damage to damage * 0.25
		kitMsg(attacker, "§6ダメージ倍率! §c§l0.25倍")
	else if {_dis} <= 10:
		set damage to damage * 0.5
		kitMsg(attacker, "§6ダメージ倍率! §c§l0.5倍")
	else if {_dis} <= 20:
		set damage to damage * 0.75
		kitMsg(attacker, "§6ダメージ倍率! §c§l0.75倍")
	else if {_dis} >= 50:
		set damage to damage * 1.25
		kitMsg(attacker, "§6ダメージ倍率! §a§l1.25倍")
	else if {_dis} >= 75:
		set damage to damage * 1.5
		kitMsg(attacker, "§6ダメージ倍率! §a§l1.5倍")
	else if {_dis} >= 100:
		set damage to damage * 2
		kitMsg(attacker, "§6ダメージ倍率! §a§l2倍")

function kitEffect_MassiveBow(player: player, proj: projectile):
	set {_baseloc} to location of {_player}
	set {_v} to setVector(location of {_player}, location 10 meters in front of {_player})
	set {_power} to 0
	loop 100 times:
		if metadata value "massivebow" of {_proj} is false:
			continue
		add 1 to {_power}
		set {_pow} to {_power} / 5
		set {_vector} to {_v} ** vector({_pow}, {_pow}, {_pow})
		set velocity of {_proj} to {_vector}
		kitParticle_MassiveBow_Arrow({_baseloc}, location of {_proj})
		wait a tick

# 爆発音と爆発Particle
function kitParticle_MassiveBow_Shoot(player: player):
	playSound("entity.wither.shoot", 1, 2, {_player})
	set {_baseloc} to location 1 meter above {_player}
	loop 10 times:
		spawnParticle_Vector(cloud, randomVector({_baseloc}), 0.75, {_baseloc})

# 炎上の白いParticle
function kitParticle_MassiveBow_Arrow(vecloc: location, loc: location):
	set yaw of {_loc} to yaw of {_vecloc}
	set pitch of {_loc} to pitch of {_vecloc}
	set {_circles::*} to particleLocation_CircleV({_loc}, 6, 0.3)
	loop {_circles::*}:
		spawnParticle_Dust(rgb(160, 216, 239), 0.7, loop-value)

# 地形破壊Particleと爆発音
function kitParticle_MassiveBow_Hit(loc: location):
	playSound("entity.wither.break_block", 1, 2, {_loc})
	loop all blocks in radius 3 around {_loc}:
		loop-block is not passable
		set {_material} to type of loop-block
		loop all blocks in radius 1.5 around loop-block:
			loop-block-2 is passable
			set {_el} to location of loop-block-2
			spawnParticle_Block({_material}, {_el})