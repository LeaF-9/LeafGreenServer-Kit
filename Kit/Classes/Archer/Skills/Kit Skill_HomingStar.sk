# Homing Star

options:
	firework-lifetime: 30
	firework-metadata: "Homing Star - Firework"
	firework-damage: 1
	search-radius: 50
	min-speed: 0.25
	max-speed: 0.5
	max-vector-length: 0.1
	max-block-through: 3
	max-track-ticks: 100
	glowing-tick: 200



import:
	org.bukkit.event.entity.FireworkExplodeEvent
	org.bukkit.event.entity.EntityDamageByEntityEvent

on FireworkExplodeEvent:
	set {_firework} to event.getEntity()
	set {_player} to metadata value {@firework-metadata} of {_firework}
	if {_player} is not set:
		stop
	
	set {_loc} to location of {_firework}
	kitEffect_HomingStar_Explode({_player}, {_loc})

on EntityDamageByEntityEvent with priority LOW:
	set {_victim} to event.getEntity()
	set {_firework} to event.getDamager()
	set {_metadata} to metadata value "firework" of {_firework}
	if {_metadata} is not true:
		stop
	set {_attacker} to metadata value "summon-player" of {_firework}
	if {_attacker} is not set:
		stop
	if kitCheckTeam({_victim}, {_attacker}, false) is false:
		stop

	setDamageModification_SET({_victim}, {@firework-damage})
	LastKiller({_victim}, {_attacker})
	kitEffectDescription({_victim}, "§4❤1 §8& §e§l発光")
	playSound("entity.player.levelup", 1, 2, {_attacker}, true)
	if {_victim} does not have glowing:
		applyEffect({_victim}, glowing, 1, {@glowing-tick})



function kitEffect_HomingStar(player: player):
	nameCT({_player}, "Homing Star")
	kitMsg({_player}, "§9矢の花火を上空へ放ちます...")
	# --- 発射時の音の演出 ---
	playSound("entity.firework_rocket.launch", 1.25, 0.75, {_player})
	# ---------------------
	# --- 破裂までの処理 ---
	set {_firework} to spawnFireworks_PLAYER({_player}, location of {_player}, {@firework-lifetime}, setFireWorksExplosion("ball_large", rgb(199, 165, 204), rgb(255, 255, 255), false, true))
	set metadata value {@firework-metadata} of {_firework} to {_player}
	


local function kitEffect_HomingStar_Explode(player: player, loc: location):
	# 対象設定
	loop all players in radius {@search-radius} around {_player}:
		kitCheckTeam(loop-player, {_player}, false) is true
		add loop-player to {_targets::*}
	
	loop {_targets::*}:
		set {_target} to loop-value
		set {_rn} to a random integer between 3 and 5
		loop {_rn} times:
			kitEffect_HomingStar_Star({_player}, {_target}, {_loc})

local function kitEffect_HomingStar_Star(player: player, target: player, loc: location):
	# 爆発方向決定
	set {_baseloc} to setDirToVec({_loc}, randomVector())
	# 爆発処理
	set {_m} to 0
	loop 10 times:
		set {_el} to location {_m} meters in front of {_baseloc}
		spawnParticle(wax_off, {_el})
		set {_rn} to a random integer between 0 and 2
		loop {_rn} times:
			set {_el} to {_baseloc}
			add a random number between -1 and 1 to x-pos of {_el}
			add a random number between -1 and 1 to y-pos of {_el}
			add a random number between -1 and 1 to z-pos of {_el}
			spawnParticle_DustTransition(colorRandomizer(245, 255, 255, 0, 10, 5), rgb(255, 255, 255), 0.75, {_el})
		add 0.5 to {_m}
		wait a tick
	
	set {_baseloc} to location 5 meters in front of {_baseloc}
	loop 10 times:
		spawnParticle(wax_off, {_baseloc})
		set {_rn} to a random integer between 1 and 3
		loop {_rn} times:
			set {_el} to {_baseloc}
			add a random number between -1 and 1 to x-pos of {_el}
			add a random number between -1 and 1 to y-pos of {_el}
			add a random number between -1 and 1 to z-pos of {_el}
			spawnParticle_DustTransition(colorRandomizer(245, 255, 255, 0, 10, 5), rgb(255, 255, 255), 0.75, {_el})
		wait a tick
	
	# 発射処理
	kitParticle_HomingStar_Shoot({_baseloc}, {_target})
	set {_speed} to a random number between {@min-speed} and {@max-speed}
	set {_flying} to true
	set {_ticks} to 0
	while {_flying} is true:
		add 1 to {_ticks}
		if {_ticks} > {@max-track-ticks}:
			set {_flying} to false
			continue

		# 方向確認
		set {_basetargetloc} to location 1 meter in front of {_baseloc}
		set {_basevec} to setVector({_baseloc}, {_basetargetloc})  # baselocから前方に向けたvector
		set {_plusvec} to setVector({_basetargetloc}, location 1 meter above {_target}, 0)
		set vector length of {_plusvec} to {@max-vector-length} if vector length of {_plusvec} > {@max-vector-length}
		set {_vec} to {_basevec} + {_plusvec}

		set {_baseloc} to setDirToVec({_baseloc}, {_vec})
		set {_baseloc} to location {_speed} meters in front of {_baseloc}
		# 軌道パーティクル
		kitParticle_HomingStar_Trail({_baseloc}, {_target})

		# ヒット確認(block)
		if block at {_baseloc} is not passable:
			if {_blockthrough::*} does not contain location of block at {_baseloc}:
				add location of block at {_baseloc} to {_blockthrough::*}
				if size of {_blockthrough::*} > {@max-block-through}:
					set {_baseloc} to location {_speed} meters behind {_baseloc}
					set {_flying} to false
					continue
		
		# ヒット確認(player)
		set {_dis} to distance between {_baseloc} and location 1 meter above {_target}
		if {_dis} <= 1:
			set {_flying} to false
			continue

		wait a tick
	kitEffect_HomingStar_Blast({_player}, {_target}, {_baseloc})

local function kitEffect_HomingStar_Blast(player: player, target: player, loc: location):
	set {_color} to kitTeamRGB(getTeam({_target}))
	set {_firework} to spawnFireworks_PLAYER({_player}, {_loc}, 0, setFireWorksExplosion("star", {_color}, {_color}, true, false))
	set metadata value "firework" of {_firework} to true
	set metadata value "firework - shooter" of {_firework} to {_player}

		

local function kitParticle_HomingStar_Shoot(loc: location, target: player):
	playSound("entity.firework_rocket.launch", 1.25, 1.25, {_loc})
	playSound("entity.firework_rocket.launch", 1.25, 1.25, {_target}, true)

	set {_team} to getTeam({_target})
	set {_blockparticle} to "%{_team}% concrete" parsed as block data
	loop a random integer between 50 and 80 times:
		spawnParticle_Vector(firework, randomVector(1), 0.5, {_loc})
		chance of 50%:
			set {_el} to {_loc}
			add a random number between -1 and 1 to x-pos of {_el}
			add a random number between -1 and 1 to y-pos of {_el}
			add a random number between -1 and 1 to z-pos of {_el}
			spawnParticle_BlockData(falling_dust, {_blockparticle}, {_el})

local function kitParticle_HomingStar_Trail(loc: location, target: player):
	spawnParticle(wax_off, {_loc})
	set {_color} to kitTeamRGB(getTeam({_target}))
	loop a random integer between 1 and 5 times:
		set {_el} to {_loc}
		add a random number between -0.5 and 0.5 to x-pos of {_el}
		add a random number between -0.5 and 0.5 to y-pos of {_el}
		add a random number between -0.5 and 0.5 to z-pos of {_el}
		spawnParticle_Color(entity_effect, {_color}, {_el})

		chance of 5%:
			set {_v} to setVector({_loc}, {_el})
			spawnParticle_Vector(firework, {_v}, 0.3, {_loc})