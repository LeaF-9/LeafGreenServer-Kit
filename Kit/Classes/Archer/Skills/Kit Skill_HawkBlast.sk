# Hawk Blast

function kitEffect_HawkBlast(player: player):
	kitStats_SET({_player}, "HawkBlast", true)
	kitStats_SET({_player}, "HawkBlastLoc", (location of (head of {_player})))
	playSound("entity.phantom.bite", 1, 2, {_player})
	kitMsg({_player}, "§f鷹を§b放出§fします...")
	set {_count} to 0
	# --- 炸裂までの挙動 ---
	while kitStats_GET({_player}, "HawkBlast") is true:
		add 1 to {_count}
		set {_tool} to {_player}'s tool
		if {_count} >= 100:  # 100mを超えた際の挙動
			kitStats_DELETE({_player}, "HawkBlast")
		else if kitItemAllChecker({_tool}, "Archer", "Skill", 7) is false:  # 持っているアイテムがスキルのものでは無い場合の挙動
			kitStats_DELETE({_player}, "HawkBlast")
		else:
			set {_locnow} to location of head of {_player}
			set {_baseloc} to kitStats_GET({_player}, "HawkBlastLoc")
			set yaw of {_baseloc} to yaw of {_locnow}
			set pitch of {_baseloc} to pitch of {_locnow}
			set {_block} to location 1 meter in front of {_baseloc}
			kitStats_SET({_player}, "HawkBlastLoc", {_block})
			if block at {_block} is not passable:  # ブロックと衝突した際の挙動
				kitStats_DELETE({_player}, "HawkBlast")
			kitParticle_HawkBlast_Trail({_block})
			if mod({_count}, 5) is 0:
				playSound("entity.phantom.flap", 1, 2, {_block})
			drawHawkBlast({_block})
			wait a tick
	# --------------------
	# --- 炸裂時の挙動 ---
	set {_HawkBlastLoc} to kitStats_GET({_player}, "HawkBlastLoc")
	if {_HawkBlastLoc} is set:
		kitMsg({_player}, "<##f0f8ff>鷹が<##00bfff>炸裂<##f0f8ff>した!")
		set {_bloc} to kitStats_GET({_player}, "HawkBlastLoc")
		kitStats_DELETE({_player}, "HawkBlast")
		kitStats_DELETE({_player}, "HawkBlastLoc")
		playSound("entity.phantom.hurt", 1, 0.5, {_bloc})
		set {_y} to 0
		set {_rad} to 0
		set {_len} to 8
		loop 16 times:
			loop 9 times:
				add 10 to {_rad}
				add 0.06 to {_y}
				subtract 0.06 from {_len}
				set {_el} to {_bloc}
				add {_len} * sin({_rad}) to x-coordinate of {_el}
				add {_len} * cos({_rad}) to z-coordinate of {_el}
				add {_y} to y-coordinate of {_el}
				kitParticle_HawkBlast_Dust({_el})
				set {_el} to {_bloc}
				set {_truerad} to {_rad} + 180
				add {_len} * sin({_truerad}) to x-coordinate of {_el}
				add {_len} * cos({_truerad}) to z-coordinate of {_el}
				subtract {_y} from y-coordinate of {_el}
				kitParticle_HawkBlast_Dust({_el})
			wait a tick
		wait 4 ticks
		set {_hig} to 8
		loop 4 times:
			loop 5 times:
				subtract 0.4 from {_hig}
				set {_el} to {_bloc}
				add {_hig} to y-coordinate of {_el}
				spawnParticle(end_rod, {_el})
				set {_el} to {_bloc}
				subtract {_hig} from y-coordinate of {_el}
				spawnParticle(end_rod, {_el})
			wait a tick
		playSound("entity.phantom.death", 1, 0.8, {_bloc})
		loop 100 times:
			spawnParticle_Vector(end_rod, randomVector(1), 0.5, {_bloc})
		loop all entities in radius 8 around {_bloc}:
			kitCheckTeam(loop-entity, {_player}, false) is true
			kitDamage({_player}, loop-entity, 3, "鷹の閃光")
			apply glowing 1 to loop-entity for 3 seconds
			kitEffectDescription(loop-entity, "§4§l❤3 §8& §e§l発光")
			sendTimeBossbar_RED(loop-entity, "§e発光", 60)
			playSound("entity.phantom.bite", 0.75, 1, loop-entity)
			if checkEntityType(loop-entity, player) is true:
				message formatted "§e鷹の閃光§6がヒットした!" to loop-entity
			if {_hitsound} is not set:
				set {_hitsound} to true
		if {_hitsound} is true:
			playSound("entity.phantom.bite", 0.75, 1, {_player}, true)
	# ------------------

function kitParticle_HawkBlast_Trail(loc: location):
	loop 5 times:
		spawnParticle(end_rod, {_loc})
		wait a tick

function kitParticle_HawkBlast_Dust(loc: location):
	loop 3 times:
		spawnParticle_Dust(rgb(200, 240, 250), 1, {_loc})
		wait a tick

function drawHawkBlast(loc: location):
	set {_froloc} to location 0.6 meters in front of {_loc}
	set {_yaw} to yaw of {_froloc} + 180
	if {_yaw} >= 360:
		subtract 360 from {_yaw}
	set yaw of {_froloc} to {_yaw}
# 胴体中心
	loop 5 times:
		set {_el} to location loop-number * 0.2 meters in front of {_froloc}
		spawnParticle_Dust(rgb(0, 255, 255), 1, {_el})
# 尾
	set {_cariloc} to location 1.2 meters in front of {_froloc}
	set pitch of {_cariloc} to 0
	set {_el} to location 0.1 meters to the left of {_cariloc}
	spawnParticle_Dust(rgb(0, 255, 255), 1, {_el})
	set {_el} to location 0.1 meters to the right of {_cariloc}
	spawnParticle_Dust(rgb(0, 255, 255), 1, {_el})
# 胴体端
	set {_yokloc} to location 0.4 meters in front of {_loc}
	set {_yaw} to yaw of {_yokloc} + 180
	if {_yaw} >= 360:
		subtract 360 from {_yaw}
	set yaw of {_yokloc} to {_yaw}
	loop 7 times:
		set {_cariloc} to location loop-number * 0.1 meters in front of {_yokloc}
		set pitch of {_cariloc} to 0
		set {_el} to location 0.1 meters to the left of {_cariloc}
		spawnParticle_Dust(rgb(50, 255, 255), 1, {_el})
		set {_el} to location 0.1 meters to the right of {_cariloc}
		spawnParticle_Dust(rgb(50, 255, 255), 1, {_el})
# 背
	set {_seloc} to location 0.3 meters in front of {_loc}
	set {_yaw} to yaw of {_seloc} + 180
	if {_yaw} >= 360:
		subtract 360 from {_yaw}
	set yaw of {_seloc} to {_yaw}
	set pitch of {_seloc} to pitch of {_seloc} - 90
	loop 3 times:
		set {_upbaseloc} to location 0.1 * loop-number meters in front of {_seloc}
		set {_upfroloc} to {_upbaseloc}
		set pitch of {_upfroloc} to pitch of {_upfroloc} + 90
		set {_upfroloc} to location 0.1 * loop-number meters in front of {_upfroloc}
		loop 3 times:
			set {_el} to location loop-number-2 * 0.1 meters in front of {_upfroloc}
			spawnParticle_Dust(rgb(0, 255, 255), 1, {_el})
# 翼
	set {_floc} to location 0.3 meters in front of {_loc}
	set {_yaw} to yaw of {_floc} + 180
	if {_yaw} >= 360:
		subtract 360 from {_yaw}
	set yaw of {_floc} to {_yaw}
	loop 3 times:
		set {_bloc} to location 0.1 * loop-number meters in front of {_floc}
		loop 3 times:
			set {_ploc} to {_bloc}
			set pitch of {_ploc} to 0
			set {_lloc} to location 0.2 * loop-number-1 meters to the left of {_ploc}
			set {_rloc} to location 0.2 * loop-number-1 meters to the right of {_ploc}
			set pitch of {_lloc} to pitch of {_bloc}
			set pitch of {_rloc} to pitch of {_bloc}
			set {_el} to location loop-number-2 * 0.1 meters in front of {_lloc}
			spawnParticle_Dust(rgb(50 * loop-number-1, 255, 255), 1, {_el})
			set {_el} to location loop-number-2 * 0.1 meters in front of {_rloc}
			spawnParticle_Dust(rgb(50 * loop-number-1, 255, 255), 1, {_el})

on leftclick:
	metadata value "gametype" of player is "Kit"
	set {_HawkBlast} to kitStats_GET(player, "HawkBlast")
	{_HawkBlast} is true
	set {_tool} to player's tool
	kitItemAllChecker({_tool}, "Archer", "Skill", 7) is true
	kitStats_DELETE(player, "HawkBlast")