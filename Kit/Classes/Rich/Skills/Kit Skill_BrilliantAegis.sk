# skill-name: Brilliant Aegis

options:
	effect-tick: 200
	effect-radius: 7

	cut-multiplier: 0.7

	drop-damage-min: 1
	drop-damage-max: 2

	drop-end-min: 3
	drop-end-max: 5

	drop-break-min: 5
	drop-break-max: 10

	metadata-aegis: "Brilliant Aegis - Entity"
	metadata-shield: "Brilliant Aegis - Shield"

function kitEffect_BrilliantAegis(player: player):
	nameCT({_player}, "Brilliant Aegis")
	kitMsg({_player}, "<##f7ea33>黄金の像<##f2f39f>を設置します!")

	set {_placeloc} to location of {_player}
	particlePlace({_placeloc})
	soundPlace({_placeloc})

	set {_head} to getKitItems("Rich", "Brilliant Aegis - Head")
	set {_chest} to getKitItems("Rich", "Brilliant Aegis - Chestplate")
	set {_leggs} to getKitItems("Rich", "Brilliant Aegis - Leggings")
	set {_boots} to getKitItems("Rich", "Brilliant Aegis - Boots")

	set {_aegis} to kitSpawnMob({_player}, armor stand, {_placeloc}, false)
	{_aegis}.setHelmet({_head})
	{_aegis}.setChestplate({_head})
	{_aegis}.setLeggings({_head})
	{_aegis}.setBoots({_head})

	{_aegis}.setArms(false)
	{_aegis}.setBasePlate(false)
	{_aegis}.setCanMove(false)

	{_aegis}.setGravity(false)
	{_aegis}.setPersistent(true)
	{_aegis}.setSilent(true)

	set {_uuid} to a random uuid
	set metadata value {@metadata-aegis} of {_aegis} to {_uuid}
	sendTimeBossbar_GREEN({_player}, "Brilliant Aegis", {@effect-tick})

	loop {@effect-tick} times:
		if {_aegis}.isDead():
			set {_dead} to true
			continue
		
		set {_aegisloc} to location of {_aegis}
		particleAura({_aegisloc})
		delete {_entering::*}
		loop all entities in radius {@effect-radius} around {_aegisloc}:
			kitCheckTeam({_player}, loop-entity, true) is true
			add loop-entity to {_entered::*} if {_entered::*} does not contain loop-entity
			if {_entering::*} does not contain loop-entity:
				add loop-entity to {_entering::*} if {_entering::*}
				applyAegisShield(loop-entity, {_uuid})
			particleEntering(loop-entity)
		
		loop {_entered::*}:
			set {_loop-entity} to loop-value-2
			continue if {_entering::*} contains {_loop-entity}

			remove {_loop-entity} from {_entered::*}
			removeAegisShield({_loop-entity}, {_uuid})

		wait a tick
	
	set {_drop} to a random integer between {@drop-end-min} and {@drop-end-max}
	if {_dead}:
		set {_drop} to a random integer between {@drop-break-min} and {@drop-break-max}
		particleBreak({_aegisloc})
		soundBreak({_aegisloc})
	
	else:
		particleEclipse({_aegisloc})
		soundEclipse({_aegisloc})
	
	kitDropGolds_Rich({_player}, {_aegisloc}, {_drop})
	{_aegis}.remove()
	loop all entities:
		removeAegisShield(loop-entity, {_uuid})

local function applyAegisShield(entity: entity, uuid: uuid):
	set metadata value {@metadata-shield} of {_entity} to {_uuid}
	particleApply({_entity})
	soundApply({_entity})

local function removeAegisShield(entity: entity, uuid: uuid):
	stop if metadata value {@metadata-shield} of {_entity} is not {_uuid}
	delete metadata value {@metadata-shield} of {_entity}
	particleLeave({_entity})
	soundLeave({_entity})

on damage with priority HIGH:
	set {_victim} to victim
	metadata value {@metadata-shield} of {_victim} is set

	setDamageModification_MUL({_victim}, 0.7)
	particleDamage({_victim})
	soundDamage({_victim})

	kitEffectDescription({_victim}, "§a§lx0.7")



local function particlePlace(loc: location):
	set {_amount.du} to 10
	add rgb(240, 228, 120) to {_colors::*}
	add rgb(233, 214, 44) to {_colors::*}
	add rgb(244, 253, 159) to {_colors::*}

	set {_baseloc} to location 1 meter above {_loc}
	loop {_amount.du} times:
		set {_el} to moveRandomLocation({_baseloc}, 1)
		set {_color} to a random element out of {_colors::*}
		spawnParticle_Dust({_color}, 2.5, {_el})

	set {_amount.er} to 30

	loop {_amount.er} times:
		set {_v} to randomVector()
		spawnParticle_Vector(end_rod, {_v}, 0.5, {_baseloc})

local function particleAura(loc: location):

local function particleApply(loc: location):

local function particleEntering(entity: entity):

local function particleLeave(entity: entity):

local function particleBreak(loc: location):

local function particleDamage(entity: entity):

local function soundPlace(loc: location):
	playSound("entity.allay.ambient_without_item", 1, 1.2, {_loc})

local function soundLeave(entity: entity):

local function soundBreak(loc: location):

local function soundDamage(entity: entity):