# skill-name: Ignoble Fidelity

options:
	max-distance: 20
	tick-per-meter: 1

	effect-radius: 10
	effect-tick: 20

	metadata-marker: "Ignoble Fidelity - Marker"

	drop-golds: 10

import:
	com.destroystokyo.paper.entity.Pathfinder
	org.bukkit.inventory.ItemStack
	org.bukkit.Material
	org.bukkit.attribute.Attribute

function kitEffect_IgnobleFidelity(player: player):
	kitMsg({_player}, "<##5a5a0e>醜い忠誠を誘います...")
	set {_tool} to tool of {_player}

	set {_baseloc} to head of {_player}
	set {_m} to 0
	set {_addm} to {@tick-per-meter}

	soundLaunch({_player})
	particleLaunch({_player})

	set {_true} to true
	while {_true} is true:
		if checkEating({_player}) is false:
			set {_delete} to true
		set {_nowtool} to tool of {_player}
		if {_nowtool} is not {_tool}:
			set {_delete} to true
		if {_m} >= {@max-distance}:
			set {_delete} to true

		if {_delete} is true:
			delete {_true}
			continue
		set {_playerloc} to location of {_player}
		set yaw of {_baseloc} to yaw of {_playerloc}
		set pitch of {_baseloc} to pitch of {_playerloc}

		add {_addm} to {_m}
		set {_loc} to location {_m} meters in front of {_baseloc}

		particleBeam({_player}, {_loc})
		wait a tick
	
	set {_centerloc} to {_loc}
	detectCT({_player}, {_tool})
	particleBlast({_centerloc})
	soundBlast({_centerloc})
	forceMove({_player}, {_centerloc})

local function forceMove(player: player, dest: location):
	loop all entities in radius {@effect-radius} around {_player}:
		kitCheckTeam(loop-entity, {_player}, false) is true
		if checkEntityType(loop-entity, player) is true:
			message formatted "<##c9bb20>§o身体が金に釣られていく!" to loop-entity
			sendTimeBossbar_RED(loop-entity, "忠金状態", {@effect-tick})
			add loop-entity to {_targets.player::*}
		else:
			add loop-entity to {_targets.entity::*}
		particleHit(loop-entity)
		soundHit(loop-entity)
	
	set {_sizeCheck} to (size of {_targets.player::*}) + (size of {_targets.entity::*})
	if {_sizeCheck} is 0:
		kitMsg({_player}, "<##7e350b>§o誰も釣れませんでした...")
		stop
	
	spawnGoldDisplay({_dest})
	
	loop {_targets.player::*}:
		set {_loop-player} to loop-value

		set {_spawnloc} to location of {_loop-player}
		set {_entity} to kitSpawnMob({_player}, skeleton, {_spawnloc}, false)

		set metadata value {@metadata-marker} of {_entity} to true
		applyEffect({_entity}, invisibility, 1, 12000, true, "none")
		applyEffect({_entity}, weakness, 10, 12000, true, "none")
		applyEffect({_entity}, speed, 5, 12000, true, "none")
		{_entity}.setSilent(true)
		{_entity}.getAttribute(Attribute.ATTACK_DAMAGE).setBaseValue(0)

		set {_equipment} to {_entity}.getEquipment()
		set {_air} to new ItemStack(Material.AIR)
		{_equipment}.setHelmet({_air})
		{_equipment}.setChestplate({_air})
		{_equipment}.setLeggings({_air})
		{_equipment}.setBoots({_air})
		{_equipment}.setItemInMainHand({_air})
		{_equipment}.setItemInOffHand({_air})

		set {_markers::%{_loop-player}%} to {_entity}
	
	loop {@effect-tick} times:
		loop {_targets.player::*}:
			set {_loop-player} to loop-value-2
			set {_marker} to {_markers::%{_loop-player}%}

			delete target of {_marker}
			set {_path} to {_marker}.getPathfinder()
			{_path}.moveTo({_dest})

			set {_tploc} to location of {_marker}
			set {_fromloc} to location 1.5 meters above {_tploc}
			set {_direction} to setVector({_fromloc}, {_dest})
			set yaw of {_tploc} to yaw of {_direction}
			set pitch of {_tploc} to pitch of {_direction}

			teleport {_loop-player} to {_tploc}
			particleControl({_loop-player})

			set {_nowloc} to location 1 meter above {_loop-player}
			set {_distance} to distance between {_nowloc} and {_dest}
			if {_distance} <= 1.5:
				dropGolds({_player}, {_dest})
				particleGoal({_loop-player})
				soundGoal({_loop-player})
				remove {_loop-player} from {_targets.player::*}

		loop {_targets.entity::*}:
			set {_loop-entity} to loop-value-2
			set {_path} to {_loop-entity}.getPathfinder()
			{_path}.moveTo({_dest})

			set {_nowloc} to location 1 meter above {_loop-entity}
			set {_distance} to distance between {_nowloc} and {_dest}
			if {_distance} <= 2:
				dropGolds({_player}, {_dest})
				particleGoal({_loop-entity})
				soundGoal({_loop-entity})
				remove {_loop-entity} from {_targets.entity::*}

		wait a tick
	
	loop {_markers::*}:
		loop-value.remove()
	
	particleDelete({_dest})
	soundDelete({_dest})

local function dropGolds(player: player, loc: location):
	kitDropGolds_Rich({_player}, {_loc}, {@drop-golds})

local function spawnGoldDisplay(loc: location):
	spawn an item display at {_loc}
	set {_entity} to spawned item display

	setBrightness({_entity})
	set {_color} to rgb(255, 238, 0).asBukkitColor()
	{_entity}.setGlowColorOverride({_color})
	{_entity}.setGlowing(true)
	{_entity}.setTeleportDuration(1)
	{_entity}.setViewRange(1000)
	{_entity}.setInterpolationDuration(1)
	set {_axisAngle4f} to getQuaternionf(0, 0, 0, 1)
	set {_scale} to getVector3f(1.5, 1.5, 1.5)
	set {_translation} to getVector3f(0, 0, 0)
	setTransformation({_entity}, {_axisAngle4f}, {_axisAngle4f}, {_translation}, {_scale})
	setDisplayItem({_entity}, gold block)

	set {_tploc} to {_loc}
	set pitch of {_tploc} to 0
	set {_addrad} to 30

	loop {@effect-tick} times:
		add {_addrad} to yaw of {_tploc}
		teleport {_entity} to {_tploc}
		wait a tick
	
	{_entity}.remove()



local function particleLaunch(player: player):
	set {_loc} to location 1 meter above {_player}
	set {_amount} to a random integer between 30 and 50
	loop {_amount} times:
		set {_v} to randomVector()
		spawnParticle_Vector(trial_spawner_detection, {_v}, 0.7, {_loc})

local function particleBeam(player: player, loc: location):
	set {_baseloc} to head of {_player}
	set {_color.trail} to rgb(201, 183, 44)
	spawnParticle_Trail({_color.trail}, {_loc}, 2 tick, {_baseloc})

	add rgb(174, 200, 26) to {_colors::*}
	add rgb(151, 151, 13) to {_colors::*}
	add rgb(158, 130, 19) to {_colors::*}

	set {_color.dust} to a random element out of {_colors::*}
	spawnParticle_Dust({_color.dust}, 2.3, {_loc})

local function particleBlast(loc: location):
	spawnParticle(flash, {_loc})
	set {_amount} to a random integer between 25 and 35
	loop {_amount} times:
		set {_v} to randomVector()
		spawnParticle_Vector(firework, {_v}, 0.8, {_loc})

local function particleHit(entity: entity):
	set {_baseloc} to location 1 meter above {_entity}
	set {_amount} to a random integer between 20 and 30
	loop {_amount} times:
		set {_el} to moveRandomLocation({_baseloc}, 1)
		spawnParticle(dripping_honey, {_el})

local function particleControl(entity: entity):
	set {_baseloc} to location 1 meter above {_entity}
	chance of 30%:
		stop
	set {_el} to moveRandomLocation({_baseloc}, 1)
	spawnParticle(falling_honey, {_el})

local function particleGoal(entity: entity):
	add rgb(178, 169, 8) to {_colors::*}
	add rgb(197, 170, 47) to {_colors::*}
	add rgb(155, 158, 67) to {_colors::*}

	set {_count} to 5
	loop {_count} times:
		set {_baseloc} to location 1 meter above {_entity}
		set {_amount} to a random integer between 1 and 3
		loop {_amount} times:
			set {_el} to moveRandomLocation({_baseloc}, 1)
			set {_size} to a random number between 2 and 3
			set {_color} to a random element out of {_colors::*}
			spawnParticle_Dust({_color}, {_size}, {_el})
		wait 2 ticks

local function particleDelete(loc: location):
	set {_amount} to a random integer between 15 and 25
	loop {_amount} times:
		set {_el} to moveRandomLocation({_loc}, 0.75)
		set {_v} to randomVector()
		spawnParticle_Vector(smoke, {_v}, 0.5, {_el})

local function soundLaunch(player: player):
	playSound("entity.zombie_villager.converted", 1, 1.15, {_player})

local function soundBlast(loc: location):
	playSound("entity.zombie.death", 1, 0.8, {_loc})

local function soundHit(entity: entity):
	playSound("entity.elder_guardian.curse", 1, 1.6, {_entity})

local function soundGoal(entity: entity):
	playSound("entity.firework_rocket.large_blast", 1, 0.8, {_entity})

local function soundDelete(loc: location):
	playSound("entity.zombie.infect", 2, 1.3, {_loc})