# skill-name: Heat Flash

options:
	flash-tick-speed: 0.5
	flash-max-tick: 60
	ignite-radius: 5
	ignite-tick: 100
	flash-radius: 30
	flash-tick: 120



function kitEffect_HeatFlash(player: player):
	stop if kitStats_GET({_player}, "HeatFlash") is true

	set {_baseloc} to location of head of {_player}
	kitMsg({_player}, "§e§l閃光弾§dを発射します!")
	kitStats_SET({_player}, "HeatFlash", true)
	kitSound_HeatFlash_Launch({_player})

	set {_m} to 0
	loop {@flash-max-tick} times:
		if kitStats_GET({_player}, "HeatFlash") is not set:
			continue
		
		add {@flash-tick-speed} to {_m}
		set {_effloc} to location {_m} meters in front of {_baseloc}
		kitParticle_HeatFlash_Bullet({_effloc}, loop-number)
		wait a tick
	
	# ignite
	nameCT({_player}, "Heat Flash")
	kitParticle_HeatFlash_Blast({_effloc})
	loop all entities in radius {@ignite-radius} around {_effloc}:
		kitCheckTeam(loop-entity, {_player}, false) is true
		LastKiller(loop-entity, {_player})
		ignite loop-entity for convertTickTime({@ignite-tick})
		set {_igniteSeconds} to {@ignite-tick} / 20
		kitEffectDescription(loop-entity, "§4§l炎上")
		kitParticle_HeatFlash_Ignite(loop-entity)

	# flash
	kitParticle_HeatFlash_Flash({_effloc})
	loop all players in radius {@flash-radius} around {_effloc}:
		kitCheckTeam(loop-player, {_player}, false) is true
		checkCanSee(loop-player, {_effloc}) is true
		if {damager.%loop-player%::*} does not contain {_player}:
			add {_player} to {damager.%loop-player%::*}
		applyEffect(loop-player, blindness, 1, convertTickTime({@flash-tick}))
		kitParticle_HeatFlash_Dazzle(loop-player)
		message formatted "§e§l閃光§6を食らった!" to loop-player
		set {_flashSeconds} to ({@flash-tick} - 20) / 20
		kitEffectDescription(loop-entity, "§e§l閃光")
		sendTimeBossbar_RED(loop-entity, "§e§l閃光", {@flash-tick})

function kitEffect_HeatFlash_LeftClick(player: player, event: object):
	kitStats_GET({_player}, "HeatFlash") is true
	kitStats_DELETE({_player}, "HeatFlash")



# 弾道の演出
local function kitParticle_HeatFlash_Bullet(loc: location, num: number):
	spawnParticle_DustTransition(rgb(255, 247 ,153), rgb(255, 255, 255), 0.5, {_loc})

	set {_radius} to 0.5
	set {_rad} to 30 * {_num}
	set {_el} to {_loc}
	set {_m1} to {_el}
	set pitch of {_m1} to pitch of {_m1} - 90
	set {_test1} to {_radius} * cos({_rad})
	set {_t1} to location {_test1} meters in front of {_m1}
	set {_m2} to {_el}
	set pitch of {_m2} to 0
	set {_test2} to {_radius} * sin({_rad})
	set {_t2} to location {_test2} meters to the right of {_m2}
	set x-pos of {_el} to x-pos of {_t1} + x-pos of {_t2} - x-pos of {_el}
	set y-pos of {_el} to y-pos of {_t1} + y-pos of {_t2} - y-pos of {_el}
	set z-pos of {_el} to z-pos of {_t1} + z-pos of {_t2} - z-pos of {_el}
	spawnParticle(electric_spark, {_el})

local function kitParticle_HeatFlash_Blast(loc: location):
	playSound("entity.firework_rocket.blast", 3, 1.4, {_loc})
	# 着火範囲
	set {_els::*} to particleLocation_Sphere({_loc}, 9, {@ignite-radius})
	loop {_els::*}:
		set {_el} to loop-value
		set {_d} to dice(3)
		if {_d} is 1:
			set {_color.f} to rgb(255, 201, 147)
		else if {_d} is 2:
			set {_color.f} to rgb(254, 242, 99)
		else:
			set {_color.f} to rgb(255, 247, 153)
		spawnParticle_DustTransition({_color.f}, rgb(255, 255, 255), 1.5, {_el})
	
	loop all blocks in radius {@ignite-radius} around {_loc}:
		loop-block is passable
		chance of 50%:
			spawnParticle(small_flame, location of loop-block)

local function kitParticle_HeatFlash_Ignite(entity: entity):
	playSound("entity.blaze.shoot", 1, 1.5, {_entity})
	set {_baseloc} to location 1 meter above {_entity}
	loop 30 times:
		spawnParticle_Vector(flame, randomVector(), 0.3, {_baseloc})

local function kitParticle_HeatFlash_Flash(loc: location):
	# 発光
	spawnParticle(flash, {_loc})

	set {_now} to now
	set {_el} to {_loc}
	add -0.25 to y-coordinate of {_el}
	set {_nbt} to nbt compound of "{NoGravity:1b,Size:0.5,Invulnerable:1,PersistenceRequired:1,NoAI:1,Silent:1,Glowing:1,DropItem:0,active_effects:[{id:invisibility,duration:12000,amplifier:0,show_particles:0b}]}"
	spawn a magma cube at {_el} with nbt {_nbt}
	set metadata value "Heat Flash - Glowing" of spawned magma cube to {_now}


	# フラッシュ
	loop 100 times:
		set {_power} to 50
		spawnParticle_Vector(wax_on, randomVector(), {_power}, {_loc})
		spawnParticle_Vector(wax_off, randomVector(), {_power}, {_loc})
	
	wait 10 ticks
	loop all magma cubes:
		metadata value "Heat Flash - Glowing" of loop-magma cube is {_now}
		delete loop-magma cube

local function kitParticle_HeatFlash_Dazzle(player: player):
	playSound("entity.experience_orb.pickup", 3, 0.6, {_player})
	set {_rad} to 0
	loop 120 times:
		set {_el} to location of head of {_player}
		add 36 to {_rad}
		add 0.5 * sin({_rad}) to x-pos of {_el}
		add 0.5 * cos({_rad}) to z-pos of {_el}
		spawnParticle(electric_spark, {_el})
		wait a tick



local function kitSound_HeatFlash_Launch(player: player):
	playSound("entity.firework_rocket.launch", 1, 0.6, {_player})