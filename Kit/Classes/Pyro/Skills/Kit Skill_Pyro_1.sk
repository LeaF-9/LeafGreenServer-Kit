# skill-name: Flame Blast

on projectile hit:
	projectile is a large fireball
	metadata value "flame blast - projectile" of projectile is true
	set metadata value "flame blast - projectile" of projectile to false
	kitEffect_FlameBlast_Explosion(shooter, location of projectile)

on damage of player:
	damage was caused by projectile
	metadata value "flame blast - projectile" of projectile is set
	cancel event



function kitSkill_Pyro_1(player: player):
	toolCT({_player}, "Pyro", 1)
	kitEffect_FlameBlast({_player})



local function kitEffect_FlameBlast(player: player):
	set {_baseloc} to location of head of {_player}
	set {_vector} to setVector({_baseloc}, location 10 meters in front of {_baseloc}, 1)
	shoot a large fireball from {_baseloc} at speed 1
	setShooter(shot large fireball, {_player})
	set metadata value "flame blast" of shot large fireball to {_player}
	set metadata value "flame blast - projectile" of shot large fireball to true
	kitMsg({_player}, "§c周辺を焼き尽くす§4§l爆炎弾§cを発射します!")
	kitParticle_FlameBlast_Fireball(shot large fireball)

	set {_enable} to true
	while {_enable} is true:
		delete {_exist}
		loop all projectiles:
			loop-projectile is a large fireball
			metadata value "flame blast" of loop-projectile is {_player}
			metadata value "flame blast - projectile" of loop-projectile is true
			set {_exist} to loop-projectile
		if {_exist} is not set:
			delete {_enable}
			continue
		
		set velocity of {_exist} to {_vector}
		wait a tick

local function kitEffect_FlameBlast_Explosion(player: player, loc: location):
	kitParticle_FlameBlast_Explosion({_loc})
	loop all entities in radius 5 around {_loc}:
		kitCheckTeam(loop-entity, {_player}, false) is true
		kitDamage({_player}, loop-entity, 2)
		ignite loop-entity for 5 seconds
	loop all blocks in radius 5 around {_loc}:
		loop-block is air
		block below loop-block is not passable
		set {_lb::%location of loop-block%} to location of loop-block
		set loop-block to fire
		add location of loop-block to {Block.%{_player}%::*}
	wait 5 seconds
	kitSound_FlameBlast_Extinguish({_loc})
	loop {_lb::*}:
		if block at loop-value is not air:
			set block at loop-value to air
			kitParticle_FlameBlast_Extinguish(loop-value)
		remove loop-value from {Block.%{_player}%::*}



local function kitParticle_FlameBlast_Fireball(proj: projectile):
	playSound("entity.ghast.shoot", 1, 0.8, location of {_proj})
	set {_enable} to true
	set {_rad} to 0
	wait a tick
	while {_enable} is true:
		if metadata value "flame blast - projectile" of {_proj} is false:
			delete {_enable}
			continue
		
		set {_loc} to location of {_proj}
		if {_proloc} is set:
			if {_proloc} is {_loc}:
				delete {_enable}
				continue
			
			set {_fromloc} to setDirToVec(location 0.5 meters above {_proloc}, setVector({_proloc}, {_loc}))
			set {_distance} to distance between {_proloc} and {_loc}
			set {_loopnum} to ceil({_distance} * 2)
			set {_m} to 0
			loop {_loopnum} times:
				add 0.5 to {_m}
				set {_baseel} to location {_m} meters in front of {_fromloc}
				set {_baserad} to {_rad}

				set {_radius} to 0.75
				set {_ln} to 0
				loop 2 times:
					set {_elrad} to {_baserad} + (180 * {_ln})

					set {_el} to {_baseel}
					set {_m1} to {_el}
					set pitch of {_m1} to pitch of {_m1} - 90
					set {_test1} to {_radius} * cos({_elrad})
					set {_t1} to location {_test1} meters in front of {_m1}
					set {_m2} to {_el}
					set pitch of {_m2} to 0
					set {_test2} to {_radius} * sin({_elrad})
					set {_t2} to location {_test2} meters to the right of {_m2}
					set x-pos of {_el} to x-pos of {_t1} + x-pos of {_t2} - x-pos of {_el}
					set y-pos of {_el} to y-pos of {_t1} + y-pos of {_t2} - y-pos of {_el}
					set z-pos of {_el} to z-pos of {_t1} + z-pos of {_t2} - z-pos of {_el}
					spawnParticle(flame, {_el})

					add 1 to {_ln}

			add 10 to {_rad}
		set {_proloc} to location of {_proj}
		wait a tick

local function kitParticle_FlameBlast_Explosion(loc: location):
	playSound("entity.dragon_fireball.explode", 1, 1.75, {_loc})
	loop 100 times:
		spawnParticle_Vector(poof, randomVector(), 0.75, {_loc})
	loop all blocks in radius 5 around {_loc}:
		loop-block is passable
		chance of 30%:
			spawnParticle_Vector(trial_spawner_detection, vector(0, 0.1, 0), 0.5, location of loop-block)
	set {_els::*} to particleLocation_Sphere({_loc}, 11, 5)
	loop {_els::*}:
		spawnParticle(flame, loop-value)

local function kitParticle_FlameBlast_Extinguish(loc: location):
	spawnParticle(cloud, {_loc})



local function kitSound_FlameBlast_Extinguish(loc: location):
	playSound("block.fire.extinguish", 1, 1.5, {_loc})