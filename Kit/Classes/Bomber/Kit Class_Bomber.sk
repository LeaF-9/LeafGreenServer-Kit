# Bomberのスキル Ver1.0.0

# Abilities
on damage of player with priority LOW:
	damage was caused by projectile
	projectile is an arrow
	set {_attacker} to getAttacker(victim)
	{Class::%{_attacker}%} is "Bomber"
	setDamageModification_MUL(victim, 0.5)

on death of player:
	if {Class::%victim%} is "Bomber":
		loop all primed tnts:
			metadata value "attacker" of loop-primed tnt is "%victim%"
			metadata value "ult-bomber" of loop-primed tnt is not set
			delete loop-primed tnt
		set {_v} to location of victim
		add 1 to y-coordinate of {_v}
		loop 3 times:
			spawn a primed tnt at {_v}
			push spawned primed tnt east at speed random number from -0.5 to 0.5
			push spawned primed tnt north at speed random number from -0.5 to 0.5
			set metadata value "attacker" of spawned primed tnt to victim
			set metadata value "kit-bomber-dying" of spawned primed tnt to true
			setFuseTime(spawned primed tnt, 20)
	if {Class::%{LastKiller::%victim%}%} is "Bomber":
		give 2 tnt to {LastKiller::%victim%}
		give 4 arrow to {LastKiller::%victim%}

on explode:
	cancel event
	metadata value "kit-bomber-dying" of event-entity is true
	set {_entity} to event-entity
	set {_loc} to event-location
	set {_attacker} to metadata value "attacker" of {_entity}
	set {_power} to 2
	set {_bool} to false
	
	set {_values::player} to {_attacker}
	set {_values::location} to {_loc}
	call a custom event "GasSprayInduction" with {_values::*}

	set {_round} to {_power} * 2
	playSound("entity.generic.explode", {_power}, 1, {_loc})
	if {_power} < 2:
		spawnParticle(explosion, {_loc})
	else:
		spawnParticle(explosion_emitter, {_loc})
	loop all players in radius {_round} around {_loc}:
		{team::%loop-player%} is not {team::%{_attacker}%}
		# ダメージ処理
		set {_distance} to distance between {_loc} and loop-player  # 距離
		set {_expose} to kitCalcExpose(loop-player, {_loc})
		set {_impact} to ({_round} - {_distance}) / 2 * {_expose}
		set {_damage} to {_impact} + 0.1
		kitDamage({_attacker}, loop-player, {_damage}, "爆発", true)
		set {_hit} to true
	if {_hit} is true:
		playSound("entity.experience_orb.pickup", 1, 2, {_attacker}, true)

# Timer
function kitTimerBomber(player: player):
	while {Class::%{_player}%} is "Bomber":
		loop 10 times:
			if {Class::%{_player}%} is "Bomber":
				wait a second
		{Class::%{_player}%} is "Bomber"
		set {_tnt} to amount of tnt in {_player}'s inventory
		if {_tnt} < 9:
			give a tnt to {_player}
		set {_arrow} to amount of arrow in {_player}'s inventory
		if {_arrow} < 16:
			give an arrow to {_player}
	loop all creepers:
		metadata value "biologic-bomb" of loop-creeper is "%{_player}%"
		delete loop-creeper