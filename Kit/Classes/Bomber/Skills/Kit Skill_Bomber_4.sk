# Sticky Bomb

function kitSkill_Bomber_4(player: player):
	toolCT({_player}, "Bomber", 4)
	kitMsg({_player}, "§2粘着ボムを投擲します...")
	set {_loc} to location of {_player}
	add 1.2 to y-coordinate of {_loc}
	shoot a falling slime block from {_loc} at speed 1.5
	set metadata value "sticky-bomb" of shot entity to "%{_player}%"
	kitParticle_StickyBomb_Slime(shot entity)
	playSound("entity.slime.jump", 1, 1, {_player})
	loop 100 times:
		{_target} is not set
		loop all falling blocks:
			metadata value "sticky-bomb" of loop-falling block is "%{_player}%"
			set {_bl} to location of block at loop-falling block
			loop all entities in radius 2 around loop-falling block:
				{_target} is not set
				kitCheckTeam(loop-entity-2, {_player}, false) is true
				set {_target} to loop-entity-2
				set {_type} to "player"
				set {_loc} to location of {_target}
				playSound("entity.slime.squish", 1, 1, {_loc})
			loop all blocks in radius 1 around {_bl}:
				{_target} is not set
				loop-block is not passable
				if y-coordinate of loop-block = y-coordinate of {_bl}:
					if location of loop-block = {_bl}:
						set {_target} to location of loop-block
					else if location of loop-block = location 1 meters north of {_bl}:
						set {_target} to location 0.5 meters north of {_bl}
					else if location of loop-block = location 1 meters south of {_bl}:
						set {_target} to location 0.5 meters south of {_bl}
					else if location of loop-block = location 1 meters east of {_bl}:
						set {_target} to location 0.5 meters east of {_bl}
					else if location of loop-block = location 1 meters west of {_bl}:
						set {_target} to location 0.5 meters west of {_bl}
					subtract 1 from y-coordinate of {_target}
					set {_loc} to {_target}
				else if y-coordinate of loop-block > y-coordinate of {_bl}:
					set {_target} to location of {_bl}
					subtract 1.2 from y-coordinate of {_target}
					set {_loc} to {_target}
				else:
					set {_target} to location of {_bl}
					subtract 2 from y-coordinate of {_target}
					set {_loc} to {_target}
				set {_type} to "block"
				playSound("entity.slime.squish", 1, 1, {_loc})
		wait a tick
	loop all falling blocks:
		metadata value "sticky-bomb" of loop-falling block is "%{_player}%"
		delete loop-falling block
	spawn an armor stand at {_loc} with nbt compound from "{Invisible:1b,Invulnerable:1b,PersistenceRequired:1b,NoBasePlate:1b,NoGravity:1b,Marker:1b,ArmorItems:[{},{},{},{id:""slime_block"",Count:1b}],HandItems:[{},{}]}"
	set metadata value "gametype" of spawned armor stand to "Kit"
	set metadata value "sticky-armor" of spawned armor stand to "%{_player}%"
	if {_target} is set:
		if {_type} is "player":
			loop 40 times:
				if loop-number is 1, 11, 21 or 31:
					playSound("ui.button.click", 1, 2, {_loc})
				if {_target} is set:
					if kitCheckAlive({_target}) is true:
						set {_bl} to location of {_target}
						add 0.5 to y-coordinate of {_bl}
						set {_loc} to location of {_target}
						subtract 0.7 from y-coordinate of {_loc}
						loop all entities:
							type of loop-entity is an armor stand
							metadata value "sticky-armor" of loop-entity is "%{_player}%"
							teleport loop-entity to {_loc}
					else:
						delete {_target}
#			落ちる演出作る時頑張ってね
#				else:
				wait a tick
		else:
			loop all entities:
				type of loop-entity is an armor stand
				metadata value "sticky-armor" of loop-entity is "%{_player}%"
				teleport loop-entity to {_target}
			loop 40 times:
				if loop-number is 1, 11, 21 or 31:
					playSound("ui.button.click", 1, 2, {_loc})
				wait a tick
		loop all entities:
			type of loop-entity is an armor stand
			metadata value "sticky-armor" of loop-entity is "%{_player}%"
			delete loop-entity
		kitExplosion({_player}, 3, {_bl})

function kitParticle_StickyBomb_Slime(entity: entity):
	loop 60 times:
		spawnParticle(item_slime, {_entity})
		wait a tick