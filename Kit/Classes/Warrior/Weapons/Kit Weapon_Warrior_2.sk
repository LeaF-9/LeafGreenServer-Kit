# Pluto

on damage:
	set {_attacker} to getAttacker(victim)
	metadata value "gametype" of {_attacker} is "Kit"
	damage was caused by attack
	{Class::%{_attacker}%} is "Warrior"
	set {_tool} to {_attacker}'s tool
	if {-Stats.%{_attacker}%::PlutoCharge} is true:
		subtract 1 from {_attacker}'s health
		kitStun(victim, 100)
		playSound("entity.wither.break_block", 1, 0.9, victim)
		loop all blocks in radius 3 around victim:
			loop-block is air
			block below loop-block is not air
			set {_loc} to location of loop-block
			subtract 0.4 from y-coordinate of {_loc}
			spawnParticle_Block(dirt, {_loc})
		delete {-Stats.%{_attacker}%::PlutoCharge}

on sneak toggle:
	{Class::%player%} is "Warrior"
	player is not sneaking
	set {_tool} to player's tool
	{-Stats.%player%::PlutoCharge} is not set
	if kitItemAllChecker({_tool}, "Warrior", "Weapon", 2) is true:
		set {_num} to 0
		wait a tick
		set {_true} to false
		while {_true} is false:
			set {_tool} to player's tool
			if player is not sneaking:
				delete {_true}
			else if kitItemAllChecker({_tool}, "Warrior", "Weapon", 2) is false:
				delete {_true}
			else if {_num} is 100:
				set {_true} to true
			else:
				add 1 to {_num}
				set {_linenum} to round({_num} / 2)
				chargeActionBar(player, {_linenum}, 50)
				# --- チャージ中の音の演出 ---
				set {_sp} to {_num} / 200 + 0.5
				playSound("block.lava.pop", 0.5, {_sp}, player)
				# --------------------------
				# --- チャージ中のパーティクルの演出 ---
				kitEffect_Pluto_1(player)
				# ------------------------------------
				wait a tick
		if {_true} is true:
			set {-Stats.%player%::PlutoCharge} to true
			# --- チャージ完了時の音の演出 ---
			playSound("entity.warden.roar", 1, 2, player)
			# ------------------------------
			while {_true} is true:
				set {_tool} to player's tool
				if kitItemAllChecker({_tool}, "Warrior", "Weapon", 2) is false:
					delete {_true}
				else if {-Stats.%player%::PlutoCharge} is not set:
					set {_true} to false
				else:
					send action bar "§7§lPluto §bのチャージが完了しました!" to player
					# --- チャージ完了中のパーティクルの演出 ---
					chance of 10%:
						kitEffect_Pluto_2(player)
					# ---------------------------------------
					wait a tick
			if {_true} is not set:
				send action bar "§cチャージが中断されました!" to player
				delete {-Stats.%player%::PlutoCharge}
		else:
			send action bar "§8チャージに失敗しました" to player

function kitEffect_Pluto_1(player: player):
	set {_baseloc} to location of {_player}
	loop 3 times:
		set {_effloc} to {_baseloc}
		add a random number between -5 and 5 to x-coordinate of {_effloc}
		add a random number between -5 and 5 to z-coordinate of {_effloc}
		add a random number between -3 and 3 to y-coordinate of {_effloc}
		spawnParticle(cloud, {_effloc})
		set {_color} to a random number between 0 and 255
		loop 3 times:
			add a random number between -0.5 and 0.5 to x-coordinate of {_effloc}
			add a random number between -0.5 and 0.5 to z-coordinate of {_effloc}
			add a random number between -0.3 and 0.3 to y-coordinate of {_effloc}
			spawnParticle_Dust(rgb({_color}, {_color}, {_color}), 1,  {_effloc})

function kitEffect_Pluto_2(player: player):
	set {_baseloc} to location of {_player}
	add 1 to y-coordinate of {_baseloc}
	set {_effloc} to {_baseloc}
	add a random number between -3 and 3 to x-coordinate of {_effloc}
	add a random number between -3 and 3 to z-coordinate of {_effloc}
	add a random number between -1 and 1 to y-coordinate of {_effloc}
	loop 20 times:
		set {_baseloc} to location of {_player}
		add 1 to y-coordinate of {_baseloc}
		set {_vector} to setVector({_effloc}, {_baseloc})
		set {_distance} to distance between {_baseloc} and {_effloc}
		set yaw of {_effloc} to yaw of {_vector}
		set pitch of {_effloc} to pitch of {_vector}
		set {_meter} to {_distance} / 20
		set {_eff} to location {_meter} * loop-number meters in front of {_effloc}
		spawnParticle(cloud, {_eff})
		wait a tick