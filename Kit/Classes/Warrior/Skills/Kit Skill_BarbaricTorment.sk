# skill-name: Barbaric Torment

options:
	effect-tick: 60
	debuff-radius: 6
	debuff-rate: 0.5
	fear-time: 100

	metadata-hit: "Barbaric Torment - Hit"



on damage with priority LOW:
	set {_attacker} to getAttacker(victim)
	set {_bt} to metadata value {@metadata-hit} of {_attacker}
	if {_bt} is set:
		set {_enabled} to true
		setDamageModification_MUL(victim, 0.5)
		kitEffectDescription(victim, "§4❤§a§lx{@debuff-rate}")

	if getKitStats(victim, "BarbaricTorment") is set:
		if {_enabled} is not set:  # 範囲外からの攻撃を無効化
			cancel event
		kitFear({_attacker}, {@fear-time})
		kitEffectDescription({_attacker}, "§5§l恐怖")
		kitParticle_BarbaricTorment_Damage(victim)

function kitEffect_BarbaricTorment(player: player):
	nameCT({_player}, "Barbaric Torment")
	kitMsg({_player}, "§5§l残忍な本性§5を開放します...")
	set {_launchUUID} to a random uuid
	setKitStats({_player}, "BarbaricTorment", {_launchUUID})
	set metadata value {@metadata-hit} of {_player} to {_launchUUID}
	sendTimeBossbar_GREEN({_player}, "Barbaric Torment", {@effect-tick})
	kitParticle_BarbaricTorment_Launch({_player})

	loop {@effect-tick} times:
		continue if getKitStats({_player}, "BarbaricTorment") is not {_launchUUID}
		
		delete {_hit.now::*}
		loop all entities in radius {@debuff-radius} around {_player}:
			kitCheckTeam({_player}, loop-entity, false) is true
			add loop-entity to {_hit.now::*}
			if {_hit.past::*} does not contain loop-entity:
				add loop-entity to {_hit.past::*}
			set metadata value {@metadata-hit} of loop-entity to {_launchUUID}
			kitParticle_BarbaricTorment_Hit(loop-entity)
		
		loop {_hit.past::*}:
			set {_loop-entity} to loop-value-2
			{_hit.now::*} does not contain {_loop-entity}
			remove {_loop-entity} from {_hit.past::*}
			delete metadata value {@metadata-hit} of {_loop-entity}

			
		kitParticle_BarbaricTorment_Aura({_player}, loop-number)
		wait a tick

	deleteKitStats({_player}, "BarbaricTorment") if getKitStats({_player}, "BarbaricTorment") is {_launchUUID}
	delete metadata value {@metadata-hit} of {_player}
	loop {_hit.past::*}:
		set {_loop-entity} to loop-value
		metadata value {@metadata-hit} of {_loop-entity} is {_launchUUID}
		delete metadata value {@metadata-hit} of {_loop-entity}



local function kitParticle_BarbaricTorment_Launch(player: player):
	playSound("entity.warden.sonic_boom", 1, 2, {_player})
	playSound("entity.warden.agitated", 1, 0.7, {_player})
	set {_baseloc} to location 1 meter above {_player}
	loop 30 times:
		set {_v} to randomVector()
		spawnParticle_Vector(witch, {_v}, 1, {_baseloc})
		set {_el} to {_baseloc}
		add a random number between -5 and 5 to x-pos of {_el}
		add a random number between -5 and 5 to y-pos of {_el}
		add a random number between -5 and 5 to z-pos of {_el}
		set {_rn} to a random integer between 1 and 3
		if {_rn} is 1:
			set {_color} to rgb(103, 69, 152)
		else if {_rn} is 2:
			set {_color} to rgb(28, 48, 92)
		else:
			set {_color} to rgb(75, 0, 130)
		spawnParticle_DustTransition({_color}, rgb(0, 0, 0), 3, {_el})

	set {_baseloc} to location of {_player}
	set {_ln} to 0
	set {_y} to 0
	loop 5 times:
		add 1 to {_ln}
		set {_sub} to 0.5 * (5 - {_ln})
		set {_radius} to {@debuff-radius} - {_sub}

		set {_rad} to 0
		loop 90 times:
			add 360 / 90 to {_rad}
			set {_el} to {_baseloc}
			add {_radius} * sin({_rad}) to x-pos of {_el}
			add {_radius} * cos({_rad}) to z-pos of {_el}
			add {_y} to y-pos of {_el}

			set {_rn} to a random integer between 1 and 3
			if {_rn} is 1:
				set {_color} to rgb(103, 69, 152)
			else if {_rn} is 2:
				set {_color} to rgb(28, 48, 92)
			else:
				set {_color} to rgb(75, 0, 130)
			spawnParticle_DustTransition({_color}, rgb(0, 0, 0), 2, {_el})
			chance of 50%:
				spawnParticle_Vector(reverse_portal, randomVector(), 0.5, {_el})

		add 0.25 to {_y}
		wait a tick

local function kitParticle_BarbaricTorment_Aura(player: player, num: number):
	set {_baseloc} to location 1 meter above {_player}
	set {_baserad} to 5 * {_num}

	set {_index} to 0
	loop 4 times:
		set {_rad} to {_baserad} + (90 * {_index})
		set {_el} to {_baseloc}
		add {@debuff-radius} * sin({_rad}) to x-pos of {_el}
		add {@debuff-radius} * cos({_rad}) to z-pos of {_el}
		set {_rn} to a random integer between 1 and 3
		if {_rn} is 1:
			set {_color} to rgb(103, 69, 152)
		else if {_rn} is 2:
			set {_color} to rgb(28, 48, 92)
		else:
			set {_color} to rgb(75, 0, 130)
		spawnParticle_DustTransition({_color}, rgb(0, 0, 0), 2.5, {_el})
		add 1 to {_index}

	chance of 70%:
		stop
	set {_effloc} to aroundEffect({_player})
	loop 5 times:
		set {_el} to location loop-number * 0.2 meters above {_effloc}
		set {_rn} to a random integer between 1 and 3
		if {_rn} is 1:
			set {_color} to rgb(103, 69, 152)
		else if {_rn} is 2:
			set {_color} to rgb(28, 48, 92)
		else:
			set {_color} to rgb(75, 0, 130)
		spawnParticle_DustTransition({_color}, rgb(0, 0, 0), 0.5, {_el})
		wait a tick

local function kitParticle_BarbaricTorment_Hit(entity: entity):
	set {_rn} to a random integer between 3 and 5
	loop {_rn} times:
		set {_el} to aroundEffect({_entity})
		set {_d} to dice(3)
		if {_d} is 1:
			spawnParticle_BlockData(falling_dust, black concrete, {_el})
		else if {_d} is 2:
			spawnParticle_BlockData(falling_dust, crying obsidian, {_el})
		else:
			spawnParticle_BlockData(falling_dust, black terracotta, {_el})
		spawnParticle(falling_obsidian_tear, {_el})

local function kitParticle_BarbaricTorment_Damage(player: player):
	playSound("entity.warden.angry", 1, 1.2, {_player})
	loop 10 times:
		set {_el} to aroundEffect({_player})
		add {_el} to {_locs::*}
	set {_m} to 0
	loop 10 times:
		add 0.2 to {_m}
		loop {_locs::*}:
			set {_el} to location {_m} meters below loop-value-2
			set {_rn} to a random integer between 1 and 3
			if {_rn} is 1:
				set {_color} to rgb(103, 69, 152)
			else if {_rn} is 2:
				set {_color} to rgb(28, 48, 92)
			else:
				set {_color} to rgb(75, 0, 130)
			spawnParticle_DustTransition({_color}, rgb(0, 0, 0), 0.9, {_el})
		wait a tick