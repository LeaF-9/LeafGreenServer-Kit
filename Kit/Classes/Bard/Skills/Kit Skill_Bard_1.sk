# skill-name: Sweet Serenade

function kitSkill_Bard_1(player: player):
	if {Stats.%{_player}%::SkillTarget} is not set:
		send action bar "§c§l対象を指定してください" to {_player}
		stop
	set {_target} to {Stats.%{_player}%::SkillTarget}
	if {_target} is {Stats.%{_player}%::SweetSerenade}:
		kitMsg({_player}, "§c§l現在演奏中の味方に対して付与することはできません")
		stop
	toolCT({_player}, "Bard", 1)
	kitEffect_SweetSerenade({_player}, {_target})



local function kitEffect_SweetSerenade(player: player, target: target):
	kitMsg({_player}, "§d%{_target}% §cに§4ハートの小夜曲§cを捧げます...")
	message formatted "§b%{_player}% §dがハートの小夜曲を演奏してくれた!" to {_target}
	kitParticle_SweetSerenade_Launch({_player}, {_target})
	set {Stats.%{_player}%::SweetSerenade} to {_target}
	setSupporter({_target}, {_player})
	set {_timer} to 0
	while {Stats.%{_player}%::SweetSerenade} is {_target}:
		set {_distance} to distance between {_target} and {_player}
		if {_distance} > 10:
			delete {Stats.%{_player}%::SweetSerenade}
			continue
		add 1 to {_timer}
		if {_target} does not have absorption:
			set {_tier} to 1
			if {Stats.%{_player}%::Fortissimo} is true:
				set {_tier} to 2
			applyEffect({_target}, absorption, {_tier}, 4 seconds)
		if {_timer} >= 20:
			set {_timer} to 0
			kitHeal({_target}, 0.5, 1)
			kitParticle_SweetSerenade_Beam({_player}, {_target})
		wait a tick
	kitMsg({_player}, "§9%{_target}% §5への小夜曲は途切れた...")
	message formatted "§7小夜曲が聴こえなくなりました" to {_target}



local function kitParticle_SweetSerenade_Launch(player: player, target: player):
	# 音
	kitSound_SweetSerenade_Launch({_target})
	# パーティクル
	set {_m} to distance between {_player} and {_target} / 5
	set {_baseloc} to location of head of {_player}
	set {_vector} to setVector({_baseloc}, location of head of {_target})
	set {_baseloc} to setDirToVec({_baseloc}, {_vector})
	loop 5 times:
		set {_el} to location {_m} * loop-number meters in front of {_baseloc}
		spawnParticle_Note("pink", {_el})
		set {_eel} to {_el}
		add a random number between -0.5 and 0.5 to x-pos of {_eel}
		add a random number between -0.5 and 0.5 to y-pos of {_eel}
		add a random number between -0.5 and 0.5 to z-pos of {_eel}
		spawnParticle(heart, {_eel})
		loop 5 times:
			set {_eeel} to {_eel}
			add a random number between -0.1 and 0.1 to x-pos of {_eeel}
			add a random number between -0.1 and 0.1 to y-pos of {_eeel}
			add a random number between -0.1 and 0.1 to z-pos of {_eeel}
			spawnParticle_BlockData(falling_dust, pink_wool, {_eeel})
		wait a tick

local function kitParticle_SweetSerenade_Beam(player: player, target: player):
	playSound("block.note_block.bell", 1, 1.4, {_player})
	set {_m} to distance between {_player} and {_target} / 5
	set {_baseloc} to location of head of {_player}
	set {_vector} to setVector({_baseloc}, location of head of {_target})
	set {_baseloc} to setDirToVec({_baseloc}, {_vector})
	loop 5 times:
		set {_el} to location {_m} * loop-number meters in front of {_baseloc}
		spawnParticle_Note("pink", {_el})
		wait a tick




local function kitSound_SweetSerenade_Launch(player: player):
	loop 3 times:
		if loop-number is 1:
			set {_pitch} to 1.19
		else if loop-number is 2:
			set {_pitch} to 1.35
		else:
			set {_pitch} to 1.4
		playSound("block.note_block.bell", 1, {_pitch}, {_player})
		wait 3 ticks