# skill-name: Fanfare Rhapsody

options:
	effect-radius: 6
	strength-tier: 3
	fortissimo-tier: 5
	strength-second: 3 seconds
	strength-tick: 60
	max-health-second: 5 seconds
	max-health-tick: 100
	heal-per-second: 1



on damage of player with priority MONITOR:
	kitStats_GET(victim, "FanfareRhapsody") is set
	wait a tick
	kitStats_GET(victim, "FanfarePhapsody") is set
	set {_dmg} to damage
	set {_FanfareRhapsody} to kitStats_GET(victim, "FanfarePhapsody")
	add {_dmg} to {_FanfareRhapsody}
	kitStats_SET(victim, "FanfareRhapsody", {_FanfareRhapsody})



function kitEffect_FanfareRhapsody(player: player):
	nameCT({_player}, "Fanfare Rhapsody")
	kitMsg({_player}, "§4戦闘の士気を上げる§6ファンファーレ§4を送ります!")
	kitParticle_FanfareRhapsody_Launch({_player})
	set {_tier} to {@strength-tier}
	if kitStats_GET({_player}, "Fortissimo") is true:
		set {_tier} to {@fortissimo-tier}
		kitParticle_Fortissimo({_player})

	loop all players in radius {@effect-radius} around {_player}:
		loop-player is not {_player}
		kitCheckTeam({_player}, loop-player, true) is true
		kitStats_GET(loop-player, "FanfareRhapsody") is not set
		kitStats_SET(loop-player, "FanfareRhapsody", 0)
		message formatted "§d%{_player}% §4にファンファーレを貰った!" to loop-player
		setSupporter(loop-player, {_player})
		kitParticle_FanfareRhapsody_Apply(loop-player)
		if health of loop-player is max health of loop-player:
			set {_time} to {@max-health-second}
			kitParticle_FanfareRhapsody_Explode(loop-player)
			kitEffect_FanfareRhapsody_Buff(loop-player, {@max-health-tick})
		else:
			set {_time} to {@strength-second}
			kitEffect_FanfareRhapsody_Buff(loop-player, {@strength-tick})
		applyEffect(loop-player, strength, {_tier}, {_time})

local function kitEffect_FanfareRhapsody_Buff(player: player, time: number):
	kitEffectDescription({_player}, "§4§l攻撃力上昇")
	sendTimeBossbar_GREEN({_player}, "§4攻撃力上昇", {_time})
	loop {_time} times:
		if kitStats_GET({_player}, "FanfareRhapsody") is not set:
			stop
		wait a tick
	if kitStats_GET({_player}, "FanfareRhapsody") is not set:
		stop
	
	message formatted "<##b31f1f>戦闘で傷ついた身体<##b1b1b1>が<##fda0e9>癒やされていく...!" to {_player}
	kitParticle_FanfareRhapsody_Heal({_player})
	set {_healing} to kitStats_GET({_player}, "FanfareRhapsody")
	kitStats_DELETE({_player}, "FanfareRhapsody")
	kitEffectDescription({_player}, "§d§l❤%{_healing}%")

	set {_count} to ({_healing} * 20) * {@heal-per-second}
	sendTimeBossbar_PINK({_player}, "治癒", {_count})
	set {_healtick} to {_healing} / {_count}
	loop {_count} times:
		if kitCheckAlive({_player}) is false:
			stop

		kitHeal({_player}, {_healtick}, 1)
		wait a tick



local function kitParticle_FanfareRhapsody_Launch(player: player):
	set {_baseloc} to location of {_player}
	kitSound_FanfareRhapsody_Launch({_baseloc})
	set {_y} to 0
	loop 11 times:
		add 0.5 to {_y}
		set {_rad} to 0
		loop 12 times:
			add 30 to {_rad}
			set {_el} to {_baseloc}
			add 6 * sin({_rad}) to x-pos of {_el}
			add 6 * cos({_rad}) to z-pos of {_el}
			add {_y} to y-pos of {_el}
			spawnParticle(lava, {_el})
		wait a tick

local function kitParticle_FanfareRhapsody_Apply(player: player):
	set {_y} to 0
	set {_baserad} to 0
	loop 11 times:
		set {_baseloc} to location of {_player}
		set {_rad} to {_baserad}
		loop 4 times:
			set {_el} to {_baseloc}
			add 0.5 * sin({_rad}) to x-pos of {_el}
			add 0.5 * cos({_rad}) to z-pos of {_el}
			add {_y} to y-pos of {_el}
			spawnParticle_DustTransition(rgb(226, 4 , 27), rgb(240, 144, 141), 2, {_el})
			add 90 to {_rad}
		add 30 to {_baserad}
		add 0.2 to {_y}
		wait a tick

local function kitParticle_FanfareRhapsody_Explode(player: player):
	playSound("entity.generic.explode", 1, 1.6, {_player})
	set {_baseloc} to location 1 meter above {_player}
	loop 10 times:
		spawnParticle_Vector(flame, randomVector(), 0.75, {_baseloc})

local function kitParticle_FanfareRhapsody_Heal(player: player):
	kitSound_FanfareRhapsody_Heal({_player})

	add rgb(247, 182, 233) to {_colors::*}
	add rgb(250, 202, 240) to {_colors::*}
	add rgb(243, 158, 186) to {_colors::*}

	set {_y} to 0
	set {_addy} to 0.5
	loop 5 times:
		set {_baseloc} to location of {_player}
		add {_y} to y-pos of {_baseloc}
		set {_count} to a random integer between 5 and 10
		loop {_count} times:
			set {_el} to moveRandomLocation({_baseloc}, 1)
			set y-pos of {_el} to y-pos of {_baseloc}
			set {_size} to a random number between 1 and 2
			set {_color} to a random element out of {_colors::*}
			spawnParticle_Dust({_color}, {_size}, {_el})

		add {_addy} to {_y} 
		wait a tick



local function kitSound_FanfareRhapsody_Launch(loc: location):
	playSound("item.goat_horn.sound.2", 1.5, 1, {_loc})
	playSound("entity.ender_dragon.growl", 0.85, 1.65, {_loc})

local function kitSound_FanfareRhapsody_Heal(player: player):
	playSound("item.goat_horn.sound.1", 1, 1.07, {_player})
	playSound("block.amethyst_block.resonate", 1.5, 1.2, {_player})