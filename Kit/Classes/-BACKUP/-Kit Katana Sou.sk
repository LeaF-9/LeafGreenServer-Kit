# Weapon-Name: Katana -双-

on damage of player:
	# --- 例外排除処理 ---
	if {Class::%attacker%} is not "Ninja":
		set {_ng} to true
	if attacker is not sneaking:
		set {_ng} to true
	set {_tool} to attacker's tool
	if kitItemAllChecker({_tool}, "Ninja", "Weapon.main", 4) is false:
		set {_ng} to true
	if {_ng} is true:
		if {-Stats.%victim%::Katana-Sou} is set:
			cancel event
			delete {-Stats.%victim%::Katana-Sou}
			set maximum damage delay of victim to 20 ticks
		stop
	# ------------------
	kitParticle_Katana_Sou(victim)
	set {_now} to now
	set {_victim} to victim
	set maximum damage delay of {_victim} to 10 ticks
	set {-Stats.%{_victim}%::Katana-Sou} to {_now}
	wait 10 ticks
	if {-Stats.%{_victim}%::Katana-Sou} is {_now}:
		set maximum damage delay of {_victim} to 20 ticks

function kitParticle_Katana_Sou(victim: player):
	loop 3 times:
		playSound("entity.player.attack.sweep", 0.8, 2, {_victim})
		set {_el} to location 1 meter above {_victim}
		set {_v} to randomVector({_el})
		spawnParticle_Vector(cloud, {_v}, 0.3, {_el})
		wait a tick

function kitWeapon_Ninja_4(player: player):
	set {_loc} to location of {_player}
	set pitch of {_loc} to 0
	playSound("entity.arrow.shoot", 1, 2, {_player})
	kitParticle_KatanaSou_Trail({_player})
	set {_f} to location 10 meters in front of {_loc}
	set {_from} to vector of {_f}
	set {_to} to vector of {_player}
	set {_vector} to {_from} -- {_to}
	set {_vector} to normalized {_vector}
	set velocity of {_player} to {_vector}

function kitParticle_KatanaSou_Trail(player: player):
	loop 10 times:
		spawnParticle(explosion, location of {_player})
		wait a tick