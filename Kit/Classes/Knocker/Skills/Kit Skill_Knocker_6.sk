# Shock Grenade

function kitSkill_Knocker_6(player: player):
	subtract 1 from item amount of tool of {_player}
	playSound("entity.arrow.shoot", 1, 0.5, {_player})
	shoot a snowball from {_player} at speed 0.9
	set metadata value "shockgrenade" of shot projectile to true
	set item of shot projectile to beacon
	set {_shotproj} to shot projectile
	kitParticle_ShockGrenade_Projectile({_shotproj})

on projectile hit:
	projectile is a snowball
	metadata value "shockgrenade" of projectile is true
	set metadata value "shockgrenade" of projectile to false
	set {_now} to now
	set {_from} to location of projectile 
	playSound("entity.breeze.jump", 1, 0.75, {_from})
	loop all entities in radius 5 around {_from}:
		kitCheckTeam(loop-entity, shooter, false) is true
		kitDamage(shooter, loop-entity, 1, "衝撃爆弾")
		kitEffectDescription(loop-entity, "§4❤1")
		set {_to} to location of loop-entity
		set {_vector} to setVector({_from}, {_to}, 1.5)
		if y of {_vector} <= 0:
			block 0.1 meters below loop-entity is not passable
			set y of {_vector} to 0.6
		set velocity of loop-entity to {_vector}
		if type of loop-entity is a player:
			set {Stats.%loop-entity%::FallRemove} to {_now}
	set {_locs::*} to particleLocation_Sphere({_from}, 15, 5, 80)
	loop {_locs::*}:
		spawnParticle(enchanted_hit, loop-value)
	wait 5 seconds
	loop all players:
		{Stats.%loop-player%::FallRemove} is {_now}
		delete {Stats.%loop-player%::FallRemove}



local function kitParticle_ShockGrenade_Projectile(proj: projectile):
	loop 200 times:
		if metadata value "shockgrenade" of {_proj} is false:
			stop
		
		set {_loc} to location of {_proj}
		spawnParticle(end_rod, {_loc})
		wait a tick