# Cyclone Bow

on shoot:
	metadata value "gametype" of shooter is "Kit"
	{Class::%shooter%} is "Knocker"
	set {_tool} to shooter's tool
	kitItemAllChecker({_tool}, "Knocker", "Weapon.main", 5) is true
	if shooter is sneaking:
		kitEffect_CycloneBow_Blast(shooter, projectile)
	else:
		kitEffect_CycloneBow_Cyclone(shooter, projectile)

on projectile hit:
	if metadata value "cyclone-bow-blast" of projectile is true:
		set metadata value "cyclone-bow-blast" of projectile to false
	if metadata value "cyclone-bow" of projectile is true:
		set metadata value "cyclone-bow" of projectile to false

on damage:
	damage was caused by projectile
	metadata value "cyclone-bow-blast" of projectile is set
	set damage to 4
	kitParticle_CycloneBow_BlastHit(victim)

function kitEffect_CycloneBow_Blast(player: player, proj: projectile):
	# 矢の数確認
	set {_arrow} to amount of arrow in {_player}'s inventory
	if {_arrow} < 3:
		stop
	loop 3 times:
		remove an arrow from {_player}
	set metadata value "cyclone-bow-blast" of {_proj} to true
	kitParticle_CycloneBow_Blast({_player}, {_proj})
	set {_vector} to setVector(location of {_player}, location 100 meters in front of {_player}, 3)
	loop 20 times:
		metadata value "cyclone-bow-blast" of {_proj} is true
		set velocity of {_proj} to {_vector}
		wait a tick

function kitEffect_CycloneBow_Cyclone(player: player, proj: projectile):
	# 矢の数確認
	set {_arrow} to amount of arrow in {_player}'s inventory
	if {_arrow} < 2:
		stop
	loop 2 times:
		remove an arrow from {_player}
	set metadata value "cyclone-bow" of {_proj} to true
	kitParticle_CycloneBow_Cyclone({_player}, {_proj})
	loop 100 times:
		if metadata value "cyclone-bow" of {_proj} is false:
			continue
		loop all entities in radius 3 around {_proj}:
			kitCheckTeam({_player}, loop-entity, false) is true
			kitDamage({_player}, loop-entity, 2)
			set {_vector} to setVector(location of {_proj}, location of loop-entity)
			set velocity of loop-entity to {_vector}
		wait a tick

function kitParticle_CycloneBow_Blast(player: player, proj: projectile):
	playSound("entity.blaze.hurt", 1, 1.3, {_proj})
	set {_yaw} to yaw of {_player}
	set {_pitch} to pitch of {_player}
	loop 20 times:
		if metadata value "cyclone-bow-blast" of {_proj} is false:
			continue
		set {_baseloc} to location of {_proj}
		set yaw of {_baseloc} to {_yaw}
		set pitch of {_baseloc} to {_pitch}
		set {_el} to {_baseloc}
		add a random number between -1 and 1 to x-pos of {_el}
		add a random number between -1 and 1 to y-pos of {_el}
		add a random number between -1 and 1 to z-pos of {_el}
		set {_m} to 0
		loop 5 times:
			set {_elm} to location {_m} meters behind {_el}
			spawnParticle_Dust(rgb(174, 224, 230), 0.6, {_elm})
			add 0.4 to {_m}
		wait a tick

function kitParticle_CycloneBow_Cyclone(player: player, proj: projectile):
	playSound("entity.wither.shoot", 1, 1.6, {_proj})
	set {_yaw} to yaw of {_player}
	set {_pitch} to pitch of {_player}
	set {_baserad} to 0
	loop 100 times:
		if metadata value "cyclone-bow" of {_proj} is false:
			continue
		set {_baseloc} to location of {_proj}
		set yaw of {_baseloc} to {_yaw}
		set pitch of {_baseloc} to {_pitch}
		set {_baseloc} to location 1.5 meters in front of {_baseloc}
		loop 4 times:  # 渦の数
			add 90 to {_baserad}
			set {_m} to 0
			set {_y} to 0
			loop 15 times:  # 渦巻
				add 0.2 to {_m}
				add 0.2 to {_y}
				set {_el} to location {_y} meters behind {_baseloc}
				set {_v.eb} to {_el}
				# 縦方向
				set {_v.m1} to {_el}
				set {_p} to pitch of {_v.m1}
				if {_p} < 0:
					set {_p} to -1 * 90 - {_p}
					set {_y} to yaw of {_v.m1}
					add 180 to {_y}
					if {_y} >= 360:
						set {_y} to {_y} - 360
					set yaw of {_v.m1} to {_y}
				else:
					set {_p} to {_p} - 90
				set pitch of {_v.m1} to {_p}
				set {_v.r1} to {_m} * cos({_rad})
				set {_v.t1} to location {_v.r1} meters in front of {_v.m1}
				# 横方向
				set {_v.m2} to {_el}
				set pitch of {_v.m2} to 0
				set {_v.r2} to {_m} * sin({_rad})
				set {_v.t2} to location {_v.r2} meters in front of  {_v.m2}
				set x-coordinate of {_v.eb} to x-coordinate of {_v.t1} + x-coordinate of {_v.t2} - x-coordinate of {_v.eb}
				set y-coordinate of {_v.eb} to y-coordinate of {_v.t1} + y-coordinate of {_v.t2} - y-coordinate of {_v.eb}
				set z-coordinate of {_v.eb} to z-coordinate of {_v.t1} + z-coordinate of {_v.t2} - z-coordinate of {_v.eb}
				spawnParticle_Dust(rgb(174, 224, 230), 0.85, {_v.eb})
		add 30 to {_baserad}
		wait a tick

function kitParticle_CycloneBow_BlastHit(player: player):
	playSound("entity.dragon_fireball.explode", 1, 2, {_player})
	spawnParticle(explosion_emitter, {_player})