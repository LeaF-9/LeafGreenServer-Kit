options:
	vprefix: §b[§7Vanish§b]

function kitInvisible(player: player, tick: number):
	kitCheckAlive({_player}) is true
	if getInvisibleStatus({_player}) is true:
		set {_hasTime} to getInvisibleRemains({_player})
		if {_hasTime} > {_tick}:
			stop

	set {_now} to now
	set metadata value "Invisible - Date" of {_player} to {_now}
	set metadata value "Invisible - Time" of {_player} to {_tick}

	# 透明Effect付与
	set {_second} to "%{_tick}% ticks" parsed as time span
	set {_hasEffects::*} to getClassEffects("Kit-%{Class::%{_player}%}%")
	if {_hasEffects::*} does not contain invisibility:
		set {_invnot} to true
		apply invisibility 1 to {_player} for {_second} replacing existing effect

	# タイマー作成
	if {_tick} > 5:
		set {_bossbar.id} to a random UUID
		set {_titledisplay} to "§b§l透明"
		set {_timedisplay} to timeDisplay_SECOND({_tick})
		set {_timer.title} to "%{_titledisplay}%§r §b%{_timedisplay}% §3秒"
		create bossbar titled "%{_timer.title}%" and id {_bossbar.id} for {_player} with progress 100 with colors blue with style solid

		set {_prog} to 100 / {_tick}
		set {_ticknumber} to {_tick}

	# 透明処理
	loop {_tick} times:
		# 例外処理
		if getInvisibleDates({_player}) is not {_now}:
			continue
		if {_player} has glowing:
			continue
		if metadata value "Specter - Date" of {_player} is set:
			continue
		
		# 透明付与
		loop all players:
			{Class::%loop-player%} is not "Sentinel"
			kitCheckTeam({_player}, loop-player, false) is true
			hide {_player} from loop-player

		# ボスバー処理
		if {_bossbar.id} is set:
			set {_timedisplay} to timeDisplay_SECOND({_ticknumber})
			set {_timer.title} to "%{_titledisplay}%§r §b%{_timedisplay}% §3秒"
			set bossbar {_bossbar.id} title to {_timer.title}
			subtract 1 from {_ticknumber}

			set {_value} to value of bossbar {_bossbar.id}
			subtract {_prog} from {_value}
			set bossbar {_bossbar.id} value to {_value}
		# InvisibleTime処理
		subtractInvisibleTime({_player})
		wait a tick

	remove bossbar {_bossbar.id} if {_bossbar.id} is set
	removeInvisible({_player}) if getInvisibleDates({_player}) is {_now}
	if metadata value "Specter - Date" of {_player} is set:
		send action bar "§f§l幽隠効果§3によって§b透明効果§3は強制解除された!" to {_player}

on leftclick:
	set {_target} to targeted player
	getInvisibleStatus({_target}) is true
	distance between the player and {_target} is smaller than 5
	removeInvisible({_target})

on damage of player with priority HIGHEST:
	if getInvisibleStatus(victim) is true:
		if damage was caused by fall:
			stop
		removeInvisible(victim)



function getInvisibleStatus(player: player) :: boolean:
	set {_metadata} to "Invisible - Date"
	set {_has} to metadata value {_metadata} of {_player}
	if {_has} is not set:
		return false
	return true

function getInvisibleRemains(player: player) :: number:
	if getInvisibleStatus({_player}) is false:
		return 0
	
	set {_metadata} to "Invisible - Time"
	set {_time} to metadata value {_metadata} of {_player}
	return {_time}

function getInvisibleDates(player: player) :: date:
	set {_metadata} to "Invisible - Date"
	set {_return} to metadata value {_metadata} of {_player}
	return {_return}

function removeInvisible(player: player):
	set {_metadata.base} to "Invisible - Date"
	set {_metadata.time} to "Invisible - Time"
	delete metadata value {_metadata.base} of {_player}
	delete metadata value {_metadata.time} of {_player}

	set {_hasEffects::*} to getClassEffects("Kit-%{Class::%{_player}%}%")
	if {_hasEffects::*} does not contain invisibility:
		remove invisibility from {_player}
	reveal {_player} from all players
	send action bar "§b§l透明化が解除されました!" to {_player}

local function subtractInvisibleTime(player: player):
	set {_debufftime} to getInvisibleRemains({_player})
	subtract 1 from {_debufftime}
	set {_metadata} to "Invisible - Time"
	set metadata value {_metadata} of {_player} to {_debufftime}



function kitSpecter(player: player, tick: number):
	kitCheckAlive({_player}) is true

	set {_now} to now
	set metadata value "Specter - Date" of {_player} to {_now}

	# 透明Effect付与
	set {_hasEffects::*} to getClassEffects("Kit-%{Class::%{_player}%}%")
	if {_hasEffects::*} does not contain invisibility:
		set {_invnot} to true
		apply invisibility 1 to {_player} for 5 ticks replacing existing effect

	# タイマー作成
	set {_bossbar.id} to a random UUID
	set {_titledisplay} to "§f§l幽隠"
	set {_timedisplay} to timeDisplay_SECOND({_tick})
	set {_timer.title} to "%{_titledisplay}%§r §b%{_timedisplay}% §3秒"
	create bossbar titled "%{_timer.title}%" and id {_bossbar.id} for {_player} with progress 100 with colors white with style solid

	set {_prog} to 100 / {_tick}
	set {_ticknumber} to {_tick}

	# 透明処理
	loop {_tick} times:
		remove glowing from {_player} if {_player} has glowing
		
		# 透明付与
		apply invisibility 1 to {_player} for 5 ticks replacing existing effect if {_invnot} is true
		loop all players:
			kitCheckTeam({_player}, loop-player, false) is true
			hide {_player} from loop-player

		# ボスバー処理
		set {_timedisplay} to timeDisplay_SECOND({_ticknumber})
		set {_timer.title} to "%{_titledisplay}%§r §b%{_timedisplay}% §3秒"
		set bossbar {_bossbar.id} title to {_timer.title}
		subtract 1 from {_ticknumber}

		set {_value} to value of bossbar {_bossbar.id}
		subtract {_prog} from {_value}
		set bossbar {_bossbar.id} value to {_value}
		wait a tick

	remove bossbar {_bossbar.id}
	removeSpecter({_player})

function removeSpecter(player: player):
	delete metadata value "Specter - Date" of {_player}
	reveal {_player} from all players