function applyEffect(player: entity, effect: potion effect type, tier: number, time: time span, replace: boolean = false, type: text = "normal"):
	if {_type} is "normal":
		if {_replace} is true:
			apply {_effect} {_tier} to {_player} for {_time} replacing existing effect
		else:
			apply {_effect} {_tier} to {_player} for {_time}
	else if {_type} is "ambient":
		if {_replace} is true:
			apply ambient {_effect} {_tier} to {_player} for {_time} replacing existing effect
		else:
			apply ambient {_effect} {_tier} to {_player} for {_time}
	else if {_type} is "none":
		if {_replace} is true:
			apply {_effect} {_tier} without particles to {_player} for {_time} replacing existing effect
		else:
			apply {_effect} {_tier} without particles to {_player} for {_time}

function resetEffect(player: player):
	execute console command "/effect clear %{_player}%"
	if {Class::%{_player}%} is set:
		load yml "plugins/skript-yaml/General Classes/Kit-%{Class::%{_player}%}%.yml" as "EffectCheck.%{_player}%"
		loop yaml node keys "effects" from "EffectCheck.%{_player}%":
			set {_effect} to potionChanger("%loop-key%")
			set {_level} to yml value "%loop-node%" from "EffectCheck.%{_player}%"
			# set {_level} to {_level} parsed as number
			apply {_effect} {_level} without particles to {_player} for 10000000000 seconds