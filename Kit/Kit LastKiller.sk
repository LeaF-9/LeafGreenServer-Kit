on damage of player with priority LOWEST:
	if attacker exists:
		if checkEntityType(attacker, player) is true:
			LastKiller(victim, attacker)
		else:
			if attacker is tnt:
				set {_attacker} to metadata value "attacker" of attacker
				set {_attacker} to {_attacker} parsed as player
				if kitCheckTeam({_attacker}, victim, true) is true:
					cancel event
				else:
					LastKiller(victim, {_attacker})
			else:
				loop all players:
					attacker's display name is name of loop-player
					LastKiller(victim, loop-player)
	else:
		if damage was caused by suffocation:
			set {_bl} to location of block above victim
			loop all players:
				loop-player is not victim
				if {Block.%loop-player%::*} contains {_bl}:
					set {_attacker} to loop-player
			if {_attacker} is not set:
				stop
			if kitCheckTeam(victim, {_attacker}, true) is true:
				cancel event
				teleport victim to location of {_attacker}
			else:
				LastKiller(victim, {_attacker})
		else if damage was caused by fire:
			set {_d} to 100
			set {_loc.v} to location of victim
			loop all blocks in radius 1.5 around victim:
				"%type of loop-block%" contains "fire"
				set {_loc.b} to location of loop-block
				set {_distance} to distance between {_loc.v} and {_loc.b}
				if {_distance} < {_d}:
					set {_d} to {_distance}
					set {_bl} to location of loop-block
			loop all players:
				if {Block.%loop-player%::*} contains {_bl}:
					set {_attacker} to loop-player
			if {_attacker} is not set:
				stop
			if kitCheckTeam(victim, {_attacker}, true) is true:
				cancel event
				extinguish victim
			else:
				LastKiller(victim, {_attacker})
				victim.setFireTicks(60)
			