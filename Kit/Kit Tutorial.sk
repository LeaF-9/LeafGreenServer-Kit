options:
	time: 8 seconds

function kitCheckTutorial() :: boolean:
	set {_stage} to {Kit-GameStage::name}
	load yml "plugins/skript-yaml/Kit Stages/%{_stage}%.yml" as "CheckTutorial"
	loop all players:
		{Join::%loop-player%} is "Kit"
		set {_uuid} to uuid of loop-player
		if yml value "rating.%{_uuid}%" from "CheckTutorial" is not set:
			set {_tutorial} to true
	unload yml "CheckTutorial"
	if {_tutorial} is not set:
		return false
		stop
	return true

function kitTutorial():
	wait {@time}
	loop all players:
		{Kit-Join::%loop-player%} is "Kit"
		message formatted "§bMap Tutorialを開始します..." to loop-player
		add loop-player to {_players::*}
	wait 2 seconds
# Team Death Match
	if {Kit-GameStage::rule} is "TDM":
#	(1) ルール説明
		send title "§aルール説明" with subtitle "§b§oTeam Death Match" to {_players::*}
		message formatted "§2------------------------------" to {_players::*}
		message formatted "§a今回のゲームルールは§b§lTeam Death Match§aです" to {_players::*}
		message formatted "§a一番最初に決められたポイントまでキルを達成したチームの勝利となります" to {_players::*}
		message formatted "§aこのステージのゴールポイントは §c§l%{Kit-GameStage::goal}% §aです" to {_players::*}
		message formatted "§2------------------------------" to {_players::*}
		wait {@time}
#	(2) スポーン地
		set {_players::*} to kitTutorialPlayers()
		send title "§aスポーン地点" with subtitle "§bSpawn Points" to {_players::*}
		set {_tp} to a random location out of {Kit-GameStageRespawns.red::*}
		teleport {_players::*} to {_tp}
		set gamemode of {_players::*} to spectator
		loop {Kit-GameStageRespawns.red::*}:
			set {_nbt} to nbt compound of "{Invulnerable:1b,Invisible:1b,Marker:1b,PersistenceRequired:1b,NoBasePlate:1b,NoGravity:1b,ShowArms:1b,Glowing:1b}"
			spawn an armor stand at loop-value with nbt {_nbt}
			set metadata value "Tutorial-Spawn" of spawned entity to true
		message formatted "§2------------------------------" to {_players::*}
		message formatted "§aチュートリアルでは§cRed§aチームを参考にして紹介します" to {_players::*}
		message formatted "§aスポーン地点は§e発光§aが付与されている場所になります" to {_players::*}
		message formatted "§a複数ある場合は復活時にランダムで設定されます" to {_players::*}
		message formatted "§2------------------------------" to {_players::*}
		wait {@time}
		loop all entities:
			type of loop-entity is an armor stand
			metadata value "Tutorial-Spawn" of loop-entity is true
			delete loop-entity
#	(3) ゲームスタート
		set {_players::*} to kitTutorialPlayers()
		message formatted "§2------------------------------" to {_players::*}
		message formatted "§6これにてチュートリアルは終了です!" to {_players::*}
		message formatted "§c試合が始まります! §d§l§oGLHF!" to {_players::*}
		message formatted "§2------------------------------" to {_players::*}
# Destroy The Core
	else if {Kit-GameStage::rule} is "DTC":
#	(1) ルール説明
		send title "§aルール説明" with subtitle "§b§oDestroy The Core" to {_players::*}
		message formatted "§2------------------------------" to {_players::*}
		message formatted "§a今回のゲームルールは§b§lDestroy The Core§aです" to {_players::*}
		message formatted "§a相手のコアを全て破壊することで勝利となります" to {_players::*}
		message formatted "§2------------------------------" to {_players::*}
		wait {@time}
#	(2) スポーン地点
		set {_players::*} to kitTutorialPlayers()
		send title "§aスポーン地点" with subtitle "§bSpawn Points" to {_players::*}
		set {_tp} to a random location out of {Kit-GameStageRespawns.red::*}
		teleport {_players::*} to {_tp}
		set gamemode of {_players::*} to spectator
		loop {Kit-GameStageRespawns.red::*}:
			set {_nbt} to nbt compound of "{Invulnerable:1b,Invisible:1b,Marker:1b,PersistenceRequired:1b,NoBasePlate:1b,NoGravity:1b,ShowArms:1b,Glowing:1b}"
			spawn an armor stand at loop-value with nbt {_nbt}
			set metadata value "Tutorial-Spawn" of spawned armor stand to true
		message formatted "§2------------------------------" to {_players::*}
		message formatted "§aチュートリアルでは§cRed§aチームを参考にして紹介します" to {_players::*}
		message formatted "§aスポーン地点は§e発光§aが付与されている場所になります" to {_players::*}
		message formatted "§a複数ある場合は復活時にランダムで設定されます" to {_players::*}
		message formatted "§2------------------------------" to {_players::*}
		wait {@time}
		loop all entities:
			type of loop-entity is an armor stand
			metadata value "Tutorial-Spawn" of loop-entity is true
			delete loop-entity
#	(3) コア地点
		set {_players::*} to kitTutorialPlayers()
		send title "§aコア地点" with subtitle "§bCore's Location" to {_players::*}
		loop {Kit-GameStageCoreLocation::*}:
			{Kit-GameStageCore_red::*} contains loop-index
			set {_loc} to loop-value
			add -0.25 to y-coordinate of {_loc}
			set {_nbt} to nbt compound of "{NoGravity:1b,Size:0.5,Invulnerable:1,PersistenceRequired:1,NoAI:1,Silent:1,Glowing:1,DropItem:0,active_effects:[{id:invisibility,duration:12000,amplifier:0,show_particles:0b}]}"
			spawn a magma cube at {_loc} with nbt {_nbt}
			set metadata value "Tutorial-Core" of spawned magma cube to true
		message formatted "§2------------------------------" to {_players::*}
		message formatted "§aコアの位置は§e発光§aが付与されている場所になります" to {_players::*}
		message formatted "§aこのコアを§c全て破壊する§aことで勝利となります" to {_players::*}
		message formatted "§aコアの耐久力は右にあるスコアボードに記載されます" to {_players::*}
		message formatted "§2------------------------------" to {_players::*}
		wait {@time}
		loop all magma cubes:
			metadata value "Tutorial-Core" of loop-magma cube is true
			delete loop-magma cube
#	(4) ゲームスタート
		set {_players::*} to kitTutorialPlayers()
		message formatted "§2------------------------------" to {_players::*}
		message formatted "§6これにてチュートリアルは終了です!" to {_players::*}
		message formatted "§c試合が始まります! §d§l§oGLHF!" to {_players::*}
		message formatted "§2------------------------------" to {_players::*}
# Earn many Jewels
	else if {Kit-GameStage::rule} is "Capture The Flag":
#	(1) ルール説明
		send title "§aルール説明" with subtitle "§b§oCapture The Flag" to {_players::*}
		message formatted "§2------------------------------" to {_players::*}
		message formatted "§a今回のゲームルールは§b§lCapture The Flag§aです" to {_players::*}
		message formatted "§a一定時間でMapの凡ゆる地点にFlagがスポーンします" to {_players::*}
		message formatted "§aゴールポイントまでFlagを占有し続けることが勝利条件となります" to {_players::*}
		message formatted "§aこのステージのゴールポイントは §c§l%{Kit-GameStage::goal}% §aです" to {_players::*}
		message formatted "§2------------------------------" to {_players::*}
		wait {@time}
#	(2) スポーン地点
		set {_players::*} to kitTutorialPlayers()
		send title "§aスポーン地点" with subtitle "§bSpawn Points" to {_players::*}
		set {_tp} to a random location out of {Kit-GameStageRespawns.red::*}
		teleport {_players::*} to {_tp}
		set gamemode of {_players::*} to spectator
		loop {Kit-GameStageRespawns.red::*}:
			set {_nbt} to nbt compound of "{Invulnerable:1b,Invisible:1b,Marker:1b,PersistenceRequired:1b,NoBasePlate:1b,NoGravity:1b,ShowArms:1b,Glowing:1b}"
			spawn an armor stand at loop-value with nbt {_nbt}
			set metadata value "Tutorial-Spawn" of spawned armor stand to true
		message formatted "§2------------------------------" to {_players::*}
		message formatted "§aチュートリアルでは§cRed§aチームを参考にして紹介します" to {_players::*}
		message formatted "§aスポーン地点は§e発光§aが付与されている場所になります" to {_players::*}
		message formatted "§a複数ある場合は復活時にランダムで設定されます" to {_players::*}
		message formatted "§aFlag所有者がスポーン地点に近い場合は復活時間が長くなります" to {_players::*}
		message formatted "§2------------------------------" to {_players::*}
		wait {@time}
		loop all entities:
			type of loop-entity is an armor stand
			metadata value "Tutorial-Spawn" of loop-entity is true
			delete loop-entity
#	(3) Flag Spawn地点
		set {_players::*} to kitTutorialPlayers()
		send title "§aFlagの出現地点" with subtitle "§bFlag Locations" to {_players::*}
		loop {Kit-GameStageFlags::*}:
			set {_loc} to loop-value
			add -0.25 to y-coordinate of {_loc}
			set {_nbt} to nbt compound of "{NoGravity:1b,Size:0.5,Invulnerable:1,PersistenceRequired:1,NoAI:1,Silent:1,Glowing:1,DropItem:0,active_effects:[{id:invisibility,duration:12000,amplifier:0,show_particles:0b}]}"
			spawn a magma cube at {_loc} with nbt {_nbt}
			set metadata value "Tutorial-Flag" of spawned magma cube to true
		message formatted "§2------------------------------" to {_players::*}
		message formatted "§bFlag§aは発光地点からスポーンします" to {_players::*}
		message formatted "§bFlag§aは接近することで確保できます" to {_players::*}
		message formatted "§bFlag所有者§aがデスするとその地点にドロップします" to {_players::*}
		message formatted "§a味方が拾うと占有を継続します" to {_players::*}
		message formatted "§a敵が拾うと再度スポーン地点から現れます" to {_players::*}
		message formatted "§2------------------------------" to {_players::*}
		wait {@time}
		loop all magma cubes:
			metadata value "Tutorial-Flag" of loop-magma cube is true
			delete loop-magma cube
#	(4) ゲームスタート
		set {_players::*} to kitTutorialPlayers()
		message formatted "§2------------------------------" to {_players::*}
		message formatted "§6これにてチュートリアルは終了です!" to {_players::*}
		message formatted "§c試合が始まります! §d§l§oGLHF!" to {_players::*}
		message formatted "§2------------------------------" to {_players::*}
# Sheep Hunt
	else if {Kit-GameStage::rule} is "SH":
#	(1) ルール説明
		send title "§aルール説明" with subtitle "§b§oSheep Hunt" to {_players::*}
		message formatted "§2------------------------------" to {_players::*}
		message formatted "§a今回のゲームルールは§b§lSheep Hunt§aです" to {_players::*}
		message formatted "§aゴールポイント数まで§d羊§aを集めたチームの勝利となります" to {_players::*}
		message formatted "§aこのステージのゴールポイントは §c§l%{Kit-GameStage::goal}% §aです" to {_players::*}
		message formatted "§2------------------------------" to {_players::*}
		wait {@time}
#	(2) スポーン地点
		set {_players::*} to kitTutorialPlayers()
		send title "§aスポーン地点" with subtitle "§bSpawn Points" to {_players::*}
		set {_tp} to a random location out of {Kit-GameStageRespawns.red::*}
		teleport {_players::*} to {_tp}
		set gamemode of {_players::*} to spectator
		loop {Kit-GameStageRespawns.red::*}:
			set {_nbt} to nbt compound of "{Invulnerable:1b,Invisible:1b,Marker:1b,PersistenceRequired:1b,NoBasePlate:1b,NoGravity:1b,ShowArms:1b,Glowing:1b}"
			spawn an armor stand at loop-value with nbt {_nbt}
			set metadata value "Tutorial-Spawn" of spawned armor stand to true
		message formatted "§2------------------------------" to {_players::*}
		message formatted "§aチュートリアルでは§cRed§aチームを参考にして紹介します" to {_players::*}
		message formatted "§aスポーン地点は§e発光§aが付与されている場所になります" to {_players::*}
		message formatted "§a複数ある場合は復活時にランダムで設定されます" to {_players::*}
		message formatted "§2------------------------------" to {_players::*}
		wait {@time}
		loop all entities:
			type of loop-entity is an armor stand
			metadata value "Tutorial-Spawn" of loop-entity is true
			delete loop-entity
#	(3) Sheepスポーン地点
		set {_players::*} to kitTutorialPlayers()
		send title "§a羊の出現場所" with subtitle "§bSheep Spawn Points" to {_players::*}
		loop {Kit-GameStageSpawnLocations::*}:
			set {_loc} to loop-value
			add -0.25 to y-coordinate of {_loc}
			set {_nbt} to nbt compound of "{NoGravity:1b,Size:0.5,Invulnerable:1,PersistenceRequired:1,NoAI:1,Silent:1,Glowing:1,DropItem:0,active_effects:[{id:invisibility,duration:12000,amplifier:0,show_particles:0b}]}"
			spawn a magma cube at {_loc} with nbt {_nbt}
			set metadata value "Tutorial-WoolSpawn" of spawned magma cube to true
		message formatted "§2------------------------------" to {_players::*}
		message formatted "§b羊の出現場所§aは§e発光§aしている地点周辺です" to {_players::*}
		message formatted "§c30秒おき§aにこの地点から§b羊§aが現れます" to {_players::*}
		message formatted "§a羊の近くで§eスニーク長押し§aをすることで確保できます" to {_players::*}
		message formatted "§a稀に§6§lSpecial Sheep§aが現れます" to {_players::*}
		message formatted "§6§lSpecial Sheep§aは貰えるポイントが3倍です" to {_players::*}
		message formatted "§2------------------------------" to {_players::*}
		wait {@time}
		loop all magma cubes:
			metadata value "Tutorial-WoolSpawn" of loop-magma cube is true
			delete loop-magma cube
#	(4) Sheep確保地点
		set {_players::*} to kitTutorialPlayers()
		send title "§a羊の確保場所" with subtitle "§bSheep Securing Points" to {_players::*}
		set gamemode of {_players::*} to spectator
		message formatted "§2------------------------------" to {_players::*}
		message formatted "§b羊§aは拠点付近にある§b確保エリア§aまで連れていきましょう" to {_players::*}
		message formatted "§aこの地点まで連れて行くことでポイントとなります" to {_players::*}
		message formatted "§a敵から羊を守りつつ,羊を集めて勝利を目指しましょう" to {_players::*}
		message formatted "§2------------------------------" to {_players::*}
		wait {@time}
#	(5) ゲームスタート
		set {_players::*} to kitTutorialPlayers()
		message formatted "§2------------------------------" to {_players::*}
		message formatted "§6これにてチュートリアルは終了です!" to {_players::*}
		message formatted "§c試合が始まります! §d§l§oGLHF!" to {_players::*}
		message formatted "§2------------------------------" to {_players::*}
# Control Point
	else if {Kit-GameStage::rule} is "CP":
#	(1) ルール説明
		send title "§aルール説明" with subtitle "§b§oControl Point" to {_players::*}
		message formatted "§2------------------------------" to {_players::*}
		message formatted "§a今回のゲームルールは§b§lControl Point§aです" to {_players::*}
		message formatted "§aマップ各地のエリアを取ってゴールポイントに達したチームの勝利です" to {_players::*}
		message formatted "§aこのステージのゴールポイントは §c§l%{Kit-GameStage::goal}% §aです" to {_players::*}
		message formatted "§2------------------------------" to {_players::*}
		wait {@time}
#	(2) スポーン地点
		set {_players::*} to kitTutorialPlayers()
		send title "§aスポーン地点" with subtitle "§bSpawn Points" to {_players::*}
		set {_tp} to a random location out of {Kit-GameStageRespawns.red::*}
		teleport {_players::*} to {_tp}
		set gamemode of {_players::*} to spectator
		loop {Kit-GameStageRespawns.red::*}:
			set {_nbt} to nbt compound of "{Invulnerable:1b,Invisible:1b,Marker:1b,PersistenceRequired:1b,NoBasePlate:1b,NoGravity:1b,ShowArms:1b,Glowing:1b}"
			spawn an armor stand at loop-value with nbt {_nbt}
			set metadata value "Tutorial-Spawn" of spawned armor stand to true
		message formatted "§2------------------------------" to {_players::*}
		message formatted "§aチュートリアルでは§cRed§aチームを参考にして紹介します" to {_players::*}
		message formatted "§aスポーン地点は§e発光§aが付与されている場所になります" to {_players::*}
		message formatted "§a複数ある場合は復活時にランダムで設定されます" to {_players::*}
		message formatted "§2------------------------------" to {_players::*}
		wait {@time}
		loop all entities:
			type of loop-entity is an armor stand
			metadata value "Tutorial-Spawn" of loop-entity is true
			delete loop-entity
#	(3) エリア地点
		set {_players::*} to kitTutorialPlayers()
		send title "§aエリア地点" with subtitle "§bArea's Location" to {_players::*}
		loop {Kit-GameStageAreas::*}:
			set {_loc} to loop-value
			add -0.25 to y-coordinate of {_loc}
			set {_nbt} to nbt compound of "{NoGravity:1b,Size:0.5,Invulnerable:1,PersistenceRequired:1,NoAI:1,Silent:1,Glowing:1,DropItem:0,active_effects:[{id:invisibility,duration:12000,amplifier:0,show_particles:0b}]}"
			spawn a magma cube at {_loc} with nbt {_nbt}
			set metadata value "Tutorial-Area" of spawned magma cube to true
		message formatted "§2------------------------------" to {_players::*}
		message formatted "§aエリアの位置は§e発光§aが付与されている場所になります" to {_players::*}
		message formatted "§aこのエリア内に入ると占拠が開始されます" to {_players::*}
		message formatted "§a占拠が終わると1秒おきにポイントが手に入ります" to {_players::*}
		message formatted "§8鉄: §c1§a,§6金: §c3§a, §bダイヤ: §c5§aになります" to {_players::*}
		message formatted "§aエリアを上手く占拠して勝利につなげましょう" to {_players::*}
		message formatted "§2------------------------------" to {_players::*}
		wait {@time}
		loop all magma cubes:
			metadata value "Tutorial-Area" of loop-magma cube is true
			delete loop-magma cube
#	(4) ゲームスタート
		set {_players::*} to kitTutorialPlayers()
		message formatted "§2------------------------------" to {_players::*}
		message formatted "§6これにてチュートリアルは終了です!" to {_players::*}
		message formatted "§c試合が始まります! §d§l§oGLHF!" to {_players::*}
		message formatted "§2------------------------------" to {_players::*}
	kitTimer_Start()

function kitTutorialPlayers() :: players:
	loop all players:
		{Join::%loop-player%} is "Kit"
		add loop-player to {_players::*}
	return {_players::*}