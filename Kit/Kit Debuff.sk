#出血
function kitBlood(player: player):
	# Conditions
	set {_now} to now
	set {_has} to metadata value "Debuff - Blood" of {_player}
	{_has} is not set

	# 出血 - 初期処理
	set metadata value "Debuff - Blood" of {_player} to {_now}
	set {_bossbar.id} to a random UUID
	create bossbar titled "&4&l出血" and id {_bossbar.id} for {_player} with progress 100 with colors red with style solid
	message formatted "§4出血してしまった!" to {_player}
	apply blindness 1 to {_player} for 3 seconds

	# 出血パーティクル
	loop 10 times:
		set {_el} to aroundEffect({_player})
		spawnParticle_Block(redstone block, {_el})

	# 初期処理 - Bossbar
	loop 200 times:
		wait a tick
		set {_value} to value of bossbar {_bossbar.id}
		subtract 0.5 from {_value}
		set bossbar {_bossbar.id} value to {_value}
	
	# ループ処理
	set {_status.blood} to metadata value "Debuff - Blood" of {_player}
	while {_status.blood} is {_now}:
		message formatted "§4出血している...!" to {_player}
		set bossbar {_bossbar.id} value to 100

		# 出血処理
		set {_hp} to health of {_player}
		subtract 0.5 from {_hp}
		set health of {_player} to {_hp}
		apply blindness 1 to {_player} for 3 seconds
		playSound("entity.player.hurt", 1, 1, {_player})

		# 治癒処理
		chance of 50%:
			delete metadata value "Debuff - Blood" of {_player}
			message formatted "§d出血が収まった!" to {_player}
			set {_ng} to true
			remove bossbar {_bossbar.id}

		# パーティクル処理
		loop 10 times:
			set {_el} to aroundEffect({_player})
			spawnParticle_Block(redstone block, {_el})
			spawnParticle(dripping_lava, {_el})

		# 継続処理
		if {_ng} is not set:
			loop 200 times:
				wait a tick
				set {_value} to value of bossbar {_bossbar.id}
				subtract 0.5 from {_value}
				set bossbar {_bossbar.id} value to {_value}
				chance of 50%:
					set {_el} to aroundEffect({_player})
					spawnParticle(falling_lava, {_el})
		
		# 確認処理
		delete {_status.blood}
		set {_status.blood} to metadata value "Debuff - Blood" of {_player}
	remove bossbar {_bossbar.id}

on heal:
	metadata value "gametype" of player is "Kit"
	getDebuffs(player, "Blood") is true
	cancel event

#凍結
function kitFreeze(player: player, tick: number, msg: boolean = true):
	addKitOS("Freeze")
	kitCheckAlive({_player}) is true

	if metadata value "Debuff - Freeze" of {_player} is set:
		set {_has} to metadata value "DebuffTime - Freeze" of {_player}
		if {_has} is not set:
			set {_has} to 0
		if {_has} >= {_tick}:
			stop

	set {_loc} to location of {_player}
	set {_now} to now
	set {Kit-Freeze::%{_player}%} to {_now}
	set metadata value "Debuff - Freeze" of {_player} to {_now}
	set metadata value "DebuffTime - Freeze" of {_player} to {_tick}
	set {_time} to "%{_tick}% ticks" parsed as time span
	if {_msg} is true:
		message "§b凍ってしまった!" to {_player}
		create bossbar titled "&b&l凍結" and id "%{_player}%-Freeze" for {_player} with progress 100 with colors blue with style solid
	set {_prog} to 100 / {_tick}
	loop {_tick} times:
		if {Kit-Freeze::%{_player}%} is {_now}:
			teleport {_player} to {_loc}
			if {_msg} is true:
				loop 5 times:
					set {_el} to aroundEffect({_player})
					spawnParticle_BlockData(falling_dust, snow block, {_el})
					chance of 50%:
						set {_el} to aroundEffect({_player})
						spawnParticle_BlockData(falling_dust, blue ice, {_el})
				set {_value} to value of bossbar "%{_player}%-Freeze"
				subtract {_prog} from {_value}
				set bossbar "%{_player}%-Freeze" value to {_value}
				set {_nbt} to nbt compound of {_player}
				set int tag "TicksFrozen" of {_nbt} to 130
			wait a tick
	{Kit-Freeze::%{_player}%} is {_now}
	delete {Kit-Freeze::%{_player}%}
	if {_msg} is true:
		remove bossbar "%{_player}%-Freeze"
		set {_nbt} to nbt compound of {_player}
		set int tag "TicksFrozen" of {_nbt} to 0

on damage of player:
	{Kit-Freeze::%victim%} is set
	if damage was caused by fire, burning or lava:
		set damage to 3
		delete {Kit-Freeze::%victim%}
	else:
		set damage to damage * 0.75

#麻痺
function kitPalsy(player: player, time: time span, eff: boolean = true):
	addKitOS("Palsy")
	{Kit-Palsy::%{_player}%} is not set
	set {Kit-Palsy::%{_player}%} to true
	if {_eff} is true:
		message "§e痺れてしまった!" to {_player}
	create bossbar titled "&e&l麻痺" and id "%{_player}%-Palsy" for {_player} with progress 100 with colors yellow with style solid
	set {_tick} to convertTimeNumber({_time})
	set {_prog} to 100 / {_tick}
	loop {_tick} times:
		if {_eff} is true:
			set {_ln} to a random integer between 1 and 3
			loop {_ln} times:
				chance of 20%:
					kitEffect_Palsy({_player})
		set {_value} to value of bossbar "%{_player}%-Palsy"
		subtract {_prog} from {_value}
		set bossbar "%{_player}%-Palsy" value to {_value}
		wait a tick
	delete {Kit-Palsy::%{_player}%}
	remove bossbar "%{_player}%-Palsy"

function kitEffect_Palsy(player: player):
	set {_baseloc} to location of {_player}
	set {_yaw} to a random number between 0 and 360
	add a random number between 0.6 and 2 to y-coordinate of {_baseloc}
	set yaw of {_baseloc} to {_yaw}
	set pitch of {_baseloc} to 0
	set {_effloc} to location 0.5 meters in front of {_baseloc}
	set {_ln} to random integer between 3 and 5
	set {_dy} to 0
	set {_metercount} to 5
	set {_fm} to 0.05 * sin(45) / 5
	loop {_ln} times:
		loop 2 times:
			# --- ギザギザ上 ---
			set {_bl} to {_effloc}
			subtract {_dy} from y-coordinate of {_bl}
			set pitch of {_bl} to 45
			set {_mc} to 0
			loop {_metercount} times:
				add 1 to {_mc}
				set {_el} to location {_fm} * {_mc} meters in front of {_bl}
				spawnParticle_DustTransition(rgb(255, 255, 0), rgb(255, 215, 0), 0.3, {_el})
			# -----------------
			# --- ギザギザ下 ---
			set {_bl} to location 0.05 meters in front of {_effloc}
			subtract {_dy} + 0.05 from y-coordinate of {_bl}
			set pitch of {_bl} to -45
			set {_mc} to 0
			loop {_metercount} times:
				add 1 to {_mc}
				set {_el} to location {_fm} * {_mc} meters in front of {_bl}
				spawnParticle_DustTransition(rgb(255, 255, 0), rgb(255, 215, 0), 0.3, {_el})
			# -----------------
			add 0.1 to {_dy}
		wait a tick

#吸収
function kitDrain(player: player, time: time span):
	addKitOS("Drain")
	{Kit-Drain::%{_player}%} is not set
	set {Kit-Drain::%{_player}%} to {_player}
	message "§2§l体力が養分として吸われていく!" to {_player}
	set {_level} to round({_level})
	create bossbar titled "&2&l吸収" and id "%{_player}%-Drain" for {_player} with progress 100 with colors green with style solid
	set {_tick} to convertTimeNumber({_time})
	set {_prog} to 100 / {_tick}
	loop {_tick} times:
		set {_value} to value of bossbar "%{_player}%-Drain"
		subtract {_prog} from {_value}
		set bossbar "%{_player}%-Drain" value to {_value}
		apply poison 1 without particles to {_player} for a tick
		if mod(loop-number, 20) is 0:
			set {_hp} to health of {_player}
			subtract 1 from {_hp}
			set health of {_player} to {_hp}
			playSound("entity.generic.drink", 1, 0.85, {_player})
			set {_mindis} to 15
			loop all players in radius 10 around {_player}:
				kitCheckTeam(loop-player, {_player}, false) is true
				set {_dis} to distance between loop-player and {_player}
				if {_mindis} > {_dis}:
					set {_target} to loop-player
					set {_mindis} to {_dis}
			if {_target} is set:
				kitHeal({_target}, 0.5)
				playSound("block.composter.empty", 1, 1.3, {_target})
				set {_from} to location 1 meters above {_player}
				set {_to} to location 1 meters above {_target}
				set {_vector} to setVector({_from}, {_to})
				set yaw of {_from} to yaw of {_vector}
				set pitch of {_from} to pitch of {_vector}
				set {_eln} to round({_mindis}) * 2
				set {_en} to 0
				loop {_eln} times:
					add 1 to {_en}
					set {_el} to location 0.5 * {_en} meters in front of {_from}
					spawnParticle(composter, {_el})
		wait a tick
	delete {Kit-Drain::%{_player}%}
	message "§a吸収効果が切れました" to {_player}
	remove bossbar "%{_player}%-Drain"

#睡眠
function kitSleep(player: player, time: time span):
	addKitOS("Sleep")
	{Kit-Sleep::%{_player}%} is not set
	message "§bZzz..." to {_player}
	playSound("entity.wolf.growl", 0.5, 0.5, {_player})
	apply blindness 1 to {_player} for {_time} replacing existing effect
	create bossbar titled "&5&l睡眠" and id "%{_player}%-Sleep" for {_player} with progress 100 with colors purple with style solid
	set {Kit-Sleep::%{_player}%} to true
	set {_tick} to convertTimeNumber({_time})
	set {_prog} to 100 / {_tick}
	set {_loc} to location of {_player}
	loop {_tick} times:
		if {Kit-Sleep::%{_player}%} is true:
			if block below {_loc} is passable:
				set {_loc} to location 1 meter below {_loc}
			set {_tl} to {_loc}
			teleport {_player} to {_tl}
			set {_el} to location of head of {_player}
			add a random number between -0.5 and 0.5 to x-coordinate of {_el}
			add a random number between -0.5 and 0.5 to y-coordinate of {_el}
			add a random number between -0.5 and 0.5 to z-coordinate of {_el}
			spawnParticle_Vector(sculk_charge_pop, vector(0, 0.1, 0), 0.1, {_el})
			set {_value} to value of bossbar "%{_player}%-Sleep"
			subtract {_prog} from {_value}
			set bossbar "%{_player}%-Sleep" value to {_value}
			wait a tick
	remove bossbar "%{_player}%-Sleep"
	if {Kit-Sleep::%{_player}%} is true:
		delete {Kit-Sleep::%{_player}%}

on damage of player:
	{Kit-Sleep::%victim%} is set
	if damage was caused by projectile:
		if metadata value "sleep" of projectile is "true":
			stop
	if damage was caused by fall:
		set damage to 0
		stop
	delete {Kit-Sleep::%victim%}
	remove blindness from victim

#不死
function kitImmortal(player: player, time: time span):
	addKitOS("Immortal")
	{Kit-Immortal::%{_player}%} is not set
	set {Kit-Immortal::%{_player}%} to true
	wait {_time}
	delete {Kit-Immortal::%{_player}%}

# 眩暈
function kitStun(player: player, time: time span):
	addKitOS("Stun")
	{Kit-Stun::%{_player}%} is not set
	set {_now} to now
	set {Kit-Stun::%{_player}%} to {_now}
	create bossbar titled "&6&l眩暈" and id "%{_player}%-Stun" for {_player} with progress 100 with colors yellow with style solid
	message "§6眩暈を起こしてしまった!" to {_player}
	playSound("entity.iron_golem.hurt", 0.7, 0.7, {_player})
	set {_tick} to convertTimeNumber({_time})
	set {_prog} to 100 / {_tick}
	set walk speed of {_player} to 0.1
	set attack speed attribute of {_player} to 4
	set {_rad} to 0
	loop {_tick} times:
		if {Kit-Stun::%{_player}%} is {_now}:
			set {_value} to value of bossbar "%{_player}%-Stun"
			subtract {_prog} from {_value}
			set bossbar "%{_player}%-Stun" value to {_value}
			set {_el} to location of {_player}
			add 2 to y-coordinate of {_el}
			add 36 to {_rad}
			add 0.5 * sin({_rad}) to x-coordinate of {_el}
			add 0.5 * cos({_rad}) to z-coordinate of {_el}
			spawnParticle(crit, {_el})
			wait a tick
	remove bossbar "%{_player}%-Stun"
	set walk speed of {_player} to 0.2
	set attack speed attribute of {_player} to 24
	delete {Kit-Stun::%{_player}%}

on shoot:
	metadata value "gametype" of shooter is "Kit"
	if {Kit-Stun::%shooter%} is set:
		wait a tick
		push projectile to the left at speed random number from -1 to 1
		push projectile upwards at speed random number from -1 to 1

# 恐怖
function kitFear(player: player, time: time span):
	addKitOS("Fear")
	{Kit-Fear::%{_player}%} is not set
	set {_now} to now
	set {Kit-Fear::%{_player}%} to {_now}
	create bossbar titled "&0&l恐怖" and id "%{_player}%-Fear" for {_player} with progress 100 with colors purple with style solid
	message "§0恐怖で視力と聴力が弱まってしまった..." to {_player}
	playSound("entity.warden.tendril_clicks", 1, 0.5, {_player})
	set {_tick} to convertTimeNumber({_time})
	set {_prog} to 100 / {_tick}
	applyEffect({_player}, darkness, 1, {_time})
	loop {_tick} times:
		if {Kit-Fear::%{_player}%} is {_now}:
			set {_value} to value of bossbar "%{_player}%-Fear"
			subtract {_prog} from {_value}
			set bossbar "%{_player}%-Fear" value to {_value}
			# --- 音の演出 ---
			if mod(loop-number, 20) is 0:
				playSound("entity.warden.heartbeat", 1, 1, {_player}, true)
			# --------------
			# --- パーティクルの演出 ---
				loop 10 times:
					set {_el} to aroundEffect({_player})
					spawnParticle(falling_obsidian_tear, {_el})
			# -----------------------
			else if mod(loop-number, 20) > 5:
				stop all sounds for {_player}
			# --- 効果 ---
			loop all players:
				metadata value "gametype" of loop-player is "Kit"
				if distance between loop-player and {_player} > 10:
					hide loop-player from {_player}
				else:
					if {Kit-Invisible::%loop-player%} is not set:
						reveal loop-player from {_player}
			# -----------
			wait a tick
	remove bossbar "%{_player}%-Fear"
	loop all players:
		metadata value "gametype" of loop-player is "Kit"
		{Kit-Invisible::%loop-player%} is not set
		reveal loop-player from {_player}
	delete {Kit-Fear::%{_player}%}

# 追跡
function kitTrail(player: player, time: time span, from: location = location(0.0, 0.0, 0.0)):
	addKitOS("Trail")
	{Kit-Trail::%{_player}%} is not set
	set {_now} to now
	set {Kit-Trail::%{_player}%} to {_now}
	create bossbar titled "&9&l追跡" and id "%{_player}%-Trail" for {_player} with progress 100 with colors blue with style solid
	message "§9追跡された! §d自分の位置情報が残留してしまう!" to {_player}
	playSound("item.lodestone_compass.lock", 1, 0.5, {_player})
	# タイマー初期設定
	set {_tick} to convertTimeNumber({_time})
	set {_prog} to 100 / {_tick}
	# from-location設定
	set {_sum.xyz} to x-pos of {_from} + y-pos of {_from} + z-pos of {_from}
	if {_sum.xyz} = 0:
		set {_from} to location of {_player}
	add {_from} to {_traillocs::*}
	# player位置をtrailに追加
	set {_loc} to location of {_player}
	if {_loc} is not {_traillocs::1}:
		add {_loc} to {_traillocs::*}
	# 効果
	loop {_tick} times:
		# 例外処理
		if {Kit-Trail::%{_player}%} is not {_now}:
			continue
		# initialize
		delete {_player.trail::*}
		# タイマー設定
		set {_value} to value of bossbar "%{_player}%-Trail"
		subtract {_prog} from {_value}
		set bossbar "%{_player}%-Trail" value to {_value}
		# 1秒おきの効果
		if mod(loop-number, 20) is 0:
			# 音
			playSound("item.lodestone_compass.lock", 0.5, 2, {_player})
			# 追跡位置追加
			set {_loc} to location of {_player}
			set {_index.last} to size of {_traillocs::*}
			set {_lastloc} to {_traillocs::%{_index.last}%}
			set yaw of {_lastloc} to yaw of {_loc}
			set pitch of {_lastloc} to pitch of {_loc}
			if {_lastloc} is not {_loc}:
				add {_loc} to {_traillocs::*}
				# 追跡過程にポイント召喚
				# set {_mob} to kitSpawnMob_NBT({_player}, magma cube, {_loc}, "{NoGravity:1b,Size:0.3,Invulnerable:1,PersistenceRequired:1,NoAI:1,Silent:1,DropItem:0,active_effects:[{id:invisibility,duration:12000,amplifier:0,show_particles:0b}]}")
				# set metadata value "trail-point" of {_mob} to {_player}
				# add {_mob} to {_magmacube.point::*}
		# 追跡地点ループ
		loop {_traillocs::*}:
			if loop-index is "1":
				continue
			set {_loc.to} to {_traillocs::%loop-index%}
			set {_index.now} to loop-index parsed as number
			set {_index.former} to {_index.now} - 1
			set {_loc.from} to {_traillocs::%{_index.former}%}
			if {_loc.from} is {_loc.to}:
				add 0.01 to y-pos of {_loc.to}
			set {_vector} to setVector({_loc.from}, {_loc.to})
			set yaw of {_loc.from} to yaw of {_vector}
			set pitch of {_loc.from} to pitch of {_vector}
			set {_loc.progress} to distance between {_loc.from} and {_loc.to} / 10
			set {_loc.ln} to 0
			# 追跡パーティクル
			loop 10 times:
				add 1 to {_loc.ln}
				set {_el} to location {_loc.progress} * {_loc.ln} meters in front of {_loc.from}
				spawnParticle_Dust(rgb(230, 230, 250), 0.5, {_el})
				# 追跡を踏んだプレイヤー検知
				loop all players in radius 1.5 around {_el}:
					kitCheckTeam({_player}, loop-player, false) is true
					{_player.trail::*} does not contain loop-player
					add loop-player to {_player.trail::*}
		# 追跡発光処理
		loop all players:
			# 発光対象
			if {_player.trail::*} contains loop-player:
				# player発光
				packetGlowing(loop-player, {_player}, rgb(0, 255, 255))
				# ポイント発光
				# loop {_magmacube.point::*}:
				# 	packetGlowing(loop-player, loop-value-3)
			# 消灯対象
			else:
				# player発光
				packetUnglowing(loop-player, {_player})
				# ポイント発光
				# loop {_magmacube.point::*}:
				# 	packetUnglowing(loop-player, loop-value-3)
		wait a tick
	remove bossbar "%{_player}%-Trail"
	delete {Kit-Trail::%{_player}%}
	# loop {_magmacube.point::*}:
	# 	delete loop-value
	loop {_player.trail::*}:
		packetUnglowing(loop-value, {_player})

# シールド
function kitShield(player: player, shield: number):
	addKitOS("Shield")
	addKitOS("ShieldTime")
	if {Kit-Shield::%{_player}%} is set:
		if {Kit-Shield::%{_player}%} > {_shield}:
			stop
		else:
			set bossbar "%{_player}%-Shield" value to 100
	else:
		create bossbar titled "&9&lシールド" and id "%{_player}%-Shield" for {_player} with progress 100 with colors blue with style solid
	set {_now} to now
	set {Kit-ShieldTime::%{_player}%} to {_now}
	set {Kit-Shield::%{_player}%} to {_shield}
	while {Kit-ShieldTime::%{_player}%} is {_now}:
		set {_prog} to {Kit-Shield::%{_player}%} / {_shield} * 100
		set bossbar "%{_player}%-Shield" value to {_prog}
		set {_loc} to location of {_player}
		add 0.02 to {_dy}
		if {_dy} >= 4:
			set {_dy} to 0
		if {_dy} > 2:
			set {_y} to 2 - ({_dy} - 2)
		else:
			set {_y} to {_dy}
		add {_y} to y-coordinate of {_loc}
		add 9 to {_rad}
		add 0.5 * sin({_rad}) to x-coordinate of {_loc}
		add 0.5 * cos({_rad}) to z-coordinate of {_loc}
		spawnParticle_Dust(rgb(100, 100, 255), 1, {_loc})
		wait a tick
	if {Kit-Shield::%{_player}%} is not set:
		remove bossbar "%{_player}%-Shield"

on damage of player:
	{Kit-Shield::%victim%} is set
	set {_dm} to damage
	if damage cause is fall:
		set {_dm} to 0
	cancel event
	subtract {_dm} from {Kit-Shield::%victim%}
	send action bar "§9§lシールドがダメージを無効化した!" to victim
	send action bar "§c§lシールドが攻撃を阻害した!" to attacker
	if {Kit-Shield::%victim%} <= 0:
		delete {Kit-Shield::%victim%}
		delete {Kit-ShieldTime::%victim%}
		message formatted "§3§lシールドが崩壊した!" to victim
		playSound("entity.item.break", 0.7, 1, victim)
	else:
		playSound("block.anvil.land", 0.7, 2, victim)

function kitLuck(player: player, pluslvl: number, absolute: boolean = false):
	addKitOS("Luck")
	if {_pluslvl} = 0:  # リセット処理
		delete {Kit-Luck::%{_player}%}
		message formatted "<##008000>運がリセットされました" to {_player}
		stop
	# 設定値または追加値
	if {_absolute} is true:
		set {Kit-Luck::%{_player}%} to {_pluslvl}
	else:
		add {_pluslvl} to {Kit-Luck::%{_player}%}
	# 超過確認
	if {Kit-Luck::%{_player}%} > 5:
		set {Kit-Luck::%{_player}%} to 5
	else if {Kit-Luck::%{_player}%} < -5:
		set {Kit-Luck::%{_player}%} to -5
	# メッセージとエフェクト
	remove luck from {_player}
	remove bad luck from {_player}
	set {_efflvl} to abs({Kit-Luck::%{_player}%})
	if {Kit-Luck::%{_player}%} > 0:
		apply infinite luck {_efflvl} without particles to {_player}
		message formatted "<##3cb371>§l幸運<##3cb371>だ! 確率が良くなりそうだ! <##ffd700>幸運レベル§7: §e§l%{Kit-Luck::%{_player}%}%" to {_player}
	else:
		apply infinite bad luck {_efflvl} without particles to {_player}
		message formatted "<##2e8b57>§l不運<##2e8b57>だ! 確率が悪くなりそうだ... <##ffd700>幸運レベル§7: §e§l%{Kit-Luck::%{_player}%}%" to {_player}
	# パーティクル
	loop 10 times:
		set {_loc} to location of {_player}
		add a random number between -1 and 1 to x-coordinate of {_loc}
		add a random number between 0 and 2 to y-coordinate of {_loc}
		add a random number between -1 and 1 to z-coordinate of {_loc}
		spawnParticle(totem_of_undying, {_loc})
	# サウンド
	set {_pitchlvl} to {Kit-Luck::%{_player}%}
	if {_pitchlvl} = 0:
		set {_pitch} to 1
	else if {_pitchlvl} > 0:
		set {_pitch} to 1 + (0.2 * {_pitchlvl})
	else if {_pitchlvl} < 0:
		set {_pitchlvl} to abs({_pitchlvl})
		set {_pitch} to 1 - ({_pitchlvl} / 5 * 0.5)
	playSound("entity.experience_orb.pickup", 1, {_pitch}, {_player}, true)

function getDebuffs(player: player, debuff: text) :: boolean:
	set {_metadata} to "Debuff - %{_debuff}%"
	set {_has} to metadata value {_metdata} of {_player}
	if {_has} is not set:
		return false
	return true