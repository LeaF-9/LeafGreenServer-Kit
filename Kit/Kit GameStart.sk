options:
	prefix: §2[§aKit PvP§2]

command /gamestart:
	trigger:
		if {Kit-Join} is more than 3:
			if {Kit-GameStart} is not set:
				set {Kit-GameStart} to false
			if {Kit-GameStart} is false:
				set {Kit-GameStart} to true
				set {_prepareTime} to 20
				while {_prepareTime} is more than 0:
					if {_prepareTime} is 1, 2, 3, 5, 10 or 20:
						loop all players:
							{Join::%loop-player%} is "Kit"
							message "{@prefix-Kit} §bマップとチーム決定まで... §e%{_prepareTime}% §b秒" to loop-player
							play sound "block.note_block.snare" with volume 1 with pitch 1 to loop-player
							# if {_prepareTime} is 20:
							# 	message formatted "§e⚠ §4§l10§c秒後にステージにTPします! §e⚠" to loop-player
							# else if {_prepareTime} is 10:
							# 	if world of loop-player is not world of {Kit-GameStage::spec}:
							# 		teleport loop-player to {Kit-GameStage::spec}
							# 		message formatted "§dステージにTPしました" to loop-player
							# 		set gamemode of loop-player to spectator
					subtract 1 from {_prepareTime}
					wait a second
				rtfcheck()
				kitStageDecision()
				setGameID()
				if kitCheckTutorial() is true:
					kitTutorial()
					stop
				kitTimer_Start()
			else:
				message "§c既にゲームが開始されています!" to player
		else:
			message "§c参加人数が足りません!" to player

function kitStageDecision():
	if {Kit-VoteStage::1} is set:
		loop 5 times:
			set {_result::%loop-number%} to 0
		# Vote結果の確認
		loop {Kit-Vote::*}:
			add 1 to {_result::%loop-value%}
		delete {Kit-Vote}
		set {_max} to max({_result::*})
		loop {_result::*}:
			loop-value = {_max}
			add loop-index to {_maxs::*}
		set {_mapindex} to a random element out of {_maxs::*}
		set {_mapname} to {Kit-VoteStage::%{_mapindex}%}
		delete {Kit-VoteStage::*}
		worldLoad("Kit", {_mapname})
	else:
		# Listingの指定
		if {Kit-StageListing} is true:
			set {_stages::*} to {Kit-StageListUP::*}
		else:
			load yml "plugins/skript-yaml/Kit Stages/All Stages.yml" as "KitStages"
			set {_stages::*} to yml list "Stages" from "KitStages"
			unload yml "KitStages"
		# enable: trueチェック
		loop {_stages::*}:
			load yml "plugins/skript-yaml/Kit Stages/%loop-value%.yml" as "KitStage"
			if yml value "enable" from "KitStage" is not true:
				remove loop-value from {_stages::*}
				unload yml "KitStage"
				continue
			# Ruleの指定
			if {Kit-StageRandomize.rule} is set:
				if yml value "rule" from "KitStage" is not {Kit-StageRandomize.rule}:
					remove loop-value from {_stages::*}
					unload yml "KitStage"
					continue
			if {Kit-StageRandomize.team} is set:
				if yml value "team" from "KitStage" is not {Kit-StageRandomize.team}:
					remove loop-value from {_stages::*}
					unload yml "KitStage"
					continue
			unload yml "KitStage"
		# Stage設定
		set {_stage} to a random element out of {_stages::*}
		remove {_stage} from {_stages::*}
		worldLoad("Kit", {_stage})
	if {Kit-StageListing} is true:
		remove {_stage} from {Kit-StageListUP::*}