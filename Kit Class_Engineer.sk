# Weapons
function kitWeaponEngineer(player: player):
	set {_tool} to {_player}'s tool
	set {_item.num} to kitItemNumberChecker({_tool})
	checkCT({_player}, name of {_player}'s tool) is true
	if {_item.num} is 1:
		kitWeapon_Engineer_1({_player})
	else if {_item.num} is 2:
		kitWeapon_Engineer_2({_player})
	else if {_item.num} is 3:
		kitWeapon_Engineer_3({_player})
	else if {_item.num} is 4:
		kitWeapon_Engineer_4({_player})
	else if {_item.num} is 5:
		kitWeapon_Engineer_5({_player})

on leftclick:
	{Class::%player%} is "Engineer"
	set {_tool} to player's tool
	set {_item.kit} to kitItemKitChecker({_tool})
	{_item.kit} is "Engineer"
	set {_item.type} to kitItemTypeChecker({_tool})
	{_item.type} is "Weapon.main"
	set {_item.num} to kitItemNumberChecker({_tool})
	{_item.num} is 5
	kitSub_Engineer_5(player)

function kitWeapon_Engineer_1(player: player):
	if checkFuel({_player}, 1, "Weapon.main") is true:
		toolCT({_player}, "Engineer", 1, "Weapon.main")
		playSound("entity.arrow.shoot", 1, 1, {_player})
		set {_bl} to location of head of {_player}
		set {_l.1} to {_bl}
		set {_l.2} to {_bl}
		add 30 to yaw of {_l.2}
		set {_l.3} to {_bl}
		subtract 30 from yaw of {_l.3}
		loop 3 times:
			shoot an arrow from {_l.%loop-number%} at speed 1
			set shooter of shot arrow to {_player}
			drawDot particle "cloud", center shot arrow, visibleRange 30, keepFor 1 second

function kitWeapon_Engineer_2(player: player):
	if {Stats.%{_player}%::SkillTarget} is set:
		if checkFuel({_player}, 2, "Weapon.main") is true:
			toolCT({_player}, "Engineer", 2, "Weapon.main")
			set {_tg} to {Stats.%{_player}%::SkillTarget}
			loop {CT.%{_tg}%::*}:
				subtract 60 from {CT.%{_tg}%::%loop-index%}
			kitMsg({_player}, "§b%{_tg}% §eのクールタイムを短縮しました!")
			message formatted "§9%{_player}% §eによりクールタイムが§b60秒§e短縮された!" to {_player}
			playSound("block.grindstone.use", 1, 0.5, {_tg})
			loop 20 times:
				set {_loc} to location of {_tg}
				set {_speed} to a random number between 0.5 and 2
				draw 1 smoke particle at {_loc} with direction randomVector({_loc}, 1) and speed {_speed}, keepFor 1 tick
				wait a tick
	else:
		message formatted "§c§l対象のプレイヤーがいません" to {_player}

function kitWeapon_Engineer_3(player: player):
	if checkFuel({_player}, 3, "Weapon.main") is true:
		toolCT({_player}, "Engineer", 3, "Weapon.main")
		set {_baseloc} to location of head of {_player}
		set {_m} to 0
		playSound("block.enchantment_table.use", 1, 2, {_player})
		loop 10 times:
			{_tg} is not set
			loop 10 times:
				{_tg} is not set
				add 1 to {_m}
				set {_loc} to location {_m} meters in front of {_baseloc}
				drawDot particle "endrod", center {_loc}, visibleRange 30
				loop all players in radius 2 around {_loc}:
					{_tg} is not set
					kitCheckTeam(loop-player, {_player}, false) is true
					set {_tg} to loop-player
			wait a tick
		if {_tg} is set:
			kitPalsy({_tg}, 5 seconds)
			kitMsg({_player}, "§6%{_tg}% §eのスキルを封じました!")
			playSound("item.lodestone_compass.lock", 1, 0.5, {_tg})
			loop 10 times:
				set {_l} to aroundEffect({_tg})
				drawDot particle "redstone", RGB 255, 255, 0, center {_l}, visibleRange 30

function kitWeapon_Engineer_4(player: player):
	if checkFuel({_player}, 4, "Weapon.main") is true:
		toolCT({_player}, "Engineer", 4, "Weapon.main")
		kitMsg({_player}, "<##a0d8ef>追い風を吹かせます!")
		set {_now} to now
		set {Stats.%{_player}%::Wind Stick} to {_now}
		loop 200 times:
			if {Stats.%{_player}%::Wind Stick} is {_now}:
				loop all entities in radius 7 around location of {_player}:
					if kitCheckTeam({_player}, loop-entity, true) is true:
						loop-entity does not have speed
						apply speed 1 to loop-entity for 1 tick
					else if kitCheckTeam({_player}, loop-entity, false) is true:
						loop-entity does not have slowness
						apply slowness 1 to loop-entity for 1 tick
				loop all blocks in radius 7 around {_player}:
					loop-block is air
					chance of 0.1%:
						set {_lb} to location of loop-block
						playSound("entity.phantom.flap", 1, 2, {_lb})
						effectWindStick({_player}, {_lb})
				wait a tick
		delete {Stats.%{_player}%::Wind Stick}

function effectWindStick(player: player, loc: location):
	set {_el} to {_loc}
	set pitch of {_el} to 20
	loop 5 times:
		set yaw of {_el} to yaw of {_player}
		set {_el} to location 0.6 meters in front of {_el}
		drawDot particle "mobspell", RGB 160, 216, 239, center {_el}, visibleRange 30
		wait a tick

function kitWeapon_Engineer_5(player: player):
	if {_player} is sneaking:
		if {Stats.%{_player}%::BotNumber} is not set:
			set {Stats.%{_player}%::BotNumber} to 0
			set {Stats.%{_player}%::BotCharge} to 0
			set {Stats.%{_player}%::BotPattern} to "Defence"
			engineerBotAI({_player})
		if {Stats.%{_player}%::BotNumber} < 5:
			if {Stats.%{_player}%::BotCharge} < 20:
				set {_now} to now
				set {Stats.%{_player}%::BotChargeNow} to {_now}
				playSound("entity.blaze.burn", 1, 2, {_player})
				loop 5 times:
					if {Stats.%{_player}%::BotCharge} < 20:
						add 1 to {Stats.%{_player}%::BotCharge}
					loop {Stats.%{_player}%::BotCharge} times:
						if loop-number-2 is 1:
							set {_ok.line} to "|"
						else:
							set {_ok.line} to "%{_ok.line}%|"
					set {_ngtime} to 20 - {Stats.%{_player}%::BotCharge}
					set {_ng.line} to ""
					if {_ngtime} is not 0:
						loop {_ngtime} times:
							if loop-number-2 is 1:
								set {_ng.line} to "|"
							else:
								set {_ng.line} to "%{_ng.line}%|"
					send action bar "§e[ §a%{_ok.line}%§8%{_ng.line}% §e]" to {_player}
					loop 3 times:
						set {_el} to aroundEffect({_player})
						drawDot count 1, particle "smoke", center {_el}, visibleRange 30
					wait a tick
				wait a tick
				if {Stats.%{_player}%::BotChargeNow} is {_now}:
					if {Stats.%{_player}%::BotCharge} >= 20:
						engineerBotGenerator({_player})
						delete {Stats.%{_player}%::BotChargeNow}
						set {Stats.%{_player}%::BotCharge} to 0
					else:
						delete {Stats.%{_player}%::BotChargeNow}
						set {Stats.%{_player}%::BotCharge} to 0
						playSound("block.fire.extinguish", 1, 1, {_player})
	else:
		playSound("ui.button.click", 1, 1, {_player}, true)
		load yml "plugins/skript-yaml/Kit Classes/Engineer.yml" as "bot.%{_player}%"
		if {Stats.%{_player}%::BotPattern} is "Defence":
			set {Stats.%{_player}%::BotPattern} to "Attack"
			kitMsg({_player}, "§6行動パターンを変更しました§a: §4§l襲撃モード")
			set {_BotHead} to yml value "kititems.Bot Red" from "bot.%{_player}%"
			loop all skeletons:
				metadata value "Bot Owner" of loop-skeleton is "%{_player}%"
				set spawned skeleton's helmet to {_BotHead}
		else:
			set {Stats.%{_player}%::BotPattern} to "Defence"
			kitMsg({_player}, "§6行動パターンを変更しました§a: §1§l防衛モード")
			set {_BotHead} to yml value "kititems.Bot Blue" from "bot.%{_player}%"
			loop all skeletons:
				metadata value "Bot Owner" of loop-skeleton is "%{_player}%"
				set spawned skeleton's helmet to {_BotHead}
		unload yml "bot.%{_player}%"

function kitSub_Engineer_5(player: player):
	set {_tg} to target block of {_player}
	if {_player} is sneaking:
		if {_tg} is set:
			if distance between {_tg} and {_player} <= 30:
				set {Stats.%{_player}%::BotAttack} to location of {_tg}
				playSound("entity.bee.sting", 1, 2, {_player})
				kitMsg({_player}, "§4襲撃場所§6を指定しました")
				set {_dis} to round(distance between {_tg} and {_player})
				set {_bl} to location of {_player}
				add 1.5 to y-coordinate of {_bl}
				loop {_dis} times:
					set {_el} to location loop-number meters in front of {_bl}
					drawDot count 1, particle "endrod", center {_el}, visibleRange 30

on damage of skeleton:
	metadata value "Bot Owner" of victim is set
	if damage cause is not fall or suffocation:
		set {_player} to metadata value "Bot Owner" of victim parsed as player
		if kitCheckTeam(attacker, {_player}, true) is true:
			cancel event
		else:
			set {_num} to metadata value "Bot Number" of victim
			set {_uuid} to metadata value "Bot UUID" of victim
			subtract 1 from {Stats.%{_player}%::BotNumber}
			delete {Stats.%{_player}%::BotList_%{_num}%}
			delete {Stats.%{_player}%::Bot_UUID_%{_uuid}%}
			delete victim
			playSound("entity.iron_golem.damage", 1, 2, victim)
			set {_baseloc} to location of victim
			loop 5 times:
				set {_el} to {_baseloc}
				add a random number between -0.5 and 0.5 to x-coordinate of {_el}
				add a random number between -0.5 and 0.5 to z-coordinate of {_el}
				add a random number between 0 and 2 to y-coordinate of {_el}
				drawDot count 1, particle "critmagic", center {_el}, visibleRange 30
	else:
		cancel event

function engineerBotAI(player: player):
	load yml "plugins/skript-yaml/Kit Classes/Engineer.yml" as "botai.%{_player}%"
	set {_BotRed} to yml value "kititems.Bot Red" from "botai.%{_player}%"
	set {_BotBlue} to yml value "kititems.Bot Blue" from "botai.%{_player}%"
	set {_BotInactive} to yml value "kititems.Bot Inactive" from "botai.%{_player}%"
	unload yml "botai.%{_player}%"
	while {Class::%{_player}%} is "Engineer":
		delete {_target}
		if {Stats.%{_player}%::BotPattern} is "Defence":
			loop 5 times:
				delete {_aloc.%loop-number%}
			loop all entities in radius 5 around {_player}:
				{_target} is not set
				loop-entity is not {_player}
				kitCheckTeam(loop-entity, {_player}, false) is true
				set {_target} to loop-entity
			set {_baseloc} to location of {_player}
			subtract 1 from y-coordinate of {_baseloc}
			set pitch of {_baseloc} to 0
			set {_loc1} to location 2 meters in front of {_baseloc}
			set {_loc2} to location 1 meters in front of {_baseloc}
			set {_loc2} to location 1 meters to the left of {_loc2}
			set {_loc3} to location 1 meters in front of {_baseloc}
			set {_loc3} to location 1 meters to the right of {_loc3}
			set {_loc4} to location 2 meters to the left of {_baseloc}
			set {_loc5} to location 2 meters to the right of {_baseloc}
			if {_target} is set:
				set {_to} to vector of location 1 meters above {_target}
				loop 5 times:
					set {_from} to vector of location 1.5 meters above {_loc%loop-number%}
					set {_vector} to {_to} -- {_from}
					set {_vector} to normalized {_vector}
					set {_yaw} to yaw of {_vector}
					set {_pitch} to pitch of {_vector}
					set yaw of {_loc%loop-number%} to {_yaw}
					set pitch of {_loc%loop-number%} to {_pitch}
					chance of 10%:
						delete {_ok}
						loop all skeletons:
							metadata value "Bot Owner" of loop-skeleton is "%{_player}%"
							metadata value "Bot Number" of loop-skeleton is loop-number-1
							set {_ok} to true
						{_ok} is true
						engineerBotBeam({_player}, location 1.5 meters above {_loc%loop-number%}, false)
			loop all skeletons:
				metadata value "Bot Owner" of loop-skeleton is "%{_player}%"
				set loop-skeleton's helmet to {_BotBlue}
				set {_num} to metadata value "Bot Number" of loop-skeleton
				teleport loop-skeleton to {_loc%{_num}%}
		else:
			if {Stats.%{_player}%::BotAttack} is set:
				if distance between {_player} and {Stats.%{_player}%::BotAttack} <= 30:
					loop 5 times:
						if {_aloc.%loop-number%} is not set:
							loop all skeletons:
								metadata value "Bot Owner" of loop-skeleton is "%{_player}%"
								metadata value "Bot Number" of loop-skeleton is loop-number-1
								set {_to} to vector of location 3 meters above {Stats.%{_player}%::BotAttack}
								set {_from} to vector of location 1.5 meters above loop-skeleton
								set {_vector} to {_to} -- {_from}
								set {_vector} to normalized {_vector}
								set {_yaw} to yaw of {_vector}
								set {_pitch} to pitch of {_vector}
								set {_aloc.%loop-number-1%} to location of loop-skeleton
								set yaw of {_aloc.%loop-number-1%} to {_yaw}
								set pitch of {_aloc.%loop-number-1%} to {_pitch}
					loop all entities in radius 10 around {Stats.%{_player}%::BotAttack}:
						{_target} is not set
						loop-entity is not {_player}
						kitCheckTeam(loop-entity, {_player}, false) is true
						set {_target} to loop-entity
					loop 5 times:
						if distance between {Stats.%{_player}%::BotAttack} and {_aloc.%loop-number%} > 8:
							set {_to} to vector of location 3 meters above {Stats.%{_player}%::BotAttack}
							set {_from} to vector of {_aloc.%loop-number%}
							set {_vector} to {_to} -- {_from}
							set {_vector} to normalized {_vector}
							set {_yaw} to yaw of {_vector}
							set {_pitch} to pitch of {_vector}
							set yaw of {_aloc.%loop-number%} to {_yaw}
							set pitch of {_aloc.%loop-number%} to {_pitch}
							set {_aloc.%loop-number%} to location 0.1 meters in front of {_aloc.%loop-number%}
							loop all skeletons:
								metadata value "Bot Owner" of loop-skeleton is "%{_player}%"
								metadata value "Bot Number" of loop-skeleton is loop-number-1
								if loop-skeleton's helmet is not {_BotRed}:
									set loop-skeleton's helmet to {_BotRed}
								teleport loop-skeleton to {_aloc.%loop-number-1%}
						else:
							if {_target} is set:
								set {_to} to vector of location 1 meters above {_target}
								loop all skeletons:
									metadata value "Bot Owner" of loop-skeleton is "%{_player}%"
									metadata value "Bot Number" of loop-skeleton is loop-number-1
									set loop-skeleton's helmet to {_BotRed}
									set {_from} to vector of location of loop-skeleton's head
									set {_vector} to {_to} -- {_from}
									set {_vector} to normalized {_vector}
									set {_yaw} to yaw of {_vector}
									set {_pitch} to pitch of {_vector}
									set {_loc} to location of loop-skeleton
									set yaw of {_loc} to {_yaw}
									set pitch of {_loc} to {_pitch}
									teleport loop-skeleton to {_loc}
									chance of 10%:
										engineerBotBeam({_player}, location 1.5 meters above {_loc}, true)
							else:
								delete {_ng}
								if distance between {_aloc.%loop-number%} and {Stats.%{_player}%::BotAttack} >= 8:
									set {_ng} to true
								if block at {_aloc.%loop-number%} is not passable:
									set {_ng} to true
								chance of 5%:
									set {_ng} to false
								if {_ng} is true:
									set {_to} to vector of location 3 meters above {Stats.%{_player}%::BotAttack}
									set {_from} to vector of {_aloc.%loop-number%}
									set {_vector} to {_to} -- {_from}
									set {_vector} to normalized {_vector}
									set {_yaw} to yaw of {_vector}
									set {_pitch} to pitch of {_vector}
									set yaw of {_aloc.%loop-number-1%} to {_yaw}
									set pitch of {_aloc.%loop-number-1%} to {_pitch}
								else if {_ng} is false:
									set yaw of {_aloc.%loop-number%} to a random integer between 1 and 359
									set pitch of {_aloc.%loop-number%} to a random integer between -90 and 90
								set {_aloc.%loop-number%} to location 0.1 meters in front of {_aloc.%loop-number%}
								loop all skeletons:
									metadata value "Bot Owner" of loop-skeleton is "%{_player}%"
									metadata value "Bot Number" of loop-skeleton is loop-number-1
									set loop-skeleton's helmet to {_BotRed}
									teleport loop-skeleton to {_aloc.%loop-number-1%}
				else:
					loop all skeletons:
						metadata value "Bot Owner" of loop-skeleton is "%{_player}%"
						loop-skeleton's helmet is not {_BotInactive}
						set loop-skeleton's helmet to {_BotInactive}
						set {_tl} to location of loop-skeleton
						set pitch of {_tl} to 75
						teleport loop-skeleton to {_tl}
						playSound("block.beacon.deactivate", 1, 2, loop-skeleton)
			else:
				loop all skeletons:
					metadata value "Bot Owner" of loop-skeleton is "%{_player}%"
					loop-skeleton's helmet is not {_BotInactive}
					set loop-skeleton's helmet to {_BotInactive}
					set {_tl} to location of loop-skeleton
					set pitch of {_tl} to 75
					teleport loop-skeleton to {_tl}
					playSound("block.beacon.deactivate", 1, 2, loop-skeleton)
		wait a tick
	loop all skeletons:
		metadata value "Bot Owner" of loop-skeleton is "%{_player}%"
		delete loop-skeleton

function engineerBotBeam(player: player, loc: location, attack: boolean):
	playSound("item.trident.return", 1, 2, {_loc})
	loop 20 times:
		if {_ng} is not set:
			add 0.5 to {_fr}
			set {_el} to location {_fr} meters in front of {_loc}
			if block at {_el} is passable:
				if {_attack} is false:
					drawDot count 1, particle "redstone", RGB 44, 169, 225, center {_el}, visibleRange 30
				else:
					drawDot count 1, particle "redstone", RGB 211, 56, 28, center {_el}, visibleRange 30
				loop all entities in radius 1 around {_el}:
					kitCheckTeam(loop-entity, {_player}, false) is true
					metadata value "Bot Owner" of loop-entity is not set
					if {_attack} is false:
						set {_dm} to 1
					else:
						set {_dm} to 3
					kitDamage({_player}, loop-entity, {_dm})
				wait a tick
			else:
				set {_ng} to true

function engineerBotGenerator(player: player):
	if {Stats.%{_player}%::BotNumber} < 5:
		if checkFuel({_player}, 5, "Weapon.main") is true:
			add 1 to {Stats.%{_player}%::BotNumber}
			loop 8 times:
				set {_num} to a random integer between 0 and 9
				set {_n.%loop-number%} to {_num}
			set {_uuid} to "%{_n.1}%%{_n.2}%%{_n.3}%%{_n.4}%%{_n.5}%%{_n.6}%%{_n.7}%%{_n.8}%"
			loop 5 times:
				{_ok} is not set
				if {Stats.%{_player}%::BotList_%loop-number%} is not set:
					set {_ok} to true
					set {Stats.%{_player}%::BotList_%loop-number%} to {_uuid}
					set {Stats.%{_player}%::Bot_UUID_%{_uuid}%} to loop-number
					set {_number} to loop-number
			spawn a skeleton at {_player} with nbt "{NoGravity:1b,ArmorItems:[{id:""minecraft:air"",Count:1b},{id:""minecraft:air"",Count:1b},{id:""minecraft:air"",Count:1b},{id:""minecraft:air"",Count:1b}],HandItems:[{id:""minecraft:air"",Count:1b},{id:""minecraft:air"",Count:1b}],ArmorDropChances:[0.085F,0.085F,0.085F,0.0F],CanPickUpLoot:0b,NoAI:1,Silent:1,Team:""noCollision"",ActiveEffects:[{Id:14,Amplifier:0,Duration:72000,ShowParticles:false}]}"
			set spawned skeleton's display name to "%{_player}%"
			set metadata value "gametype" of spawned skeleton to "Kit"
			set metadata value "Bot Owner" of spawned skeleton to "%{_player}%"
			set metadata value "Bot UUID" of spawned skeleton to {_uuid}
			set metadata value "Bot Number" of spawned skeleton to {_number}
			load yml "plugins/skript-yaml/Kit Classes/Engineer.yml" as "botgen.%{_player}%"
			set {_BotBlue} to yml value "kititems.Bot Blue" from "botgen.%{_player}%"
			unload yml "botgen.%{_player}%"
			set spawned skeleton's helmet to {_BotBlue}

# Skills
function kitSkillEngineer(player: player) :: boolean:
	set {_tool} to {_player}'s tool
	set {_item.num} to kitItemNumberChecker({_tool})
	if checkCT({_player}, name of {_player}'s tool) is true:
		if {Stats.%{_player}%::SkillLocation} is not set:
			send action bar "§c§l対象地点がありません" to {_player}
			return true
			stop
		set {_loc} to {Stats.%{_player}%::SkillLocation}
		if {_item.num} is 1:
			kitSkill_Engineer_1({_player}, {_loc})
		else if {_item.num} is 2:
			kitSkill_Engineer_2({_player}, {_loc})
		else if {_item.num} is 3:
			kitSkill_Engineer_3({_player}, {_loc})
		else if {_item.num} is 4:
			kitSkill_Engineer_4({_player}, {_loc})
		else if {_item.num} is 5:
			kitSkill_Engineer_5({_player}, {_loc})
		else if {_item.num} is 6:
			kitSkill_Engineer_6({_player}, {_loc})
		else if {_item.num} is 7:
			kitSkill_Engineer_7({_player}, {_loc})
		else if {_item.num} is 8:
			kitSkill_Engineer_8({_player}, {_loc})
	return true

on rightclick holding a coal:
	{Class::%player%} is "Engineer"
	name of player's tool contains "<##D70035>Dasher"
	set {_item} to player's tool
	cancel event
	if checkCT(player, name of player's tool) is true:
		if {Kit-Fuel::%player%} >= 10:
			setFuelCT(player)
			subtract 10 from {Kit-Fuel::%{_player}%}
			detectCT(player, {_item})
			apply speed 1 to player for 10 seconds
			kitMsg(player, "§e加速装置を使った!")
			make a fake explosion at player
			push player forward at speed 2

function kitSkill_Engineer_1(player: player, loc: location):
	toolCT({_player}, "Engineer", 1)
	set {_now} to now
	set {Stats.%{_player}%::LaunchPad-Time} to {_now}
	kitFakeDeleteData({_player}, "Machine-Launch Pad")
	if {team::%{_player}%} is "red":
		set {_block} to "minecraft:red_stained_glass"
	else if {team::%{_player}%} is "blue":
		set {_block} to "minecraft:blue_stained_glass"
	else if {team::%{_player}%} is "yellow":
		set {_block} to "minecraft:yellow_stained_glass"
	else if {team::%{_player}%} is "green":
		set {_block} to "minecraft:lime_stained_glass"
	else:
		set {_block} to "minecraft:purple_stained_glass"
	set {_plate} to "minecraft:heavy_weighted_pressure_plate"
	set {_loc.glass} to {_loc}
	subtract 0.5 from y-coordinate of {_loc.glass}
	set {_loc.plate} to {_loc}
	kitFakeBlock({_player}, {_loc.plate}, {_plate}, "Machine-Launch Pad")
	kitFakeBlock({_player}, {_loc.glass}, {_block}, "Machine-Launch Pad")
	kitMsg({_player}, "<##D70035>Launch Pad§6を設置しました!")
	playSound("entity.blaze.hurt", 1, 2, {_loc})
	while {Stats.%{_player}%::LaunchPad-Time} is {_now}:
		wait a tick
		loop {_time::*}:
			if {_time::%loop-index%} is set:
				if {_time::%loop-index%} <= 0:
					delete {_time::%loop-index%}
				else:
					subtract 1 from {_time::%loop-index%}
		loop all players in radius 1 around {_loc.plate}:
			{_time::%loop-player%} is not set
			{team::%loop-player%} is {team::%{_player}%}
			{Stats.%loop-player%::NoSupport} is not set
			checkFuel({_player}, 1) is true
			setSupporter(loop-player, {_player})
			set {Stats.%loop-player%::LaunchPad} to true
			push loop-player upwards at speed 1
			push loop-player forward at speed 2
			set {_time::%loop-player%} to 20
			playSound("entity.wither.shoot", 1, 2, loop-player)
			loop 10 times:
				set {_el} to aroundEffect(loop-player)
				drawDot count 1, particle "campfirecozy", center {_el}, visibleRange 30
		delete {_exist}
		loop all entities:
			type of loop-entity is armor stand
			metadata value "kit-armor" of loop-entity is "Machine-Launch Pad"
			metadata value "Machine-Launch Pad" of loop-entity is "%{_player}%"
			set {_exist} to true
		if {_exist} is true:
			kitFakeReload({_player}, "Machine-Launch Pad")
		else:
			delete {Stats.%{_player}%::LaunchPad-Time}

on damage of player:
	{Stats.%victim%::LaunchPad} is true
	damage was caused by fall
	cancel event
	delete {Stats.%victim%::LaunchPad}

function kitSkill_Engineer_2(player: player, loc: location):
	toolCT({_player}, "Engineer", 2)
	set {_now} to now
	set {Stats.%{_player}%::RestoreFaster-Time} to {_now}
	kitFakeDeleteData({_player}, "Machine-Restore Faster")
	set {_loc.base} to {_loc}
	set {_loc.core} to {_loc}
	add 1 to y-coordinate of {_loc.core}
	kitFakeBlock({_player}, {_loc.base}, "minecraft:oak_fence", "Machine-Restore Faster")
	kitFakeBlock({_player}, {_loc.core}, "minecraft:glowstone", "Machine-Restore Faster")
	kitMsg({_player}, "<##FFF352>Restore Faster§6を設置しました!")
	playSound("entity.blaze.hurt", 1, 2, {_loc})
	set {_skill} to kitSkillItem("Engineer", 2)
	set {_lore::*} to lore of {_skill}
	loop {_lore::*}:
		loop-value contains "§8Fuel§7"
		set {_fuel} to loop-value
	replace every "§8Fuel§7: §4" with "" in {_fuel}
	set {_fuel} to {_fuel} parsed as number
	while {Stats.%{_player}%::RestoreFaster-Time} is {_now}:
		delete {_ok}
		loop 10 times:
			if {Stats.%{_player}%::RestoreFaster-Time} is {_now}:
				if {_ok} is true:
					delete {_tp::*}
#				新しい人の追加 + 範囲内チェック
					loop all players in radius 30 around {_loc.base}:
						kitCheckTeam(loop-player, {_player}, true) is true
						{Class::%loop-player%} is not "Engineer"
						{Stats.%loop-player%::NoSupport} is not set
						if {_pl::*} contains loop-player:
							set {_tp::%loop-player%} to true
						else:
							if {Kit-Fuel::%{_player}%} >= {_fuel}:
								set {_ok} to true
								if {_fu::%loop-player%} is not set:
									set {_fu::%loop-player%} to true
									setFuelCT({_player})
									subtract {_checkfuel} from {Kit-Fuel::%{_player}%}
								add loop-player to {_pl::*}
								set {_tp::%loop-player%} to true
								setSupporter(loop-player, {_player})
								set {Stats.%loop-player%::FastCT} to true
								message formatted "§bクールタイム短縮時間§eが短くなります!" to loop-player
								kitEffect_RestoreFaster(loop-player, true)
					loop {_pl::*}:
						{Stats.%loop-value-2%::FastCT} is true
						{_tp::%loop-value-2%} is not set
						delete {Stats.%loop-value-2%::FastCT}
						message formatted "§bクールタイム短縮§c効果が切れました" to loop-value-2
						kitEffect_RestoreFaster(loop-value-2, false)
						delete {_pl::%loop-index%}
				else:
					delete {_ally}
					delete {_pl::*}
					loop all players in radius 30 around {_loc.base}:
						kitCheckTeam(loop-player, {_player}, true) is true
						{Class::%loop-player%} is not "Engineer"
						{Stats.%loop-player%::NoSupport} is not set
						add 1 to {_ally}
						add loop-player to {_pl::*}
					set {_checkfuel} to {_fuel} * {_ally}
					if {Kit-Fuel::%{_player}%} >= {_checkfuel}:
						set {_ok} to true
						setFuelCT({_player})
						subtract {_checkfuel} from {Kit-Fuel::%{_player}%}
						loop {_pl::*}:
							setSupporter(loop-value-2, {_player})
							set {Stats.%loop-value-2%::FastCT} to true
							message formatted "§bクールタイム短縮時間§eが短くなります!" to loop-value-2
							kitEffect_RestoreFaster(loop-value-2, true)
				wait a second
				delete {_exist}
				loop all entities:
					type of loop-entity is armor stand
					metadata value "kit-armor" of loop-entity is "Machine-Restore Faster"
					metadata value "Machine-Restore Faster" of loop-entity is "%{_player}%"
					set {_exist} to true
				if {_exist} is true:
					kitFakeReload({_player}, "Machine-Restore Faster")
				else:
					delete {Stats.%{_player}%::RestoreFaster-Time}
					loop {_pl::*}:
						{Stats.%loop-value-2%::FastCT} is true
						delete {Stats.%loop-value-2%::FastCT}
						message "§bクールタイム短縮§c効果が切れました" to loop-value-2
						kitEffect_RestoreFaster(loop-value-2, false)

function kitEffect_RestoreFaster(player: player, bool: boolean):
	set {_up} to -0.5
	loop 5 times:
		set {_loc} to location of {_player}
		add 0.5 to {_up}
		if {_bool} is true:
			add {_up} to y-coordinate of {_loc}
		else:
			add 2 to y-coordinate of {_loc}
			subtract {_up} from y-coordinate of {_loc}
		set {_rad} to 0
		loop 10 times:
			set {_el} to {_loc}
			add 36 to {_rad}
			add 0.5 * sin({_rad}) to x-coordinate of {_el}
			add 0.5 * cos({_rad}) to z-coordinate of {_el}
			if {_bool} is true:
				drawDot count 1, particle "mobspell", RGB 255, 255, 0, center {_el}, visibleRange 30
			else:
				drawDot count 1, particle "mobspell", RGB 0, 255, 255, center {_el}, visibleRange 30
		wait a tick

function kitSkill_Engineer_3(player: player, loc: location):
	toolCT({_player}, "Engineer", 3)
	set {_now} to now
	set {Stats.%{_player}%::JumpBeacon-Time} to {_now}
	kitFakeDeleteData({_player}, "Machine-Jump Beacon")
	set {_loc.jump} to {_loc}
	set {Stats.%{_player}%::JumpBeacon} to {_loc.jump}
	kitFakeBlock({_player}, {_loc.jump}, "minecraft:redstone_torch", "Machine-Jump Beacon")
	kitMsg({_player}, "<##E8383D>Jump Beacon§6を設置しました!")
	playSound("entity.blaze.hurt", 1, 2, {_loc})
	while {Stats.%{_player}%::JumpBeacon-Time} is {_now}:
		wait a tick
		loop all players:
			{team::%loop-player%} is {team::%{_player}%}
			{Stats.%loop-player%::NoSupport} is not set
			loop-player does not have a redstone item named "§cJump to Beacon" with lore "味方のビーコンを選択してTPします"
			give a redstone item named "§cJump to Beacon" with lore "味方のビーコンを選択してTPします" to loop-player
		delete {_exist}
		loop all entities:
			type of loop-entity is armor stand
			metadata value "kit-armor" of loop-entity is "Machine-Jump Beacon"
			metadata value "Machine-Jump Beacon" of loop-entity is "%{_player}%"
			set {_exist} to true
		if {_exist} is true:
			kitFakeReload({_player}, "Machine-Jump Beacon")
		else:
			delete {Stats.%{_player}%::JumpBeacon-Time}
			delete {Stats.%{_player}%::JumpBeacon}
	if {Stats.%{_player}%::JumpBeacon-Time} is not set:
		loop all players:
			{team::%loop-player%} is {team::%{_player}%}
			{Stats.%loop-player%::NoSupport} is not set
			loop-player has a redstone item named "§cJump to Beacon" with lore "味方のビーコンを選択してTPします"
			remove a redstone item named "§cJump to Beacon" with lore "味方のビーコンを選択してTPします" from loop-player

on rightclick holding a redstone item:
	name of player's tool is "§cJump to Beacon"
	cancel event
	loop all players:
		{Stats.%loop-player%::JumpBeacon} is set
		{team::%loop-player%} is {team::%player%}
		set {_bl::%loop-player%} to {Stats.%loop-player%::JumpBeacon}
	open chest with 1 row named "§cBeacon list" to player
	wait 1 tick
	set {_ln} to 0
	loop {_bl::*}:
		set slot {_ln} of player's current inventory to redstone torch named "§d%loop-index%§c's Beacon" with lore "§6Location: %x-coordinate of loop-value%, %y-coordinate of loop-value%, %z-coordinate of loop-value%"
		add 1 to {_ln}

on inventory click:
	type of event-inventory is chest inventory
	if inventory name of event-inventory is "§cBeacon list":
		cancel event
		set {_name} to name of clicked item
		replace "§d" with "" in {_name}
		replace "§c's Beacon" with "" in {_name}
		loop all players:
			"%loop-player%" is {_name}
			set {_target} to loop-player
		kitEffect_JumpBeacon(player, {_target})

function kitEffect_JumpBeacon(jumper: player, goaler: player):
	if {Stats.%{_goaler}%::JumpBeacon} is set:
		set {_loc} to location of {_jumper}
		set {_time} to 3
		loop 60 times:
			if {Stats.%{_goaler}%::JumpBeacon} is set:
				teleport {_jumper} to {_loc}
				if {_time} is 3, 2 or 1:
					message formatted "§c%{_time}%..." to {_jumper}
					playSound("ui.button.click", 1, 2, {_loc})
				subtract 0.05 from {_time}
				wait 1 tick
			else:
				message "§cビーコン消滅によりジャンプが中断されました" to {_jumper}
				stop
		if checkFuel({_goaler}, 3) is true:
			teleport {_jumper} to {Stats.%{_goaler}%::JumpBeacon}
			set {_baseloc} to {Stats.%{_goaler}%::JumpBeacon}
			delete {Stats.%{_goaler}%::JumpBeacon}
			kitFakeDeleteData({_goaler}, "Machine-Jump Beacon")
			message "§aジャンプに成功しました!" to {_jumper}
			playSound("entity.wither.shoot", 1, 2, {_jumper})
			set {_up} to -0.5
			loop 5 times:
				set {_el} to {_baseloc}
				add 0.5 to {_up}
				add {_up} to y-coordinate of {_el}
				set {_rad} to 0
				loop 10 times:
					add 36 to {_rad}
					add 0.5 * sin({_rad}) to x-coordinate of {_el}
					add 0.5 * cos({_rad}) to z-coordinate of {_el}
					drawDot count 1, particle "mobspell", RGB 255, 0, 255, center {_el}, visibleRange 30
				wait a tick
		else:
			message formatted "§4燃料不足でジャンプが中断されました..." to {_jumper}
	else:
		message "§cそのビーコンはすでに存在しません!" to {_jumper}

function kitSkill_Engineer_4(player: player, loc: location):
	toolCT({_player}, "Engineer", 4)
	set {_now} to now
# 装置数の確認
	loop all entities:
		type of loop-entity is armor stand
		set {_metadata} to metadata value "kit-armor" of loop-entity
		{_metadata} contains "Machine-Tracking System"
		metadata value {_metadata} of loop-entity is "%{_player}%"
		add 1 to {_allnum}
	if {_allnum} >= 5:
		set {_toptime} to 0	
		loop {Stats.%{_player}%::*}:
			loop-index contains "TrackingSystem-Time"
			set {_value} to loop-value
			set {_ditime} to "%difference between {_value} and {_now}%"
			set {_diftime} to timeNumber({_ditime})
			if {_diftime} > {_toptime}:
				set {_toptime} to {_diftime}
				set {_index} to loop-index
		replace "TrackingSystem-Time-" with "" in {_index}
		kitFakeDeleteData({_player}, "Machine-Tracking System-%{_index}%")
		delete {Stats.%{_player}%::TrackingSystem-Time-%{_index}%}
	add 1 to {Stats.%{_player}%::TrackingSystem-Number}
	set {_num} to {Stats.%{_player}%::TrackingSystem-Number}
	kitFakeBlock({_player}, {_loc}, "minecraft:soul_lantern", "Machine-Tracking System-%{_num}%")
	set {_baseloc} to {_loc}
	add 0.5 to y-coordinate of {_baseloc}
	set {Stats.%{_player}%::TrackingSystem-Time-%{_num}%} to {_now}
	kitMsg({_player}, "<##0075C2>Tracking System§bを設置しました!")
	playSound("block.respawn_anchor.charge", 1, 2, {_loc})
	while {Stats.%{_player}%::TrackingSystem-Time-%{_num}%} is {_now}:
		wait a tick
		delete {_true}
		loop all entities in radius 5 around {_loc}:
			kitCheckTeam({_player}, loop-entity, false) is true
			{Kit-Invisible::%loop-entity%} is not set
			add 1 to {_fuel}
			delete {_true}
			if mod({_fuel}, 20) = 0:
				if checkFuel({_player}, 4) is true:
					set {_true} to true
			else:
				if {Kit-Fuel::%{_player}%} >= 1:
					set {_true} to true
			if {_true} is true:
				kitDamage({_player}, loop-entity, 0.3)
				if loop-entity does not have slowness:
					apply slowness 3 to loop-entity for a tick
				playSound("block.respawn_anchor.ambient", 0.1, 2, {_loc})
				set {_toloc} to location of loop-entity
				add 1 to y-coordinate of {_toloc}
				set {_vector} to setVector({_baseloc}, {_toloc})
				set {_el} to {_baseloc}
				set yaw of {_el} to yaw of {_vector}
				set pitch of {_el} to pitch of {_vector}
				set {_dis} to distance between {_baseloc} and {_toloc}
				set {_dis} to {_dis} / 10
				loop 10 times:
					set {_met} to {_dis} * loop-number
					set {_efl} to location {_met} meters in front of {_el}
					drawDot count 1, particle "redstone", RGB 0, 191, 255, center {_efl}, visibleRange 30
		delete {_exist}
		loop all entities:
			type of loop-entity is armor stand
			metadata value "kit-armor" of loop-entity is "Machine-Tracking System-%{_num}%"
			metadata value "Machine-Tracking System-%{_num}%" of loop-entity is "%{_player}%"
			set {_exist} to true
		if {_exist} is true:
			kitFakeReload({_player}, "Machine-Tracking System-%{_num}%")
			loop all falling blocks:
				metadata value "kit-block" of loop-falling block is "%{_player}%"
				loop-falling block is riding
				metadata value "kit-armor" of vehicle of loop-falling block is "Machine-Tracking System-%{_num}%"
				metadata value "Machine-Tracking System-%{_num}%" of vehicle of loop-falling block is "%{_player}%"
				if {_true} is true:
					set glowing of loop-falling block to true
				else:
					set glowing of loop-falling block to false
		else:
			delete {Stats.%{_player}%::TrackingSystem-Time-%{_num}%}

function kitSkill_Engineer_5(player: player, loc: location):
	toolCT({_player}, "Engineer", 5)
	set {_now} to now
	set {Stats.%{_player}%::DowsingMachine-Time} to {_now}
	kitFakeDeleteData({_player}, "Machine-Dowsing Machine")
	set {_loc.base} to {_loc}
	set {_loc.core} to {_loc}
	add 1 to y-coordinate of {_loc.core}
	kitFakeBlock({_player}, {_loc.base}, "minecraft:cobblestone_wall", "Machine-Dowsing Machine")
	kitFakeBlock({_player}, {_loc.core}, "minecraft:sea_lantern", "Machine-Dowsing Machine")
	kitMsg({_player}, "<##00FFFF>Dowsing Machine§9を設置しました!")
	playSound("block.conduit.activate", 1, 2, {_loc.base})
	while {Stats.%{_player}%::DowsingMachine-Time} is {_now}:
		wait a second
		loop all players in radius 20 around {_loc.core}:
			kitCheckTeam({_player}, loop-player, false) is true
			loop-player does not have glowing
			checkFuel({_player}, 5) is true
			kitDamage({_player}, loop-player, 2)
			apply glowing 1 to loop-player for 10 seconds
			playSound("block.conduit.attack.target", 1, 1, loop-player)
			set {_elbase} to {_loc.core}
			add 0.5 to y-coordinate of {_elbase}
			set {_vector} to setVector({_elbase}, location of head of loop-player)
			set yaw of {_elbase} to yaw of {_vector}
			set pitch of {_elbase} to pitch of {_vector}
			set {_dis} to distance between {_elbase} and loop-player * 0.1
			set {_ln} to 0
			loop 10 times:
				add 1 to {_ln}
				set {_el} to location {_dis} * {_ln} meters in front of {_elbase}
				drawDot count 1, particle "critmagic", center {_el}, visibleRange 30, keepFor 1 second
		delete {_exist}
		loop all entities:
			type of loop-entity is armor stand
			metadata value "kit-armor" of loop-entity is "Machine-Dowsing Machine"
			metadata value "Machine-Dowsing Machine" of loop-entity is "%{_player}%"
			set {_exist} to true
		if {_exist} is true:
			kitFakeReload({_player}, "Machine-Dowsing Machine")
		else:
			delete {Stats.%{_player}%::DowsingMachine-Time}

function kitSkill_Engineer_6(player: player, loc: location):
	toolCT({_player}, "Engineer", 6)
	set {_now} to now
	set {Stats.%{_player}%::RespawnController-Time} to {_now}
	kitFakeDeleteData({_player}, "Machine-Respawn Controller")
	set {_loc.base} to {_loc}
	set {_loc.core} to {_loc}
	set {_loc.top} to {_loc}
	add 1 to y-coordinate of {_loc.core}
	add 2 to y-coordinate of {_loc.top}
	kitFakeBlock({_player}, {_loc.base}, "minecraft:nether_brick_fence", "Machine-Respawn Controller")
	kitFakeBlock({_player}, {_loc.core}, "minecraft:nether_quartz_ore", "Machine-Respawn Controller")
	kitFakeBlock({_player}, {_loc.top}, "minecraft:nether_brick_fence", "Machine-Respawn Controller")
	kitMsg({_player}, "<##7F1184>Respawn Controller§cを設置しました!")
	playSound("entity.evoker.prepare_attack", 1, 1.5, {_loc.base})
	while {Stats.%{_player}%::RespawnController-Time} is {_now}:
		wait 5 ticks
		delete {_tp::*}
		loop all players in radius 10 around {_loc.base}:
			kitCheckTeam(loop-player, {_player}, false) is true
			if {Stats.%loop-player%::RespawnController} is not set:
				set {Stats.%loop-player%::RespawnController} to {_player}
				set {_el} to location of loop-player
				add 1 to y-coordinate of {_el}
				loop 10 times:
					draw 1 witchspell particle at {_el} with direction randomVector({_el}) and speed 2, keepFor 1 tick
				add loop-player to {_pl::*}
			set {_tp::%loop-player%} to true
		loop {_pl::*}:
			{Stats.%loop-value%::RespawnController} is {_player}
			{_tp::%loop-value%} is not set
			delete {Stats.%loop-value%::RespawnController}
			delete {_pl::%loop-index%}
		delete {_exist}
		loop all entities:
			type of loop-entity is armor stand
			metadata value "kit-armor" of loop-entity is "Machine-Respawn Controller"
			metadata value "Machine-Respawn Controller" of loop-entity is "%{_player}%"
			set {_exist} to true
		if {_exist} is true:
			kitFakeReload({_player}, "Machine-Respawn Controller")
		else:
			delete {Stats.%{_player}%::RespawnController-Time}
			loop {_pl::*}:
				{Stats.%loop-value%::RespawnController} is {_player}
				delete {Stats.%loop-value%::RespawnController}

on death of player:
	{Stats.%victim%::RespawnController} is set
	checkFuel(victim, 6) is true
	set {Stats.%victim%::SpawnTime} to 15

function kitSkill_Engineer_7(player: player, loc: location):
	toolCT({_player}, "Engineer", 7)
	set {_now} to now
	set {Stats.%{_player}%::HackingDevice-Time} to {_now}
	kitFakeDeleteData({_player}, "Machine-Hacking Device")
	set {_loc.base} to {_loc}
	set {_loc.core} to {_loc}
	add 1 to y-coordinate of {_loc.core}
	set {Stats.%{_player}%::HackingDevice} to {_loc.core}
	kitFakeBlock({_player}, {_loc.base}, "minecraft:polished_blackstone_wall", "Machine-Hacking Device")
	kitFakeBlock({_player}, {_loc.core}, "minecraft:structure_block", "Machine-Hacking Device")
	kitMsg({_player}, "<##E9BC00>Hacking Device§eを設置しました!")
	playSound("item.trident.return", 1, 1.5, {_loc.base})
	while {Stats.%{_player}%::HackingDevice-Time} is {_now}:
		wait a second
		delete {_exist}
		loop all entities:
			type of loop-entity is armor stand
			metadata value "kit-armor" of loop-entity is "Machine-Hacking Device"
			metadata value "Machine-Hacking Device" of loop-entity is "%{_player}%"
			set {_exist} to true
		if {_exist} is true:
			kitFakeReload({_player}, "Machine-Hacking Device")
		else:
			delete {Stats.%{_player}%::HackingDevice}
			delete {Stats.%{_player}%::HackingDevice-Time}

on leftclick holding a structure block:
	set {_tool} to player's tool
	set {_item.kit} to kitItemKitChecker({_tool})
	{_item.kit} is "Engineer"
	set {_item.type} to kitItemTypeChecker({_tool})
	{_item.type} is "Skill"
	set {_item.num} to kitItemNumberChecker({_tool})
	{_item.num} is 7
	{Stats.%player%::HackingDevice} is set
	checkCT(player, "Hacking Wave") is true
	if checkFuel(player, 7) is true:
		setCT(player, "Hacking Wave", 3)
		kitMsg(player, "§e§lHacking Device §6のチャージを行ないます...")
		set {_pitch} to 0.5
		set {_round} to 0
		loop all falling blocks:
			metadata value "kit-block" of loop-falling block is "%player%"
			loop-falling block is riding
			metadata value "kit-armor" of vehicle of loop-falling block is "Machine-Hacking Device"
			metadata value "Machine-Hacking Device" of vehicle of loop-falling block is "%player%"
			set glowing of loop-falling block to true
		loop 60 times:
			if {Stats.%player%::HackingDevice} is set:
				add 0.25 to {_round}
				set {_baseloc} to {Stats.%player%::HackingDevice}
				add 0.5 to y-coordinate of {_baseloc}
				loop 10 times:
					set {_el} to {_baseloc}
					add a random number between {_round} * -1 and {_round} to x-coordinate of {_el}
					add a random number between {_round} * -1 and {_round} to z-coordinate of {_el}
					add a random number between {_round} * -1 and {_round} to y-coordinate of {_el}
					drawDot count 1, particle "critmagic", center {_el}, visibleRange 30
				playSound("entity.blaze.hurt", 0.6, {_pitch}, {Stats.%player%::HackingDevice})
				add 0.025 to {_pitch}
				wait a tick
		if {Stats.%player%::HackingDevice} is set:
			kitMsg(player, "§5装置より <##E9BC00>§lハッキングウェーブ §5を放出しました!")
			playSound("block.respawn_anchor.set_spawn", 1, 1, {Stats.%player%::HackingDevice})
			loop all players in radius 15 around {Stats.%player%::HackingDevice}:
				kitCheckTeam(player, loop-player, false) is true
				kitPalsy(loop-player, 5 seconds)
				apply mining fatigue 1 to loop-player for 5 seconds
				message formatted "§eハッキングでスキルの使用が禁じられた!" to loop-player
			loop all falling blocks:
				metadata value "kit-block" of loop-falling block is "%player%"
				loop-falling block is riding
				metadata value "kit-armor" of vehicle of loop-falling block is "Machine-Hacking Device"
				metadata value "Machine-Hacking Device" of vehicle of loop-falling block is "%player%"
				set glowing of loop-falling block to false
			set {_s} to 0
			set {_t} to 0
			set {_pl} to {_baseloc}
			loop 19 time:
				loop 36 time:
					set {_loc} to {_pl}
					set {_vector} to {_loc}
					set {_x} to x-coordinate of {_loc}
					set {_y} to y-coordinate of {_loc}
					set {_z} to z-coordinate of {_loc}
					set x-coordinate of {_vector} to {_x} + ( 15 * sin({_s}) * cos({_t}) )
					set y-coordinate of {_vector} to {_y} + ( 15 * cos({_s}) )
					set z-coordinate of {_vector} to {_z} + ( 15 * sin({_s}) * sin({_t}) )
					chance of 30%:
						drawDot count 1, particle "mobspell", RGB 255, 255, 0, center {_vector}, visibleRange 30
					add 10 to {_t}
				add 10 to {_s}

function kitSkill_Engineer_8(player: player, loc: location):
	toolCT({_player}, "Engineer", 8)
	set {_now} to now
	set {Stats.%{_player}%::ShieldCrystal-Time} to {_now}
	kitFakeDeleteData({_player}, "Machine-Shield Crystal")
	set {_loc.base} to {_loc}
	subtract 0.5 from y-coordinate of {_loc.base}
	set {_loc.core} to {_loc}
	add 1 to y-coordinate of {_loc.core}
	kitFakeBlock({_player}, {_loc.base}, "minecraft:diamond_block", "Machine-Shield Crystal")
	spawn end crystal at {_loc.core} with nbt "{ShowBottom:false}"
	set metadata value "gametype" of spawned end crystal to "Kit"
	set metadata value "shield crystal" of spawned end crystal to "%{_player}%"
	kitMsg({_player}, "<##2CB4AD>Shield Crystal§1を設置しました!")
	playSound("entity.ender_eye.death", 1, 0.5, {_loc.core})
	while {Stats.%{_player}%::ShieldCrystal-Time} is {_now}:
		wait a second
		delete {_tp::*}
		loop all players in radius 10 around {_loc.core}:
			kitCheckTeam(loop-player, {_player}, true) is true
			if {Kit-Shield::%loop-player%} is not set:
				if {_shield::%loop-player%} is set:
					delete {_shield::%loop-player%}
					setCT(loop-player, "Crystal Shield", 5)
				else:
					checkCT(loop-player, "Crystal Shield", true) is true
					checkFuel({_player}, 8) is true
					setSupporter(loop-player, {_player})
					kitShield(loop-player, 3)
#					set {_nosh::%loop-value%} to 10
					message formatted "§3§lShield Crystal§9のシールドが付与された!" to loop-player
					playSound("block.beacon.power_select", 1, 2, {_loc.core})
#					add loop-player to {_pl::*}
			else:
				set {_shield::%loop-player%} to true
#			set {_tp::%loop-player%} to true
#		loop {_pl::*}:
#			{Kit-Shield::%loop-value%} is set
#			{_tp::%loop-value%} is not set
#			subtract 1 from {_nosh::%loop-value%}
#			if {_nosh::%loop-value%} <= 0:
#				message "§3§lShield Crystal§1の効果が消滅しました" to loop-value
#				delete {Kit-ShieldTime::%loop-value%}
#				delete {Kit-Shield::%loop-value%}
#				delete {_shield::%loop-value%}
		delete {_exist}
		loop all entities:
			type of loop-entity is armor stand
			metadata value "kit-armor" of loop-entity is "Machine-Shield Crystal"
			metadata value "Machine-Shield Crystal" of loop-entity is "%{_player}%"
			set {_exist} to true
		if {_exist} is true:
			kitFakeReload({_player}, "Machine-Shield Crystal")
		else:
			delete {Stats.%{_player}%::ShieldCrystal-Time}
#			loop {_pl::*}:
#				{Kit-Shield::%loop-value%} is set
#				delete {Kit-ShieldTime::%loop-value%}
#				delete {Kit-Shield::%loop-value%}
#				message formatted "§3§lShield Crystal§1の効果が消滅しました" to loop-value
	loop all entities:
		metadata value "shield crystal" of loop-entity is "%{_player}%"
		delete loop-entity

on damage of end crystal:
	metadata value "shield crystal" of victim is set
	cancel event

# Abilities
function kitTimerEngineer(player: player):
	set {_fuels} to 0
	while {Class::%{_player}%} is "Engineer":
		set {_tool} to {_player}'s tool
		set {_item.type} to kitItemTypeChecker({_tool})
		set {_item.num} to kitItemNumberChecker({_tool})
		add 1 to {_fuels}
		if mod({_fuels}, 2) = 0:
			set {_fuels} to 0
			if {Kit-Fuel::%{_player}%} < 100:
				if {Stats.%{_player}%::Fuel CT} is not set:
					add 1 to {Kit-Fuel::%{_player}%}
		delete {_true}
		if {_tool} is air:
			set {_true} to true
		else:
			set {_name} to name of {_tool}
			if checkCT({_player}, {_name}, true) is true:
				set {_true} to true
				{_item.type} is "Weapon.main"
				if {_item.num} is 5:
					{_player} is sneaking
					delete {_true}
		if {_true} is true:
			send action bar "§8§lFuel§7: §4%{Kit-Fuel::%{_player}%}%" to {_player}
		if {_player} is sneaking:
			if block 0.1 meters below {_player} is passable:
				if {Kit-Fuel::%{_player}%} >= 1:
					setFuelCT({_player})
					subtract 1 from {Kit-Fuel::%{_player}%}
					apply levitation 1 to {_player} for 2 ticks
					playSound("block.fire.ambient", 0.8, 2, {_player})
					loop 3 times:
						set {_el} to aroundEffect({_player})
						drawDot count 1, particle "smoke", center {_el}, visibleRange 30
				else:
					if {_player} has levitation:
						remove levitation from {_player}
			else:
				if {_player} has levitation:
					remove levitation from {_player}
		else:
			if {_player} has levitation:
				remove levitation from {_player}
		wait a tick

function checkFuel(player: player, num: number, type: text = "Skill") :: boolean:
	set {_tool} to {_player}'s tool
	if kitItemKitChecker({_tool}) is "Engineer":
		if kitItemTypeChecker({_tool}) is {_type}:
			if kitItemNumberChecker({_tool}) is {_num}:
				set {_fueltool} to {_tool}
	if {_fueltool} is not set:
		loop all items in {_player}'s inventory:
			kitItemKitChecker(loop-item) is "Engineer"
			kitItemTypeChecker(loop-item) is {_type}
			kitItemNumberChecker(loop-item) is {_num}
			set {_fueltool} to loop-item
	set {_lore::*} to lore of {_fueltool}
	loop {_lore::*}:
		loop-value contains "§8Fuel§7"
		set {_fuel} to loop-value
	replace every "§8Fuel§7: §4" with "" in {_fuel}
	set {_fuel} to {_fuel} parsed as number
	if {Kit-Fuel::%{_player}%} >= {_fuel}:
		setFuelCT({_player})
		subtract {_fuel} from {Kit-Fuel::%{_player}%}
		return true
	else:
		send action bar "§c§l燃料が不足しています!" to {_player}
		return false

function setFuelCT(player: player):
	if {Stats.%{_player}%::Fuel CT} is set:
		set {Stats.%{_player}%::Fuel CT} to 100
	else:
		set {Stats.%{_player}%::Fuel CT} to 100
		while {Stats.%{_player}%::Fuel CT} > 0:
			subtract 1 from {Stats.%{_player}%::Fuel CT}
			wait a tick
		delete {Stats.%{_player}%::Fuel CT}

function kitUltEngineer(player: player):
	message "§c現在地点にテレポート装置を設置します!" to {_player}
	message "§c破壊されるまで,復活地点周辺から装置に飛ぶことが出来ます!" to {_player}
	set {_tploc} to location of {_player}
	if {Kit-tochu} is true:
		loop {Kit-GameStageRespawns.%{TrueTeam::%{_player}%}%::*}:
			add loop-value to {_fromloc::*}
	else:
		add {Kit-TestWorld} to {_fromloc::*}
	set {_now} to now
	set {Ult.%{_player}%::Engineer} to {_now}
	set {_mecloc} to {_tploc}
	add 2 to y-coordinate of {_mecloc}
	kitFakeBlock({_player}, {_mecloc}, "minecraft:crying_obsidian", "Machine-Transport Lift")
	loop {_fromloc::*}:
		set {_armloc} to loop-value
		add 2 to y-coordinate of {_armloc}
		set pitch of {_armloc} to 0
		set {_armloc} to location 3 meters in front of {_armloc}
		spawn an armor stand at {_armloc} with nbt "{Invulnerable:1b,PersistenceRequired:1b,NoBasePlate:1b,NoGravity:1b,Invisible:1b,Marker:1b}"
		set metadata value "gametype" of spawned armor stand to "Kit"
		set metadata value "Kit-EngineerUlt" of spawned armor stand to "%{_player}%"
		set display name of spawned armor stand to "§3§lスニーク§7で§6§lテレポート§7します!"
	set {_tpy} to 0.5
	set {_fromy} to 0
	while {Ult.%{_player}%::Engineer} is {_now}:
		wait a tick
#	テレポート動作
		loop {_fromloc::*}:
			set {_temploc} to loop-value
			loop all players in radius 3 around {_temploc}:
				kitCheckTeam({_player}, loop-player, true) is true
				loop-player is sneaking
				teleport loop-player to {_tploc}
				message formatted "§5§lテレポートしました!" to loop-player
				playSound("entity.enderman.teleport", 1, 0.5, {_tploc})
				set {_beloc} to {_tploc}
				add 1 to y-coordinate of {_beloc}
				loop 30 times:
					draw 1 witchspell particle at {_beloc} with direction randomVector({_beloc}) and speed 3, keepFor 1 tick
#	エフェクト
		delete {_tpeffs::*}
		delete {_fromeffs::*}
		set {_tpeffbase} to {_tploc}
		subtract 0.01 from {_tpy}
		if {_tpy} <= 0:
			set {_tpy} to 0.5
		loop 4 times:
			set {_ln} to loop-number - 1
			set {_temploc} to {_tpeffbase}
			add 0.5 * {_ln} + {_tpy} to y-coordinate of {_temploc}
			add {_temploc} to {_tpeffs::*}
		loop {_tpeffs::*}:
			set {_tpeff} to loop-value
			set {_rad} to 0
			loop 10 times:
				add 36 to {_rad}
				set {_eff} to {_tpeff}
				add sin({_rad}) * 0.5 to x-coordinate of {_eff}
				add cos({_rad}) * 0.5 to z-coordinate of {_eff}
				drawDot count 1, particle "redstone", RGB 255, 0, 255, center {_eff}, visibleRange 30
		loop {_fromloc::*}:
			set {_fromeffbase} to loop-value
			add 0.01 to {_fromy}
			if {_fromy} >= 0.5:
				set {_fromy} to 0
			loop 4 times:
				set {_ln} to loop-number - 1
				set {_temploc} to {_fromeffbase}
				add 0.5 * {_ln} + {_fromy} to y-coordinate of {_temploc}
				add {_temploc} to {_fromeffs::*}
			loop {_fromeffs::*}:
				set {_fromeff} to loop-value-2
				set {_rad} to 0
				loop 36 times:
					add 10 to {_rad}
					set {_eff} to {_fromeff}
					add sin({_rad}) * 3 to x-coordinate of {_eff}
					add cos({_rad}) * 3 to z-coordinate of {_eff}
					drawDot count 1, particle "redstone", RGB 255, 0, 255, center {_eff}, visibleRange 30
#	存在確認		
		delete {_exist}
		loop all entities:
			type of loop-entity is armor stand
			metadata value "kit-armor" of loop-entity is "Machine-Transport Lift"
			metadata value "Machine-Transport Lift" of loop-entity is "%{_player}%"
			set {_exist} to true
		if {_exist} is true:
			kitFakeReload({_player}, "Machine-Transport Lift")
		else:
			delete {Ult.%{_player}%::Engineer}
	loop all entities:
		type of loop-entity is armor stand
		metadata value "Kit-EngineerUlt" of loop-entity is "%{_player}%"
		delete loop-entity